{"version":3,"file":"bind-model.esm.min.js","sources":["../node_modules/logic-core/src/load-json.js","../node_modules/logic-core/src/message.js","../node_modules/logic-core/src/message-wrap.js","../node_modules/logic-core/src/locales/default.js","../node_modules/logic-core/src/extend-error.js","../node_modules/logic-core/src/type.js","../node_modules/logic-core/src/util.js","../node_modules/logic-core/src/event-emitter.js","../node_modules/logic-core/src/i-object.js","../node_modules/logic-core/src/i-marshal.js","../node_modules/logic-core/src/i-collection.js","../node_modules/logic-core/src/i-collection-property.js","../node_modules/logic-core/src/i-element.js","../node_modules/logic-core/src/i-list.js","../node_modules/logic-core/src/i-control-list.js","../node_modules/logic-core/src/i-serialize.js","../node_modules/logic-core/src/i-collection-array.js","../node_modules/logic-core/src/namespace-manager.js","../node_modules/logic-core/src/meta-registry.js","../node_modules/logic-core/src/meta-object.js","../node_modules/logic-core/src/meta-element.js","../node_modules/logic-core/src/base-collection.js","../node_modules/logic-core/src/collection-array.js","../node_modules/logic-core/src/collection-property.js","../node_modules/logic-entity/src/message-wrap.js","../node_modules/logic-entity/src/locales/default.js","../node_modules/logic-entity/src/i-control-export.js","../node_modules/logic-entity/src/i-control-group.js","../node_modules/logic-entity/src/i-control-import.js","../node_modules/logic-entity/src/i-control-schema.js","../node_modules/logic-entity/src/i-transaction.js","../node_modules/logic-entity/src/trans-queue.js","../node_modules/logic-entity/src/collection-transaction.js","../node_modules/logic-entity/src/meta-row.js","../node_modules/logic-entity/src/collection-meta-row.js","../node_modules/logic-entity/src/base-column.js","../node_modules/logic-entity/src/meta-column.js","../node_modules/logic-entity/src/object-column.js","../node_modules/logic-entity/src/base-column-collection.js","../node_modules/logic-entity/src/collection-meta-view-column.js","../node_modules/logic-entity/src/collection-meta-table-column.js","../node_modules/logic-entity/src/base-entity.js","../node_modules/logic-entity/src/meta-table.js","../node_modules/logic-entity/src/collection-meta-table.js","../node_modules/logic-entity/src/meta-view.js","../node_modules/logic-entity/src/collection-meta-view.js","../node_modules/logic-entity/src/meta-set.js","../src/message-wrap.js","../src/locales/default.js","../src/util-wrap.js","../src/i-bind.js","../src/i-bind-command.js","../src/i-bind-model.js","../src/i-command-callback.js","../src/i-model-callback.js","../src/i-service.js","../src/i-service-ajax.js","../src/html-column.js","../src/base-bind.js","../src/base-bind-command.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/utils.js","../node_modules/axios/lib/core/AxiosError.js","../node_modules/axios/lib/helpers/toFormData.js","../node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/defaults/transitional.js","../node_modules/axios/lib/platform/browser/index.js","../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","../node_modules/axios/lib/platform/browser/classes/FormData.js","../node_modules/axios/lib/platform/browser/classes/Blob.js","../node_modules/axios/lib/platform/common/utils.js","../node_modules/axios/lib/platform/index.js","../node_modules/axios/lib/helpers/formDataToJSON.js","../node_modules/axios/lib/defaults/index.js","../node_modules/axios/lib/helpers/toURLEncodedForm.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/core/AxiosHeaders.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/cancel/CanceledError.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/helpers/progressEventReducer.js","../node_modules/axios/lib/helpers/speedometer.js","../node_modules/axios/lib/helpers/throttle.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/helpers/resolveConfig.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/axios/lib/helpers/composeSignals.js","../node_modules/axios/lib/helpers/trackStream.js","../node_modules/axios/lib/adapters/fetch.js","../node_modules/axios/lib/adapters/adapters.js","../node_modules/axios/lib/helpers/null.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/env/data.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/helpers/HttpStatusCode.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/axios/index.js","../src/bind-command.js","../src/base-bind-model.js","../src/bind-model.js"],"sourcesContent":["/**** load-json.cjs loadJSON() ESM module ****/\n//==============================================================\nconst isNode = typeof globalThis.isDOM === 'boolean' ? !globalThis.isDOM :  typeof process !== 'undefined' && process.versions !== null && process.versions.node !== null;\n\nasync function loadJSON(filePath) {\n    try {\n        if (isNode) {    \n            const { readFile } = await import('fs/promises');\n            const absolutePath = await getLocalePath(filePath);\n            const jsonText = await readFile(absolutePath, 'utf8');\n            return JSON.parse(jsonText);\n        } else {\n            const absolutePath = await getLocalePath(filePath);\n            const response = await fetch(absolutePath);\n            return await response.json();\n        }\n    } catch (error) {\n        return undefined;\n    }\n}\n\nasync function getLocalePath(filename) {\n    if (isNode) {\n        const { fileURLToPath } = await import('url');\n        const path = await import('path');\n        const __filename = fileURLToPath(import.meta.url);\n        const __dirname = path.dirname(__filename);\n        return path.resolve(__dirname, filename);\n    }\n    if (typeof window !== 'undefined') {\n        let baseURL = '';\n\n        if (typeof document !== 'undefined' && document.currentScript) {\n            baseURL = document.currentScript.src;\n        } else if (typeof import.meta !== 'undefined' && import.meta.url) {\n            baseURL = import.meta.url;\n        } else {\n            throw new Error('Unable to determine base URL in browser.');\n        }\n        return new URL(filename, baseURL).href;\n    }\n    throw new Error('Unsupported environment');\n}\n\nexport { loadJSON };","/**** message.js | Message ****/\n//==============================================================\nimport { loadJSON } from './load-json.js';\n\n// inner function\nfunction _isObject(obj) {\n    return obj && typeof obj === 'object' && !Array.isArray(obj);\n}\n\nfunction _isString(obj) {    // 공백아닌 문자 여부\n    if (typeof obj === 'string' && obj.length > 0) return true;\n    return false;\n}\nfunction _deepMerge(target, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            var targetValue = target[key];\n            var sourceValue = source[key];\n            if (_isObject(sourceValue)) {\n                if (!_isObject(targetValue)) {\n                    target[key] = {};\n                }\n                target[key] = _deepMerge(target[key], sourceValue);\n            } else {\n                target[key] = sourceValue;\n            }\n        }\n    }\n    return target;\n}\n\nfunction _getLocale() {\n    let locale = '';\n\n    if (typeof window !== 'undefined' && typeof navigator !== 'undefined') {\n        // 브라우저 환경\n        const lang = navigator.languages?.[0] || navigator.language || Intl.DateTimeFormat().resolvedOptions().locale;\n        locale = lang.split(/[_-]/)[0]; // \"ko-KR\" -> \"ko\"\n    } else if (typeof process !== 'undefined') {\n        // Node.js 환경\n        const rawLocale = process.env.LANG || process.env.LC_ALL || process.env.LANGUAGE;\n        if (rawLocale) {\n            locale = rawLocale.split(/[:_.]/)[0].replace('_', '-'); // \"ko_KR.UTF-8\" -> \"ko\"\n        }\n    }\n    return locale || 'en';\n}\n\nfunction _replacePlaceholders (p_template, p_values) {\n    let namedValues = {}, indexedValues = [];\n    \n    if (Array.isArray(p_values)) indexedValues = p_values;\n    else if (typeof p_values === 'object') namedValues = p_values;\n\n    // `${변수명}` 치환\n    p_template = p_template.replace(/\\$\\{(\\w+)\\}/g, function(match, key) {\n        return namedValues.hasOwnProperty(key) ? namedValues[key] : match;\n    });\n    // `$1, $2` 치환\n    p_template = p_template.replace(/\\$(\\d+)/g, function(match, index) {\n        var i = parseInt(index, 10) - 1;\n        return indexedValues[i] !== undefined ? indexedValues[i] : match;\n    });\n\n    return p_template;\n};\n\n/**\n * 'Message' is a class that manages messages and codes.  \n */\nclass Message {\n\n    /**\n     * Namespace path. ('Common')\n     */\n    static _NS = 'Common';\n    \n    /**\n     * Internal repository that stores message code.  \n     */\n    static $storage = {\n        lang: { default: {} },\n        path: [],\n        _history: {}\n    };\n    \n    /**\n     * Sets whether automatic language detection is enabled. Default is true.  \n     */\n    // static autoDetect = true;\n    \n    /**\n     * Set the default language. Default is 'default'.  \n     */\n    static defaultLang = 'default';\n    \n    /**\n     * Sets the current language. Default is 'default'.  \n     */\n    static currentLang = this.defaultLang;\n    \n    /**\n     * Returns a message that corresponds to the message code.  \n     * \n     * @param {string} p_code Message code\n     * @returns {string} Message String\n     */\n    static getMessageByCode (p_code) {\n        var value = this.$storage.lang[this.currentLang]?.[p_code] || this.$storage.lang[this.defaultLang]?.[p_code];\n        return typeof value === 'number' ? String(value) : value;\n    };\n\n    /**\n     * Add the message code to the storage.  \n     * \n     * @param {object} p_msg Message Object\n     * @param {string} p_path Message file path\n     */\n    static importMessage (p_msg, p_path) {\n        if (_isObject(p_msg)) {\n            _deepMerge(this.$storage.lang.default, p_msg);\n            if (_isString(p_path)) {\n                // if (isNode && isESM) {  // REVIEW: esm module & node\n                //     const { fileURLToPath } = await import('url');\n                //     const { dirname, resolve } = await import('path');\n\n                //     const __filename = fileURLToPath(import.meta.url);\n                //     const __dirname = dirname(__filename);\n                //     p_path = resolve(__dirname, p_path);\n                // }\n                if (this.$storage.path.indexOf(p_path) < 0) this.$storage.path.push(p_path);\n            }\n        }\n        // locale = _getLocale();\n        // if (locale === 'en') locale = 'default';\n        // else await Message.changeLanguage(locale);\n    };\n\n    /**\n     * Change the language.  \n     * \n     * @param {string} p_lang language code\n     */\n    static async changeLanguage (p_lang) {\n        var msg;\n        this.currentLang = p_lang;\n        if (p_lang === 'default') return;\n        for (var i = 0; i < this.$storage.path.length; i++) {\n            const localPath = this.$storage.path[i];\n            // var msg = await loadJSON(`${localPath}/${p_lang}.json`);\n            // initialize the language\n            this.$storage.lang[p_lang] = this.$storage.lang[p_lang] || {};\n            this.$storage._history[p_lang] = this.$storage._history[p_lang] || [];\n            \n            const _history = this.$storage._history[p_lang];\n            if (_history.indexOf(localPath) >= 0) continue;\n            msg = await loadJSON(`${localPath}/${p_lang}.json`);\n\n            if (typeof msg === 'object') {\n                _deepMerge(this.$storage.lang[p_lang], msg);\n                _history.push(localPath);\n            } else console.warn(`Path '${localPath}/${p_lang}.json' does not have a file.`);\n        }\n    }\n\n    /**\n     * Returns a string corresponding to the given message code.  \n     * \n     * @param {string} p_code Message code\n     * @param {object | string[]} p_values Value to replace in message\n     * @returns {string} 메시지\n     */\n    static get (p_code, p_values) {\n        var msg = Message.getMessageByCode(p_code);\n        var result;\n\n        if (typeof msg === 'undefined') {\n            return `There is no message for code. '${p_code}'`;\n        }\n        result = _replacePlaceholders(msg, p_values);\n        return $intro(p_code) + result;\n\n        // inner funciton\n        function $intro(code) {\n            var intro = '';\n            var firstChar = code.substring(0, 1);\n            \n            if (firstChar === 'E') intro = 'Error';\n            else if (firstChar === 'W') intro = 'Warn';\n            return intro + ' ['+ code +'] ';\n        }\n    };\n\n    /**\n     * Initialize the language.  \n     */\n    static resetLang () {\n        this.currentLang = this.defaultLang;\n    }\n\n    /**\n     * Set the current language by automatically detecting the language.  \n     */\n    static async autoDetect () {\n        let locale = _getLocale();  // internal function\n\n        if (locale === 'en') locale = 'default';\n        await Message.changeLanguage(locale);\n    }\n}\n\nexport default Message;\nexport { Message };","/**** message-wrap.js | Message ****/\n//==============================================================\nimport { Message }          from './message.js';\nimport  defaultCode         from './locales/default.js';\n\nconst localesPath = './locales';    // 상대 경로\n\nMessage.importMessage(defaultCode, localesPath);\n\nawait Message.autoDetect();\n\nexport default Message;\nexport { Message };\n","/* eslint-disable */\nexport default {\n    \"ES010\": \"Other errors\",\n    \"ES011\": \"Failed to get module ['$1']\",\n    \"ES012\": \"Failed to get function ['$1'()\",\n    \"ES013\": \"[$1] failed to process [$2]\",\n    \"ES021\": \"[$1] can only be of type [$2]\",\n    \"ES022\": \"[$1] is an unprocessable typo\", \n    \"ES023\": \"[$1] is not type [$2]\",\n    \"ES031\": \"[$1] is not an object\",\n    \"ES032\": \"[$1] is not an instance of [$2]\",\n    \"ES033\": \"The object in [$1] is different from [$2]\",\n    \"ES041\": \"[$1] is duplicated with [$2]\",\n    \"ES042\": \"[$2] exists in [$1] and cannot measure [$3]\",\n    \"ES043\": \"[$1] cannot be added because [$1] exists in [$1] \",\n    \"ES044\": \"[$1] is a reserved word \",\n    \"ES051\": \"Required value [$1] not found\",\n    \"ES052\": \"[$1] requires [$2]\",\n    \"ES053\": \"[$2] does not exist in [$1]\",\n    \"ES054\": \"[$1] cannot be blanked\",\n    \"ES061\": \"Exceeded the range [$2] of [$1]\",\n    \"ES062\": \"[$1] cannot be less than [$2]\",\n    \"ES063\": \"[$1] and [$2] have different lengths\",\n    \"ES064\": \"and(&) condition check failed. $1\",\n    \"ES065\": \"Or(|) condition check failed. $1\",\n    \"ES066\": \"[$1] ranges from [$2] to [$3]\",\n    \"EL01100\": \"----- util-type.js match -----\",\n    \"EL01101\": \"Type match: You must specify a detailed type of $1.$1: $2\",\n    \"EL01102\": \"Type match : target is not type '$1'. tarType : $2\",\n    \"EL01103\": \"Type match: cannot handle type\",\n    \"EL01110\": \"----- match array -----\",\n    \"EL01111\": \"Array match: target is not array type. tarType: $1\",\n    \"EL01112\": \"Array match : array(_ANY_) type must have at least one element of target array. target.length = $1\",\n    \"EL01113\": \"Array match: target array is less than array(_SEQ_) type length. extType.length = $1, target.length = $2\",\n    \"EL01114\": \"Array match: array(_SEQ_) [$1]th literal type is different from target value. extType[$1] = $2, target[$1] = $3\",\n    \"EL01115\": \"Array match: array(_SEQ_) [$1]th type check failed. extType[$1] = $2\",\n    \"EL01116\": \"Array match : array(_REQ_) type must have at least one element of target array. target.length = $1\",\n    \"EL01117\": \"Array match : array($1) is the type of array that cannot be handled\",\n    \"EL01118\": \"Array match: array element check failed. extType: $1, tarType: $2\",\n    \"EL01120\": \"----- match choice -----\",\n    \"EL01121\": \"Choice match: 'undefined' is not available for choice(_ANY_) type\",\n    \"EL01122\": \"Choice match: 'undefined' only for choice(_NON_) type\",\n    \"EL01123\": \"Choice match: Error instance only for choice(_ERR_) type\",\n    \"EL01124\": \"Choice match: choice(_EUM_) type details can only be literal. extType[$1]: $2\",\n    \"EL01125\": \"Choice match: the first subtype of choice(_DEF_) type is literal only. extType[0]: $1\",\n    \"EL01126\": \"Choice match : choice($1) is a type of choice that cannot be handled\",\n    \"EL01127\": \"Choice match: choice detailed type check failed. extType: $1, tarType: $2\",\n    \"EL01130\": \"----- match class -----\",\n    \"EL01131\": \"Class match: Inspection failed after creating class type as union type (opt = 1)\",\n    \"EL01132\": \"Class match: target is not an instance of [$1]\",\n    \"EL01133\": \"Class match: target is not class, object, or union type. tarType: $1\",\n    \"EL01140\": \"----- match union -----\",\n    \"EL01141\": \"Union match: target is not union type. tarType: $1\",\n    \"EL01142\": \"Union match: target['$1'] key does not exist. extType['$1'] = $2\",\n    \"EL01143\": \"Union match: '$1' type check failed\",\n    \"EL01150\": \"----- match function -----\",\n    \"EL01151\": \"Function match: target is not function type. tarType: $1\",\n    \"EL01152\": \"Function match: declared extType.name = '$1' and target name do not match: function.name = '$2'\",\n    \"EL01153\": \"Function match : declared extType.func, target.func is not function type\",\n    \"EL01154\": \"Function match: extType.func and target.func are different (proto check)\",\n    \"EL01155\": \"Function match: You must set the params or return object of the target. extType.param = $1, extType.return = $2\",\n    \"EL01156\": \"Function match: params acceptance test denied. <array(_SEQ_) conversion>\",\n    \"EL01157\": \"Function Match: Return Acceptance Test Denied\",\n    \"EL01200\": \"----- allow -----\",\n    \"EL01201\": \"Type allowed: You must specify a subtype of $1.$1: $2\",\n    \"EL01202\": \"Type allowed: different from type 1 literal value. extType = $2, tarType = $3\",\n    \"EL01203\": \"Type allowed: not type $1. tarType = $2\",\n    \"EL01204\": \"Type allowed: type not processable\",\n    \"EL01210\": \"----- allow array -----\",\n    \"EL01211\": \"Array permit: Not array type. tarType: $1\",\n    \"EL01212\": \"Type allowed: array(_ALL_, _OPT_) type is not allowed for array(_ANY_) type. tarType: $1\",\n    \"EL01213\": \"Allow array: Only array(_SEQ_) type is allowed for array(_SEQ_) type. tarType: $1\",\n    \"EL01214\": \"Array permit: tarType must be equal to or greater than the length of array(_SEQ_) type of extType.length = $1, target.length = $2\",\n    \"EL01215\": \"Array Allowance: array(_SEQ_) [$1]th type check failed\",\n    \"EL01216\": \"Allow array : Do not allow array(_ALL_, _ANY_, _OPT_) type for array(_REQ_). tarType: $2\",\n    \"EL01217\": \"Allow array: Do not allow array(_ALL_, _ANY_) type for array(_OPT_). tarType: $2\",\n    \"EL01218\": \"Allow array : array($1) is the type of array that cannot be handled\",\n    \"EL01219\": \"Array element check failed. extType: $1, tarType: $2\",\n    \"EL01220\": \"----- allow choice -----\",\n    \"EL01221\": \"Choice allowed: do not allow choice(_ERR_) type for choice(_ALL_). tarType: $1\",\n    \"EL01222\": \"Choice allowed: 'undefined' type is not allowed for choice(_ANY_) type\",\n    \"EL01223\": \"Choice allowed: choice(_NON_, _ERR_) type is not allowed for choice(_ANY_) type. tarType: $1\",\n    \"EL01224\": \"Choice allowed: only choice(_NON_) type and choice(_NON_) type. tarType: $1\",\n    \"EL01225\": \"Choice allowed: choice(_ERR_) type and choice(_ERR_) type only. tarType: $1\",\n    \"EL01226\": \"Choice allowed: do not allow choice(_ALL_, _ANY_, _OPT_, _NON_, _ERR_) type for choice(_REQ_). tarType: $1\",\n    \"EL01227\": \"Choice allowed: do not allow choice(_ALL_, _ANY_, _NON_, _ERR_) type for choice(_OPT_). tarType: $1\",\n    \"EL01228\": \"Choice allowed: choice(_EUM_) type and choice(_EUM_) type only\",\n    \"EL01229\": \"Choice allowed: choice(_EUM_) subtype can only be literal. extType[$1]: $2\",\n    \"EL0122A\": \"Choice allowed: the subtype of tarType choice(_EUM_) can only be literal. tarType[$1]: $2\",\n    \"EL0122B\": \"Choice allowed: choice(_DEF_) type and choice(_DEF_) type only\",\n    \"EL0122C\": \"Choice allowed: the first subtype of extType choice(_DEF_) is literal only. extType[0]: $1\",\n    \"EL0122D\": \"Choice allowed: the first subtype of tarType choice(_DEF_) is literal only. tarType[0]: $1\",\n    \"EL0122E\": \"Choice allowed: choice($1) is a type of choice that cannot be handled\",\n    \"EL0122F\": \"Choice allowed: tarType[$1] = $3, no extType allowed. extType = $2\",\n    \"EL01230\": \"----- allow class -----\",\n    \"EL01231\": \"Class allowed: ExtType, tarType class failed after creating a union type. (opt = 1)\",\n    \"EL01232\": \"Class allowed: class to class denied. (opt = $1)\",\n    \"EL01233\": \"Class allowed: Inspection failed after creating tarType class type as union type (opt = 1)\",\n    \"EL01234\": \"Class allowed: class to union denied. (opt = $1)\",\n    \"EL01235\": \"Class allowed: tarType is not class, union type. tarType: $1\",\n    \"EL01240\": \"----- allow union -----\",\n    \"EL01241\": \"Union allowed: tarType is not a union type. tarType: $1\",\n    \"EL01242\": \"Union allowed: tarType['$1'] key does not exist. extType['$1'] = $2\",\n    \"EL01243\": \"Union allowed: Type '$1' check failed\",\n    \"EL01250\": \"----- allow function -----\",\n    \"EL01251\": \"Allow function : tarType is not function type. tarType : $1\",\n    \"EL01252\": \"Function allowed: declared extType.name = '$1' and target name do not match: function.name = '$2'\",\n    \"EL01253\": \"Function allowed: declared extType.func, target.func is not of function type\",\n    \"EL01254\": \"Function allowed: extType.func and target.func are different (proto check)\",\n    \"EL01255\": \"Function permit: params or return object of tarType must be set. extType.param = $1, extType.return = $2\",\n    \"EL01256\": \"Function permit: params permit test denied. <array(_SEQ_) conversion>\",\n    \"EL01257\": \"Function Permitted: Return Permitted Test Denied\",\n    \"EL01300\": \"----- util-type.js -----\",\n    \"EL01301\": \"Parcing check: function is not a rule: '$1'\",\n    \"EL01302\": \"Parcing inspection: function has no argument, body content. '$1'\",\n    \"EL01303\": \"Parcing inspection: function parsing failed $1\",\n    \"EL01304\": \"Type check: [$1] is a special type to handle\",\n    \"EL01305\": \"Type check: array($1) type is a specular type that cannot be handled\",\n    \"EL01306\": \"Type check: choice($1) type is a special type that cannot be handled\",\n    \"EL01307\": \"Type check: array($1) type is a type that cannot be handled\",\n    \"EL01308\": \"Type check: choice($1) type is a type that cannot be handled\",\n    \"EL01309\": \"REVIEW:\",\n    \"EL0130A\": \"Type allowed: allowType (extType, tarType) scan failed\",\n    \"EL0130B\": \"Type match: matchtype (extType, target) check failed\",\n    \"EL0130C\": \"ctor is not function type. type aperture = $1\",\n    \"EL01400\": \"----- util.js -----\",\n    \"EL01401\": \"implements(ctor, obj, args..); ctor is not of type <function> == '$1'\",\n    \"EL01402\": \"implements(ctor, obj, args..); obj is not of type <object> type of obj == '$1'\",\n    \"EL01403\": \"implements(ctor, obj, args..); args[$1] is not type <function>. type of args[$1] == '$2'\",\n    \"EL01404\": \"[$1] must implement type [$2]. $1._KIND = '$3'\",\n    \"EL01405\": \"isImplementOf(target); target is of type <function, string> only. type of target = '$1'\",\n    \"EL01500\": \"----- etc -----\",\n    \"EL01501\": \"$1.$events is obejct type. type of $events $2\",\n    \"EL01502\": \"$1.isLog is boolean type. type isLog $2\",\n    \"EL01503\": \"on(event, listener); event is not of type <string> type of event == '$1'\",\n    \"EL01504\": \"on(event, listener); listener is not of type <function> type of listener == '$1'\",\n    \"EL01505\": \"once(event, listener); event is not of string type. typeof event == '$1'\",\n    \"EL01506\": \"once(event, listener); listener 는 <function> 타입이 아닙니다. typeof listener == '$1'\",\n    \"EL01507\": \"off(event, listener); event is not of type <string> type of event == '$1'\",\n    \"EL01508\": \"off(event, listener); listener 는 <function> 타입이 아닙니다. typeof listener == '$1'\",\n    \"EL01509\": \"emit(event); event is not of type <string> type of event == '$1'\",\n    \"EL01510\": \"\",\n    \"EL02100\": \"----- Interface.* -----\",\n    \"EL02110\": \"----- i-object.js -----\",\n    \"EL02111\": \"getType(): array<function> is an abstract method. [$1] must be implemented\",\n    \"EL02112\": \"instanceOf(any): boolean is an abstract method. [$1] must be implemented\",\n    \"EL02113\": \"equal(any): boolena is an abstract method. [$1] must be implemented\",\n    \"EL02120\": \"----- i-marshal.js -----\",\n    \"EL02121\": \"getObject(opt?, origin?) : object is abstract method. [$1] must be implemented\",\n    \"EL02122\": \"setObject(mObj) is an abstract method. [$1] must be implemented\",\n    \"EL02130\": \"----- i-element.js -----\",\n    \"EL02131\": \"clone(): object is an abstract method. [$1] must be implemented\",\n    \"EL02140\": \"----- i-list.js -----\",\n    \"EL02150\": \"----- i-control-list.js -----\",\n    \"EL02151\": \"add(key) is an abstract method. [$1] must be implemented\",\n    \"EL02152\": \"del(key) is an abstract method. [$1] must be implemented\",\n    \"EL02153\": \"has(key): boolean is an abstract method. [$1] must be implemented\",\n    \"EL02154\": \"find(any): any is an abstract method. [$1] must be implemented\",\n    \"EL02160\": \"----- i-collection.js -----\",\n    \"EL02161\": \"add(any): boolean is an abstract method. [$1] must be implemented\",\n    \"EL02162\": \"remove(elem): boolean is an abstract method. [$1] must be implemented\",\n    \"EL02163\": \"cantains(any): boolean is an abstract method. [$1] must be implemented\",\n    \"EL02164\": \"indexOf(any): number is an abstract method. [$1] must be implemented\",\n    \"EL02170\": \"----- i-collection-array.js -----\",\n    \"EL02171\": \"insertAt(pos, val, ..): boolean is an abstract method. [$1] must be implemented\",\n    \"EL02180\": \"----- i-collection-property.js -----\",\n    \"EL02181\": \"indexToKey(idx): string is an abstract method. [$1] must be implemented\",\n    \"EL02190\": \"----- i-serialize.js -----\",\n    \"EL02191\": \"output(opt, ...): string is an abstract method. [$1] must be implemented\",\n    \"EL02192\": \"load(any, ...) is an abstract method. [$1] must be implemented\",\n    \"EL02300\": \"----- Meta.Entity.* -----\",\n    \"EL03100\": \"----- Meta.* -----\",\n    \"EL03110\": \"----- meta-object.js -----\",\n    \"EL03111\": \"You cannot create abstract, interface, enum type. $1['_KIND'] = '$2'\",\n    \"EL03112\": \"setObject(oGuid, origin); oGuid 는 'object' 타입입니다. typeof oGuid = '$1'\",\n    \"EL03113\": \"setObject(oGuid, origin); different namespaces. this._type = $1, oGuid._type = $2\",\n    \"EL03114\": \"setObject(oGuid, origin); origin 은 Guid 객체가 아닙니다. origin._type = '$1', origin._guid = '$2'\",\n    \"EL03120\": \"----- meta-element.js -----\",\n    \"EL03121\": \"$name;val is of type 'string'. type of valve = '$1'\",\n    \"EL03122\": \"$name; val.length must be greater than 0\",\n    \"EL03200\": \"----- meta-registry.js -----\",\n    \"EL03211\": \"register(meta); the meta to register is not a Guide object. meta._type = '$1', meta._guid = '$2'\",\n    \"EL03212\": \"register(meta); meta._guid to register is already registered. meta._guid = '$1'\",\n    \"EL03213\": \"release(meta); the meta to release is string(guid) | object(guid) type only. type of meta = '$1'\",\n    \"EL03220\": \"----- create -----\",\n    \"EL03221\": \"createMetaObject(oGuid, origin); oGuid can only be of type 'object'. typeof oGuid = '$1'\",\n    \"EL03222\": \"createMetaObject(oGuid, origin); oGuid._type 은 'string' 타입만 가능합니다.(length > 0) typeof oGuid._type = '$1'\",\n    \"EL03223\": \"createMetaObject(oGuid, origin); origin can only be of type 'object'. typeof origin = '$1'\",\n    \"EL03224\": \"createMetaObject(oGuid, origin);[$1] Namespace is not of type 'function'. type of coClass = '$2'\",\n    \"EL03225\": \"createReferObject(meta); meta can only be of type 'object'. type of meta = '$1'\",\n    \"EL03226\": \"createReferObject(meta); meta._guid 은 'string' 타입만 가능합니다.(length > 0) typeof meta._guid = '$1'\",\n    \"EL03227\": \"createNsReferObject(fun); fun is not type 'function'. type of fun = '$1'\",\n    \"EL03230\": \"----- ns Class -----\",\n    \"EL03231\": \"register Class(fun, ns, key); fun is not of type 'function'. type of fun = '$1'\",\n    \"EL03232\": \"registerClass(fun, ns, key); ns is not of type 'string'. typeofns = '$1'\",\n    \"EL03233\": \"register Class(fun, ns, key); key is not of type 'string'. type of key = '$1'\",\n    \"EL03234\": \"releaseClass(fullName); fullName 은 'string' 타입만 가능합니다.(length > 0) typeof fullName = '$1'\",\n    \"EL03235\": \"findClass(fun); fun is not type 'function'. type of fun = '$1'\",\n    \"EL03236\": \"getClass(fullName); fullName can only be of type 'string' (length > 0) type of fullName = '$1'\",\n    \"EL03240\": \"----- set, transform, load -----\",\n    \"EL03241\": \"setMetaObject(oGuid, meta); oGuid can only be of type 'object'. typeof oGuid = '$1'\",\n    \"EL0324\": \"setMetaObject(oGuid, meta); meta can only be of type 'object'. type of meta = '$1'\",\n    \"EL03243\": \"setMetaObject(meta); meta._guid can only be of type 'string' (length > 0) type of meta._guid = '$1'\",\n    \"EL03244\": \"transformRefer(oGuid); oGuid can only be of type 'object'. type oGuid = '$1'\",\n    \"EL03245\": \"transformRefer(oGuid); $1['$2']['$ns'] is not of type 'function'\",\n    \"EL03246\": \"loadMetaObject(str, path?); str is only of type 'string'. typeof str = '$1'\",\n    \"EL03247\": \"loadMetaObject(str, path?); The object parsed str is not a Guide object. obj._type = '$1', obj._guid = '$2'\",\n    \"EL03250\": \"----- has, valid, find -----\",\n    \"EL03251\": \"validObject(oGuid); oGuid is only of type 'object'. typeof oGuid = '$1'\",\n    \"EL03252\": \"hasGuidObject(oGuid, origin); guid can only be of type 'string' (length > 0) type of guid = '$1'\",\n    \"EL03253\": \"hasGuidObject(oGuid, origin); origin[$1]는 'object' 타입이 아닙니다. typeof origin[$1] = '$2'\",\n    \"EL03254\": \"hasRefer(oGuid); oGuid can only be of type 'object'. typeof oGuid = '$1'\",\n    \"EL03255\": \"hasRefer(oGuid); oGuid is not a Guide object. oGuid._type = '$1', oGuid._guid = '$2'\",\n    \"EL03256\": \"findSetObject(oGuid, origin); [ oGuid._guid | oGuid ]는 'string' 타입만 가능합니다.(length > 0) guid = '$1'\",\n    \"EL03257\": \"findSetObject(oGuid, origin); origin can only be of type 'object'. typeof origin = '$1'\",\n    \"EL03300\": \"----- namespace-manager.js -----\",\n    \"EL03310\": \"----- private function, proterty -----\",\n    \"EL03311\": \"NamespaceManager.allowOverlap 은  'boolean' 타입만 가능합니다. typeof allowOverlap = $1\",\n    \"EL03312\": \"_getArray(ns); ns is not a valid namespace name rule. ns = $1\",\n    \"EL03313\": \"_getArray(ns); ns type is 'string', 'array<string>' only typeofns = $1\",\n    \"EL03314\": \"_getArray(ns); ns[$1] is not type 'string'. typeofns[$1] = $2\",\n    \"EL03315\": \"_getArray(ns); ns[$1] is not a valid name rule. ns[$1] = $1\",\n    \"EL03320\": \"----- addNamespace, delNamespace, path -----\",\n    \"EL0321\": \"addNamespace(ns); addition of namespace failed\",\n    \"EL03322\": \"delNamespace(ns); Namespace deletion failed\",\n    \"EL0323\": \"path(ns); failed to get the namespace path\",\n    \"EL03330\": \"----- add, del -----\",\n    \"EL03331\": \"add(fullName,lem); [$1] is not a valid name rule\",\n    \"EL03332\": \"add(fullName,lem);lem is already registered. Allow duplicate [this.allowOverlap = 'true']\",\n    \"EL03333\": \"add(fullName,lem); failed to register elements in the namespace\",\n    \"EL03334\": \"del(fullName); Failed to delete element in Namespace\",\n    \"EL03340\": \"----- getPath, output, load -----\",\n    \"EL03341\": \"getPath(elem); no element value. typeoflem = $1\",\n    \"EL03342\": \"output (stringify, space); Namespace export failed. $1\",\n    \"EL03343\": \"load(str, path); str is not type 'string'. typeofstr = $1\",\n    \"EL03344\": \"load(str, path); Namespace loading failed. $1\",\n    \"EL04100\": \"----- Collection.* -----\",\n    \"EL04110\": \"----- base-collection.js -----\",\n    \"EL04111\": \"_remove(idx): boolean is an abstract method. Must be implemented\",\n    \"EL04112\": \"setObject(oGuid, origin); _owner connection of oGuid failed. guid = $1\",\n    \"EL04113\": \"removeAt(idx); idx is not type 'number'. typeof idx = $1\",\n    \"EL04114\": \"add(any): number is an abstract method. must be implemented\",\n    \"EL04115\": \"clear() is an abstract method. must be implemented\",\n    \"EL04116\": \"map(callback); callback is not function type. type of callback = $1\",\n    \"EL04117\": \"filter(callback); callback is not function type. type of callback = $1\",\n    \"EL04118\": \"reduce(callback); callback is not function type. type of callback = $1\",\n    \"EL04119\": \"find(callback); callback is not function type. type of callback = $1\",\n    \"EL041110\": \"forEach(callback); callback is not function type. type of callback = $1\",\n    \"EL041111\": \"Some(callback); callback is not function type. type of callback = $1\",\n    \"EL041112\": \"Every(callback); callback is not function type. type of callback = $1\",\n    \"EL041113\": \"findIndex(callback); callback 이 function 타입이 아닙니다. typeof callback = $1\",\n    \"EL04200\": \"\",\n    \"EL04210\": \"----- collection-array.js -----\",\n    \"EL04211\": \"_elements connection failed for setObject(oGuid, origin); oGuid['_elem'][$1]: guid = $2\",\n    \"EL04212\": \"insertAt(pos, value, desc); pos is not type 'number'. typeof pos = $1\",\n    \"EL04213\": \"insertAt(pos, value, desc); pos cannot be greater than this.count.pos = $1, count = $2\",\n    \"EL04214\": \"insertAt(pos, value, desc); pos cannot be less than 0. pos = $1\",\n    \"EL04215\": \"insertAt(pos, value, desc); registration failed. pos = $1, value = $2\",\n    \"EL04220\": \"----- collection-property.js -----\",\n    \"EL04221\": \"setObject(oGuid, origin); oGuid['_lem'].length = $1 length and oGuid['_key'].length = $2 length are different\",\n    \"EL04222\": \"setObject(oGuid, origin); oGuid['_elem'].length = $1 length and oGuid['_desc'].length = $2 length are different\",\n    \"EL04223\": \"setObject(oGuid, origin); oGuid._elem[$1] guid not found. guid = $2\",\n    \"EL04224\": \"indexOf(obj, isKey); if the index value is found by key, obj must be of type 'string'. typeof obj = $1\",\n    \"EL04225\": \"add(name, value, desc); name is not of type 'string'. type of name = $1\",\n    \"EL04226\": \"add(name, value, desc); name = '$1' is not valid for name rule. Rule = '$2'\",\n    \"EL04227\": \"add(name, value, desc); name = '$1' is the reserved word\",\n    \"EL04228\": \"add(name, value, desc); name = '$1' is duplicated with existing name\",\n    \"EL04229\": \"add(name, value, desc); addition failed. name = '$1', value = '$2'\",\n    \"EL0422A\": \"indexToKey(idx); idx is not of type 'number'. typeof idx = $1\",\n    \"EL0422B\": \"exists(key); key is not of type 'string' (length > 0) type of key = $1\",\n    \"EL04300\": \"\",\n    \"EL04310\": \"----- collection-transaction.js -----\",\n    \"EL04311\": \"$1.autoChanges 는 'boolean' 타입입니다. typeof aucoChanges = '$2'\",\n    \"EL04320\": \"----- trans-queue.js -----\",\n    \"EL04321\": \"collection value is not an instance that inherited [MetaObject]\",\n    \"EL04322\": \"collection is not an instance of [ArrayCollection]\",\n    \"EL04323\": \"rollback(); '$1' is an unprocessable cmd\",\n    \"WS011\": \"[$1] Destination [$2] cannot be deleted\",\n    \"EN\": \"OK\"\n}","/**** extend-error.js | ExtendError ****/\n//==============================================================\nimport Message          from './message-wrap.js';\n\n// inner function \nfunction _buildMessageProp(obj) {\n    var msg = '';\n    for (var prop in obj) {\n        if (typeof obj[prop] === 'string') msg += prop + ' : '+ obj[prop] + '\\n';\n        else continue;\n    }\n    return msg;\n}\nfunction _buildMsgQueue(queue) {\n    var msg = '';\n    var queue_cnt = queue.length;\n    for (var i = queue_cnt; i > 0; i--) {\n        var mark = '';\n        for (var j = i; j <= queue_cnt; j++) { mark += '#'; }\n        msg += '' + mark + ' '+ queue[i - 1] + '\\n';\n    }\n    return msg;\n}\n\nclass ExtendError extends Error {\n\n    static _NS = 'Common';      // namespace\n\n    /**\n     * Save previously generated messages.  \n     * \n     * @member {string[]} ExtendError#queue\n     */\n    queue = [];\n\n    /**\n     * Error message related to property type.  \n     * \n     * @member {object} ExtendError#prop\n     */\n    prop = {};\n\n    /**\n     * Use user messages to create an ExtendError instance.  \n     *\n     * @param {string} msg Error message string\n     * @param {ExtendError | object | null} causeOrProp Error message by existing ExtendError, Error object or property\n     *\n     * @example\n     * throw new ExtendError(\"Custom error message\");\n     * throw new ExtendError(\"Custom error message\", error);\n     * throw new ExtendError(\"Custom error message\", { style: \"required\" });\n     */\n\n    /**\n     * Create an instance of 'ExtendError' using the message code and substitution value.  \n     *\n     * @param {RegExp} msgPattern Code value of regular expression type\n     * @param {ExtendError | object | null} causeOrProp Error message by existing ExtendError, Error object or property\n     * @param {string[]} placeholders Array of strings containing substitution values such as '$1' and '$2' in the\n     *\n     * @example\n     * // For messages that do not have a substitution value\n     * throw new ExtendError(/EL01504/);\n     * throw new ExtendError(/EL01504/, error);\n     * throw new ExtendError(/EL01504/, { style: \"required\" });\n     * // For messages with substitution values\n     * throw new ExtendError(/EL01504/, undefined, ['value1', 'value2']);\n     * throw new ExtendError(/EL01504/, error, ['value1', 'value2']););\n     * throw new ExtendError(/EL01504/, { style: \"required\" }, ['value1', 'value2']);\n     */\n    constructor(p_msg, p_prop, p_codeVal) {\n        super();\n        \n        var _build = '';\n        var _prop;\n        var _queue = [];    \n        var _msg;\n\n        if (p_prop instanceof ExtendError) {\n            _queue = p_prop.queue;\n            _prop = p_prop.prop;\n        } else if (p_prop instanceof Error) {\n            _queue.push(p_prop.message);\n        } else if (typeof p_prop  === 'object' && p_prop !== null) {\n            _prop = p_prop;\n        }\n        \n        if (typeof p_msg === 'string') {\n            _msg = p_msg;\n        } else if (p_msg instanceof RegExp) {\n            _msg = Message.get(p_msg.source, p_codeVal);\n        } else _msg = '';\n        \n        _build = _msg + '\\n';\n        \n        if (_prop) _build += _buildMessageProp(_prop);\n        if (_queue.length > 0) _build += _buildMsgQueue(_queue);\n\n        this.message = _build;\n        this.queue = _queue;\n        this.queue.push(_msg);\n    }\n\n    /**\n     * Converts error messages into strings.  \n     * \n     * @return error message string\n     */\n    toString() {\n        return 'ExtendError : ' + this.message;\n    }\n}\n\nexport default ExtendError;\nexport { ExtendError };","/**** util-type.js Type ****/\n//==============================================================\nimport ExtendError      from './extend-error.js';\n \nvar _global = globalThis;\nvar OLD_ENV = _global.OLD_ENV ? _global.OLD_ENV : false;    // 커버리지 테스트 역활\n\n/**\n * This is a type module.\n */\nvar Type = {};\n\n/**\n * object 와 new 생성한 사용자 함수를 제외한 객쳐 여부  \n * \n * @param {*} obj \n * @returns {boolean}\n */\nfunction _isPrimitiveObj(obj) { // REVIEW: 정리 필요, 의미적으로 명료하게..\n    if(typeof obj === 'object' && obj !== null \n        && (obj instanceof RegExp || obj instanceof Date )) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * 최상위 object 이거나 사용자 함수에서 생성한 객체 여부  \n * \n * @param {*} obj \n * @returns {boolean}\n */\nfunction _isObject(obj)  {  // REVIEW: 정리 필요, 의미적으로 명료하게\n    if(typeof obj === 'object' && obj !== null && !_isPrimitiveObj(obj)) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * 공백객체 인지 확인  \n * \n * @param {*} obj 검사대상\n * @returns {boolean}\n */\nfunction _isEmptyObj(obj)  {\n    if(_isObject(obj) && Object.keys(obj).length === 0 && getAllProperties(obj).length === 0) return true;\n    return false;\n}\n\n/**\n * 공백이 아닌 객체 (prototype 및 속성 있는것)  \n * \n * @param {*} obj 대상 \n * @returns {boolean}\n */\nfunction _isFillObj(obj)  {\n    if(_isObject(obj) && getAllProperties(obj).length > 0) return true;\n    return false;\n}\n\n/**\n * 내장함수 유무  \n * \n * @param {*} obj \n * @returns {boolean}\n */\nfunction _isBuiltFunction(obj) {\n    if (typeof obj === 'function' && (false \n        || obj === Number || obj === String || obj === Boolean\n        || obj === Object || obj === Array || obj === Function\n        || obj === RegExp || obj === Date \n        || obj === Symbol || obj === BigInt\n    )) return true;\n    return false;\n}\n\n/**\n * 첫문자 대문자 여부  \n * \n * @param {string} strValue \n * @returns {boolean}\n */\nfunction _isUpper(strValue) {\n    var firstStr = strValue.charAt(0);\n    if (firstStr === '') return false;\n    if(firstStr === firstStr.toUpperCase()) return true;\n    return false;\n}\n\n/**\n * 리터럴 여부  \n * number, string, boolean, bigint, RexExp instance  \n * \n * @param {*} obj \n * @returns {boolean}\n */\nfunction _isLiteral(obj) {\n    if (typeof obj  === 'number') return true;\n    if (typeof obj  === 'string') return true;\n    if (typeof obj  === 'boolean') return true;\n    if (typeof obj  === 'bigint') return true;\n    if (obj instanceof RegExp) return true;\n    return false;\n}\n\n/**\n * 리터럴값 비교  \n * number, string, boolean, bigint, RexExp instance  \n * \n * @param {*} obj1 \n * @param {*} obj2 \n * @returns {boolean}\n */\nfunction _equalLiternal(obj1, obj2) {\n    if (obj1 === obj2) return true;\n    if (obj1 instanceof RegExp && obj2 instanceof RegExp && obj1.source === obj2.source) return true;\n    return false;\n}\n\n/**\n * function 생성하는 생성자\n * @param {*} type \n * @returns {object}\n */\nvar _creator = function(type) {\n    return new type;\n};\n\n/**\n * 타임명 얻기  \n * \n * @param {*} obj \n * @returns {string}\n */\nfunction _typeName(obj) {\n    return obj['name'];\n}\n\n/**\n * kind 코드, 대문자로 얻기 '_any_'...  \n * \n * @param {*} val \n * @returns {string}\n */\nfunction _getKeyCode(val) {\n    var reg = /^_[a-zA-Z]+_/;\n    var result;\n\n    if (typeof val !== 'string') return '';\n    result = reg.exec(val);\n    if (result !== null) return result[0].toUpperCase();\n    return '';\n}\n\n// 배열 구조 분해 할당을 해제 \nfunction restoreArrowFunction(transformedCode) {\n    // 1. 화살표 함수의 매개변수와 본문 전체를 추출\n    const regex = /\\((.*?)\\)\\s*=>\\s*\\{([\\s\\S]*)\\}/;\n    const match = transformedCode.match(regex);\n  \n    // 특별히 `_ref => { ... }` 형태도 대응할 수 있도록 추가 처리\n    //  -> _ref => { let [String] = _ref; return Number; }\n    //  -> 실제로는 ( _ref ) => { ... } 형태로 통일\n    if (!match) {\n        // 혹시 _ref => { ... } 형태라면, 강제로 괄호를 넣어 재시도\n        const altRegex = /^(.*?)\\s*=>\\s*\\{([\\s\\S]*)\\}/;\n        const altMatch = transformedCode.match(altRegex);\n        if (!altMatch) {\n            throw new Error('Invalid arrow function format.');\n        }\n        // altMatch[1] = \"_ref\"\n        // altMatch[2] = \"let [String] = _ref; return Number;\"\n        let altParams = altMatch[1].trim();\n        let altBody = altMatch[2].trim();\n    \n        // 화살표 함수 형태 통일:  ( _ref ) => { ... }\n        return restoreArrowFunction(`(${altParams}) => {${altBody}}`);\n    }\n  \n    // 2. 매개변수와 함수 본문 부분 분리\n    let params = match[1].trim();  // 함수의 매개변수 부분\n    let body = match[2].trim();    // 함수 본문\n  \n    // 3. 구조 분해 할당 패턴 (객체/배열 모두 대응) - 여러 줄(줄바꿈)도 허용\n    //    예: let { aa: String } = _ref5;  또는 let [[{ bb: Number }]] = _ref6;\n    const paramAssignments = body.match(/let\\s+(\\{[\\s\\S]*?\\}|\\[[\\s\\S]*?\\])\\s*=\\s*(\\w+);/g) || [];\n  \n    // 4. 찾아낸 구조 분해 할당들을 순회하며 매개변수( _ref5, _ref6 등 )를 원래 형태로 치환\n    paramAssignments.forEach(assign => {\n        // - parts[1]: { aa: String } 또는 [String] 등 (줄바꿈 포함 가능)\n        // - parts[2]: _ref5, _ref6 등\n        const parts = assign.match(/let\\s+(\\{[\\s\\S]*?\\}|\\[[\\s\\S]*?\\])\\s*=\\s*(\\w+);/);\n        if (parts) {\n            const extractedParam = parts[1].trim(); // 원래 구조\n            const originalParam = parts[2].trim();  // 변환된 변수명 (_ref5 등)\n    \n            // 매개변수 목록에 있던 _ref5 등을 { aa: String } 등으로 치환\n            const re = new RegExp(`\\\\b${originalParam}\\\\b`, 'g');\n            params = params.replace(re, extractedParam);\n        }\n    });\n  \n    // 5. return 문이 있다면 반환값을 추출\n    //    예: return Number; -> \"Number\"\n    const returnStatementMatch = body.match(/return\\s+(.*?);/);\n    let returnType = returnStatementMatch ? returnStatementMatch[1].trim() : '';\n  \n    // 6. 최종 복원 – return 문이 있다면 { return ... } 형태로, 없으면 { } 로\n    if (returnType) {\n        // 불필요한 공백 없애기 위해 파라메터 부분도 스페이스 정리\n        params = params.replace(/\\s+/g, '');\n        return `(${params})=>{return ${returnType}}`;\n    } else {\n        params = params.replace(/\\s+/g, '');\n        return `(${params})=>{}`;\n    }\n}\n\n/**\n * 함수 규칙   \n * - (params 내부에는 '()' 입력 금지)  \n * - 참조형 타입 금지 : new Function() 시점에 자동 해석됨  \n * \n * @param {*} funBody \n * @returns {object}\n */\nfunction _parseFunc(funBody) {\n    var syntax1 = /\\([,_\\[\\]{:}\\w\\s]*\\)\\s*(?:=>)?\\s*{\\s*.*\\s*.*\\s*}/;    // 제한 규칙\n    var syntax2 = /(\\(.*\\)|\\w+)\\s*(?:=>).*/;\n    var regFunc1 = /(?:function\\s)?\\(([\\[\\]{:}\\s\\w,]*)\\)\\s*(?:=>)?\\s*{(?:\\s*return\\s+|\\s*)?([\\[\\]{:}\\s\\w,]*);?\\s*}/;\n    var regFunc2 = /\\(?([\\[\\]{:}\\s\\w,]*)\\)?\\s*(?:=>)\\s*{?(?:\\s*return\\s+|\\s*)?([\\[\\]\\s\\w,]*);?\\s*}?/;\n    \n    var arrFunc;\n    var result = { params: [], return: undefined };\n    var arrParam = [];\n    var arrRetrun;\n    \n    // 배열 구조 분해 할당을 해제 \n    if (/\\blet\\b/.test(funBody)) funBody = restoreArrowFunction(funBody);\n    \n    funBody = $skipComment(funBody);\n\n    try {\n        if (syntax1.test(funBody)) arrFunc = regFunc1.exec(funBody);\n        else if (syntax2.test(funBody)) arrFunc = regFunc2.exec(funBody);\n        else throw new ExtendError(/EL01301/, null, [funBody]);\n        \n        if (arrFunc === null) throw new ExtendError(/EL01302/, null, [funBody]);\n\n        arrParam = (new Function('return ['+ arrFunc[1] +']'))();\n        result['params'] = arrParam;\n        \n        if (arrFunc[2] !== '') arrRetrun = (new Function('return '+ arrFunc[2]))();\n        result['return'] = arrRetrun;\n\n    } catch (error) {\n        throw new ExtendError(/EL01303/, error, ['']);\n    }\n\n    return result;\n\n    // inner function\n    function $skipComment(body) {    // 주석 제거 comment\n        var rBody = body;\n        var bloackComment = /\\/\\*[^](.*?)\\*\\//g;\n        var lineComment = /\\/\\/[^](.*?)(\\n|$)/g;\n\n        rBody = rBody.replace(bloackComment, '');\n        rBody = rBody.replace(lineComment, '');\n        return rBody;\n    }\n}\n\n/**\n * 타입 여부  \n * \n * @param {string} name \n * @returns {boolean}\n */\nfunction _hasType(name) {\n    var arr = [];\n    \n    if (typeof name !== 'string') return false;\n\n    arr = arr.concat(['null', 'undefined', 'number', 'string', 'boolean']);\n    arr = arr.concat(['array', 'function', 'object']);\n    arr = arr.concat(['choice', 'union', 'class']);\n    arr = arr.concat(['symbol', 'bigint', 'regexp']);\n    arr = arr.concat(['etc']);  // 예외 오류 코드 검출 \n\n    return arr.indexOf(name) > -1;\n}\n\n/**\n * 타입 여부  \n * \n * @param {string} name \n * @returns {boolean}\n */\nfunction _isLeafType(name) {\n    var arr = [];\n    \n    arr = arr.concat(['null', 'undefined', 'number', 'string', 'boolean']);\n    arr = arr.concat(['symbol', 'bigint', 'regexp', 'object']);\n\n    return arr.indexOf(name) > -1;\n}\n\n/**\n * choice type kind 여부  \n * \n * @param {string} name \n * @returns {boolean}\n */\nfunction _hasKindChoice(name) {\n    var arr = [];\n    \n    if (typeof name !== 'string') return false;\n    \n    arr = arr.concat(['_ALL_', '_ANY_', '_NON_', '_ERR_']);\n    arr = arr.concat(['_REQ_', '_OPT_', '_DEF_', '_EUM_']);\n    arr = arr.concat(['_ETC_']);  // 예외 오류 코드 검출 \n\n    return arr.indexOf(name) > -1;\n}\n\n/**\n * choice type kind 여부  \n * \n * @param {string} name \n * @returns {boolean}\n */\nfunction _hasKindArray(name) {\n    var arr = [];\n    \n    if (typeof name !== 'string') return false;\n\n    arr = arr.concat(['_ALL_', '_ANY_']);\n    arr = arr.concat(['_REQ_', '_OPT_', '_SEQ_']);\n    arr = arr.concat(['_ETC_']);  // 예외 오류 코드 검출 \n\n    return arr.indexOf(name) > -1;\n}\n\n/**\n * Query all properties of the object.\n * \n * @param {object} obj  Object to look up properties (except Object)\n * @param {boolean?} hasObj Whether to include properties of 'Object'\n * @returns {array<string>} Property Name Arrangement\n */\nfunction getAllProperties(obj, hasObj) {\n    var allProps = [], cur = obj;\n    var is = hasObj || false;\n    do {\n        var props = Object.getOwnPropertyNames(cur);\n        for (var i = 0; i < props.length; i++) {\n            var prop = props[i];\n            if (allProps.indexOf(prop) === -1 && (is || !Object.prototype.hasOwnProperty(prop))) allProps.push(prop);\n        }\n    } while (cur = Object.getPrototypeOf(cur));\n    return allProps;\n}\nType.getAllProperties = getAllProperties;\n\n/**\n * Compare the two objects to see if they are the same (except Prototype)  \n * \n * @param {any} obj1 Source object\n * @param {any} obj2 Object to compare\n * @returns {boolean} Whether the two objects are the same ('true' or 'false')\n */\nfunction deepEqual(obj1, obj2) {\n    // 두 객체가 동일한 참조를 가지면 true를 반환\n    if (obj1 === obj2) return true;\n\n    // 두 객체 중 하나가 null이거나 타입이 다르면 false를 반환\n    if (obj1 === null || obj2 === null || typeof obj1 !== typeof obj2) return false;\n\n    // 함수 비교\n    if (typeof obj1 === 'function' && typeof obj2 === 'function') {\n        return obj1.toString() === obj2.toString();\n    }\n\n    // 원시 값 비교\n    if (typeof obj1 !== 'object' || typeof obj2 !== 'object') return false;\n\n    // 배열 비교\n    if (Array.isArray(obj1) && Array.isArray(obj2)) {\n        if (obj1.length !== obj2.length) return false;\n        for (var i = 0; i < obj1.length; i++) {\n            if (!deepEqual(obj1[i], obj2[i])) return false;\n        }\n        return true;\n    }\n\n    // 객체 비교\n    // var keys1 = Object.keys(obj1);\n    // var keys2 = Object.keys(obj2);\n    var keys1 = Object.getOwnPropertyNames(obj1);\n    var keys2 = Object.getOwnPropertyNames(obj2);\n\n    if (keys1.length !== keys2.length) return false;\n\n    for (var j = 0; j < keys1.length; j++) {\n        var key = keys1[j];\n        if (keys2.indexOf(key) === -1 || !deepEqual(obj1[key], obj2[key])) return false;\n    }\n\n    return true;\n}\nType.deepEqual = deepEqual;\n\n/**\n * Gets the type of the given function (generator). (Can include '_UNION')  \n * The returned arrays are included in order from the specified function.  \n * \n * @param {function} ctor Generator function or class\n * @param {boolean} [hasUnion= true] whether '_UNION' is included (default: 'true')\n * @returns {array<function>} Array function type\n */\nfunction getTypes(ctor, hasUnion) {\n    var arr = [];\n    var tempArr = [];\n    var union;\n    var proto;\n\n    hasUnion = hasUnion === false ? false : true;\n    \n    if (typeof ctor !== 'function') throw new ExtendError(/EL0130C/, null, [typeof ctor]);\n\n    arr.push(ctor);\n    proto = $getPrototype(ctor);        \n    \n    if (proto !== Function.prototype) {\n        arr = arr.concat(getTypes(proto, hasUnion));\n    }\n    if (hasUnion) {\n        union = ctor['_UNION'] || [];\n        for (var i = 0; i < union.length; i++) {\n            arr = arr.concat(getTypes(union[i], hasUnion));\n        }\n    }\n\n    for (var j = 0; j < arr.length; j++) {\n        var idx = tempArr.indexOf(arr[j]);\n        if (idx < 0) tempArr.push(arr[j]);\n    }\n    return tempArr;\n\n    // innner function\n    function $getPrototype(ctor) {\n        // if (ctor.hasOwnProperty('super')) return ctor.super;\n        if (Object.prototype.hasOwnProperty.call(ctor, 'super')) return ctor.super;\n        return !OLD_ENV && typeof Object.getPrototypeOf === 'function' ? Object.getPrototypeOf(ctor) : ctor.__proto__;\n    }\n}\nType.getTypes = getTypes;\n\n/**\n * Verify that the prototype (inheritance) chain of the function type contains the specified target.  \n * \n * @param {function} ctor Generator function or class\n * @param {function | string} target To be examined (generator function or class name)\n * @returns {boolean} whether to be included in the prototype chain ('true' or 'false')\n */\nfunction isProtoChain(ctor, target) {\n    var arr;\n    if (typeof ctor !== 'function') return false;\n    if (!(typeof target === 'function' || typeof target === 'string')) return false;\n\n    arr = getTypes(ctor, false);\n    for (var i = 0; i < arr.length; i++) {\n        if (typeof target === 'string') {\n            if (target === arr[i].name) return true;\n        } else {\n            if (target === arr[i]) return true;\n        }\n    }\n    return false;\n}\nType.isProtoChain = isProtoChain;\n\n/**\n * Verify that the given function type is included in the prototype (inheritance) chain or is of type '_UNION'.  \n * \n * @param {function} ctor Generator function or class\n * @param {function | string} target To be examined (generator function or class name)\n * @returns {boolean} Prototype chain or type '_UNION' ('true' or 'false')\n */\nfunction hasType(ctor, target) {\n    var arr;\n    if (typeof ctor !== 'function') return false;\n    if (!(typeof target === 'function' || typeof target === 'string')) return false;\n\n    arr = getTypes(ctor);\n    for (var i = 0; i < arr.length; i++) {\n        if (typeof target === 'string') {\n            if (target === arr[i].name) return true;\n        } else {\n            if (target === arr[i]) return true;\n        }\n    }\n    return false;\n}\nType.hasType = hasType;\n\n/**\n * Returns extension information of the target type in JSON format.  \n * Analyze the internal properties of the object to transform all properties into the format 'typeObject()'.  \n * \n * @param {*} target Target type\n * @returns {object} converted extension type object\n * @example\n * var obj = {\n *      $ype: '',\n *      default: null,                  // string, number, boolean, regexp\n *      kind: '',                       // array, choice\n *      creator: null, _instance: {},   // class\n *      _prop: {},                      // union\n *      params: [], return: null,       // function\n *      name: name, func: null,\n * }\n */\nfunction typeObject(target) {\n    var obj = {};\n    var typeObj = _isObject(target) && target['$type'] ? target : extendType(target);\n    var leafType = ['null', 'undefined', 'number', 'string', 'boolean', 'symbol', 'bigi¡nt', 'object', 'regexp'];\n\n    obj['$type'] = typeObj['$type'];\n    \n    if (typeObj['default'] !== null && typeof typeObj['default'] !== 'undefined') obj['default'] = typeObj['default'];\n    if (typeObj['kind'] !== null && typeof typeObj['kind'] !== 'undefined') obj['kind'] = typeObj['kind'];\n    if (typeObj['params']) obj['params'] = typeObj['params'];\n    if (typeObj['return']) obj['return'] = typeObj['return'];\n    if (typeObj['creator']) obj['creator'] = typeObj['creator'];\n    if (typeObj['_instance']) obj['_instance'] = typeObj['_instance'];\n\n    if (leafType.indexOf(obj['$type']) > -1) {\n        if (typeObj['default']) obj['default'] = typeObj['default'];\n        return obj;\n    }\n    if (obj['$type'] === 'array' ||  obj['$type'] === 'choice') {\n        obj['list'] = [];\n        for(var i = 0; i < typeObj['list'].length; i++) {\n            obj['list'][i] = typeObject(typeObj['list'][i]);\n        }\n    }\n    if (obj['$type'] === 'function') {\n        for(var j = 0; j < obj['params'].length; j++) {\n            obj['params'][j] = typeObject(typeObj['params'][j]);\n        }\n        if (typeObj['return']) obj['return'] = typeObject(typeObj['return']);\n    }\n    if (obj['$type'] === 'class') {\n        if (typeof typeObj['ref'] === 'function') {\n            obj['creator'] = typeObj['ref'].name; \n            var temp = _creator(typeObj['ref']);\n            obj['_instance'] = typeObject(temp);\n        }\n    }\n    if (obj['$type'] === 'union') {\n        obj['_prop'] = {};\n        var temp2 = typeObj['ref'] || typeObj['_prop'];\n        var list = getAllProperties(temp2);\n        for (var k = 0; k < list.length; k++) {\n            var key = list[k];\n            if (key === '_interface' || key === 'isImplementOf' ) continue;             // 예약어\n            obj['_prop'][key] = typeObject(temp2[key]);\n        }\n    }\n    return obj;\n}\nType.typeObject = typeObject;\n\n/**\n * Returns the extension type name of the target object.  \n * \n * @param {*} target Target object\n * @returns {string} extended type name\n */\nfunction typeOf(target) {\n    return extendType(target)['$type'];\n}\nType.typeOf = typeOf;\n\n/**\n * Returns the extension type of the target object.  \n * \n * @param {any} target Target object\n * @returns {object} extended type object\n * @example\n * var singleType = ['undefined', 'null', 'number', 'string', 'boolean', 'regexp', 'object', 'symbol'];\n * var unionType = ['array', 'choice', 'function', 'class', 'union'];\n */\nfunction extendType(target) {\n    var obj =  { $type: '', ref: undefined };\n\n    obj.toString = function(){\n        var temp = '';\n        var arr = [];\n        if (this['$type'] === 'array' || this['$type'] === 'choice') {\n            for (var i = 0; i < this['list'].length; i++) {\n                var _type = extendType(this['list'][i]);\n                if (_type['default'] && _type['default'] !== null) {\n                    var def;\n                    if (_type['$type'] === 'string') def = '\\''+ _type['default'] +'\\'';\n                    else def = _type['default'];\n                    arr.push(_type['$type'] + '('+ def +')');\n                } else arr.push(_type['$type']);\n            }\n            if (this['kind'] === '_OPT_' || this['kind'] === '_REQ_' || this['kind'] === '_SEQ_' || this['kind'] === '_EUM_' || this['kind'] === '_DEF_') {\n                temp = this['$type'] +'('+ this['kind'] +')['+ arr.join(', ')+ ']';\n            } else temp = this['$type'] +'('+ this['kind'] +')';\n            \n        } else {\n            temp = this['$type'];\n            if (this['default'] && this['default'] !== null) {\n                if (this['$type'] === 'string') temp += '(\\''+ this['default'] +'\\')';\n                else temp += '('+this['default']+')';\n            }\n        }\n        return temp;\n    };\n    // special type\n    if (typeof target === 'object'  && target !== null && target['$type']) {\n        obj['$type'] = target['$type'];\n        if (target['default']) obj['default'] = target['default'];\n        if (target['kind']) obj['kind'] = target['kind'];\n        if (target['ref']) obj['ref'] = target['ref'];\n        if (target['list']) obj['list'] = target['list'];\n        if (target['name']) obj['name'] = target['name'];\n        if (target['func']) obj['func'] = target['func'];\n        if (target['params']) obj['params'] = target['params'];\n        if (target['return']) obj['return'] = target['return'];\n        if (!_hasType(obj['$type'])) throw new ExtendError(/EL01304/, null, [obj['$type']]);\n        if (obj['$type'] === 'array') {\n            obj['kind'] = obj['kind'] || '_ALL_';\n            if (!_hasKindArray(obj['kind'])) throw new ExtendError(/EL01305/, null, [obj['kind']]);\n        }\n        if (obj['$type'] === 'choice') {\n            if (!_hasKindChoice(obj['kind'])) throw new ExtendError(/EL01306/, null, [obj['kind']]);\n        }\n        return obj;\n    } else {\n        obj['ref'] = target;\n    }\n\n    // step : operation\n    if (target === null) {\n        obj['$type'] = 'null';\n    } else if (target === Number) {\n        obj['$type'] = 'number';\n        obj['default'] = null;            \n    } else if (target === String) {\n        obj['$type'] = 'string';\n        obj['default'] = null;\n    } else if (target === Boolean) {\n        obj['$type'] = 'boolean';\n        obj['default'] = null;\n    } else if (target === Array) {\n        obj['$type'] = 'array';\n        obj['kind'] = '_ALL_';\n        obj['list'] = [];\n    } else if (target === Function) {\n        obj['$type'] = 'function';\n        obj['params'] = [];\n    } else if (target === Object) {\n        obj['$type'] = 'object';\n    } else if (target === RegExp) {\n        obj['$type'] = 'regexp';\n        obj['default'] = null;\n    } else if (target === Symbol) {      // ES6+\n        obj['$type'] = 'symbol';\n    } else if (target === BigInt) {      // ES6+\n        obj['$type'] = 'bigint';\n        obj['default'] = null;\n    } else if (target instanceof RegExp) {\n        obj['$type'] = 'regexp';\n        obj['default'] = target;\n    // step : typeof\n    } else if (typeof target === 'undefined') {\n        obj['$type'] = 'undefined';\n    } else if (typeof target === 'number') {\n        obj['$type'] = 'number';\n        obj['default'] = target;\n    } else if (typeof target === 'string') {\n        obj['$type'] = 'string';\n        obj['default'] = target;\n    } else if (typeof target === 'boolean') {\n        obj['$type'] = 'boolean';\n        obj['default'] = target;\n    } else if (typeof target === 'bigint') { // ES6+\n        obj['$type'] = 'bigint';\n        obj['default'] = target;\n    } else if (typeof target === 'symbol') { // ES6+\n        obj['$type'] = 'symbol';\n    // step : function\n    } else if (typeof target === 'function') {\n        var kind = target['_KIND'];\n        if (kind) {\n            kind = kind.toLowerCase();\n            if (kind === 'function') obj['$type'] = 'function';\n            else obj['$type'] = 'class';    // class, interface, abstract\n        } else obj['$type'] = _isUpper(target.name) ? 'class' : 'function';\n            \n        if (obj['$type'] === 'function') {\n            try {\n                var funcType  = target['_TYPE'] ? target['_TYPE'] : _parseFunc(target.toString());\n                obj['params'] = funcType['params'];\n                obj['return'] = funcType['return'];\n            } catch (_err) {\n                obj['params'] = [];\n            }\n        }\n    // step : array\n    } else if (Array.isArray(target)) {\n        if (target.length ===  1 && Array.isArray(target[0])) {\n            obj['$type'] = 'choice';\n            if (target[0].length === 0) obj['kind'] = '_ANY_';\n            else obj['kind'] = _getKeyCode(target[0][0]);\n            obj['list'] = obj['kind'] ? target[0].slice(1) : target[0];\n        } else {\n            obj['$type'] = 'array';\n            if (target.length === 0) obj['kind'] = '_ANY_';\n            else obj['kind'] = _getKeyCode(target[0]);\n            obj['list'] = obj['kind'] ? target.slice(1) : target;\n        }\n        if (!obj['kind']) obj['kind'] = '_OPT_';\n        // kind 검사\n        if (obj['$type'] === 'array' && !_hasKindArray(obj['kind'])) throw new ExtendError(/EL01307/, null, [obj['kind']]);\n        if (obj['$type'] === 'choice' && !_hasKindChoice(obj['kind'])) throw new ExtendError(/EL01308/, null, [obj['kind']]);\n\n    // step : object\n    } else if (_isFillObj(target) || _isEmptyObj(target)) {\n        obj['$type'] = 'union';\n    \n    // REVIEW:  기타 모든 함수는 object 로 처리한다. 더 좋은 방법이 있으면 대체 한다.\n    } else {\n    // } else if(_isPrimitiveObj(type)) {\n        obj['$type'] = 'object';\n    }\n    // } else throw new ExtendError(/EL01309/, null, []);    // REVIEW: 커버리지 확인시 주석 처리\n    return obj;\n}\nType.extendType = extendType;\n\n/**\n * 원본타입에 대상타입이 덮어쓰기가 허용 가능한지 검사합니다.  \n * 원본타입에 대상타입으로 캐스팅이 가능하지 확인합니다.\n * @param {any} extType 원본 타입\n * @param {any} tarType 대상 타입\n * @param {number} opt 허용옵션 : 0 = 기본, 1 = 타입생성 비교 \n * @param {string?} pathName '' 공백시 성공\n * @returns {throw?}\n */\nfunction _execAllow(extType, tarType, opt, pathName) {\n    var eType = extendType(extType);\n    var tType = extendType(tarType);\n    var prop = {};\n    var sExt = eType.toString(), sTar = tType.toString();\n    \n    pathName = pathName ? pathName : 'extType';\n    if (pathName !== 'extType' || !pathName) prop['error path'] = pathName;\n    opt = opt || 0;\n\n    // if (_isObject(eType['ref']) && _isObject(tType['ref']) && deepEqual(eType, tType)) return; // REVIEW: 필요없어  보이지만 잠시 남겨둠\n    // origin seq, opt 필수 검사\n    if (eType['kind']) {\n        if ((eType['kind'] === '_SEQ_' || eType['kind'] === '_OPT_' || eType['kind'] === '_REQ_' || eType['kind'] === '_EUM_'|| eType['kind'] === '_DEF_') \n        && eType['list'].length === 0) {\n            throw new ExtendError(/EL01201/, prop, ['extType', sExt]);\n        }\n    }\n    // tarType seq, opt 필수 검사\n    if (tType['kind']) {\n        if ((tType['kind'] === '_SEQ_' || tType['kind'] === '_OPT_' || tType['kind'] === '_REQ_'  || tType['kind'] === '_EUM_'|| tType['kind'] === '_DEF_') \n        && tType['list'].length === 0) {\n            throw new ExtendError(/EL01201/, prop, ['tarType', sTar]);\n        }\n    }\n    //  원본은 초이스가 아니고, tarType choice 의 인 경우\n    if (eType['$type'] !== 'choice' && tType['$type'] === 'choice' ) {\n        var choType = { $type: 'choice', kind: '_REQ_', list: [extType] };\n        _execAllow(choType, tarType, opt, pathName);\n        return;\n    }\n    // check allow type\n    if (_isLeafType(eType['$type'])) {\n        if(typeof eType['default'] !== 'undefined' && eType['default'] !== null && !_equalLiternal(eType['default'], tType['default'])) {\n            throw new ExtendError(/EL01202/, prop, [eType['$type'], eType, tType]);\n        }\n        if (eType['$type'] !== tType['$type']) throw new ExtendError(/EL01203/, prop, [eType['$type'], tType['$type']]);\n    \n    } else if (eType['$type'] === 'array')  $arrayAllow();\n    else if (eType['$type'] === 'choice') $choiceAllow();\n    else if (eType['$type'] === 'class') $classAllow();\n    else if (eType['$type'] === 'union') $unionAllow();\n    else if (eType['$type'] === 'function') $functionAllow();\n    else throw new ExtendError(/EL01204/, prop, []);\n\n    // inner function\n    function $arrayAllow() {\n        if (tType['$type'] !== 'array' || !Array.isArray(tType['list'])) throw new ExtendError(/EL01211/, prop, [tType['$type']]);\n        \n        // _ALL_ (all)\n        if (eType['kind'] === '_ALL_') {\n            return;\n\n        // _ANY_ (any)\n        } else if (eType['kind'] === '_ANY_') {\n            if (tType['kind'] === '_ANY_') return;\n            if (tType['kind'] === '_ALL_' || tType['kind'] === '_OPT_') {\n                throw new ExtendError(/EL01212/, prop, [sTar]);\n            }\n            return;\n\n        // _SEQ_ (sequence)\n        } else if (eType['kind'] === '_SEQ_') {\n            if (eType['kind'] !== tType['kind'])  throw new ExtendError(/EL01213/, prop, [tType]);\n            if (eType['list'].length > tType['list'].length) {\n                throw new ExtendError(/EL01214/, prop, [eType.list.length, tType.list.length]);\n            }\n\n            // element check\n            for (var i = 0; i < eType['list'].length; i++) {\n                try {\n                    _execAllow(eType['list'][i], tType['list'][i], opt, pathName);\n                } catch (error) {\n                    throw new ExtendError(/EL01215/, error, [i]);\n                }\n            }\n            return;\n        \n        // _REQ_ (require)\n        } else if (eType['kind'] === '_REQ_') {\n            if (tType['kind'] === '_ALL_' || tType['kind'] === '_ANY_' || tType['kind'] === '_OPT_') {\n                throw new ExtendError(/EL01216/, prop, [eType['$type'], sTar]);\n            }\n\n        // _OPT_ (option)\n        } else if (eType['kind'] === '_OPT_') {\n            if (tType['kind'] === '_ALL_' || tType['kind'] === '_ANY_' ) {\n                throw new ExtendError(/EL01217/, prop, [eType['$type'], sTar]);\n            }\n        \n        // _ETC_\n        } else {\n            throw new ExtendError(/EL01218/, prop, [eType['kind']]);\n        }\n\n        // element check\n        for (var k = 0; k < tType['list'].length; k++) {\n            var success = false;\n            for (var j = 0; j < eType['list'].length; j++) {\n                try {\n                    if (success) break;\n                    if (extendType(tType['list'][k])['$type'] === 'choice' && extendType(eType['list'][j])['$type'] !== 'choice' ) {\n                        var oriChoice = { $type: 'choice', kind: '_OPT_', list: eType['list'] };\n                        _execAllow(oriChoice, tType['list'][k], opt, pathName);\n                    } else {\n                        _execAllow(eType['list'][j], tType['list'][k], opt, pathName);\n                    }\n                    success = true;\n                } catch (error) {\n                    continue;\n                }\n            }\n            if (!success) throw new ExtendError(/EL01219/, prop, [eType, tType]);\n        }\n    }\n\n    function $choiceAllow() {\n        // _ALL_ (all)\n        if (eType['kind'] === '_ALL_') {\n            if (tType['$type'] === tType['$type'] && tType['kind'] === '_ERR_') {\n                throw new ExtendError(/EL01221/, prop, [eType['$type'], sTar]);\n            }\n            return;\n\n        // _ANY_ (any)\n        } else if (eType['kind'] === '_ANY_') {\n            if (tType['$type'] === 'undefined') throw new ExtendError(/EL01222/, prop, ['_ANY_', 'undefined']);\n            if (eType['$type'] === tType['$type'] && (tType['kind'] === '_ALL_' || tType['kind'] === '_OPT_' || tType['kind'] === '_ERR_' || tType['kind'] === '_NON_')) {\n                throw new ExtendError(/EL01223/, prop, [sTar]);\n            }\n            return;\n        \n        // _NON_ \n        } else if  (eType['kind'] === '_NON_') {\n            if (eType['$type'] !== tType['$type'] || eType['kind'] !== tType['kind']) {\n                // 4\n                throw new ExtendError(/EL01224/, prop, [sTar]);\n            }\n            return;\n\n        // _ERR_ (error)\n        } else if (eType['kind'] === '_ERR_') {\n            if (eType['$type'] !== tType['$type'] || eType['kind'] !== tType['kind']) {\n                // 5\n                throw new ExtendError(/EL01225/, prop, [sTar]);\n            }\n            return;\n\n        // _REQ_ (require)\n        } else if (eType['kind'] === '_REQ_') {\n            if (eType['$type'] === tType['$type'] && (tType['kind'] === '_ALL_' || tType['kind'] === '_ANY_' \n            || tType['kind'] === '_OPT_' || tType['kind'] === '_NON_' || tType['kind'] === '_ERR_')) {\n                // 6\n                throw new ExtendError(/EL01226/, prop, [sTar]);\n            }\n\n        // _OPT_ (option)\n        } else if (eType['kind'] === '_OPT_') {\n            if (tType['$type'] === 'undefined') return;\n            if (eType['$type'] === tType['$type'] && (tType['kind'] === '_ALL_' || tType['kind'] === '_ANY_' \n            || tType['kind'] === '_NON_' || tType['kind'] === '_ERR_')) {\n                // 7\n                throw new ExtendError(/EL01227/, prop, [sTar]);\n            }\n        \n            // _EUN_ (enumeration)\n        } else if (eType['kind'] === '_EUM_') {\n            if (eType['$type'] !== tType['$type'] || eType['kind'] !== tType['kind']) {\n                throw new ExtendError(/EL01228/, prop, []);\n            }\n            for (var i = 0; i < eType['list'].length; i++) {\n                if (!_isLiteral(eType['list'][i])) throw new ExtendError(/EL01229/, prop, [i, extendType(eType['list'][i])]);\n            }\n            for (var j = 0; j < tType['list'].length; j++) {\n                if (!_isLiteral(tType['list'][j])) throw new ExtendError(/EL0122A/, prop, [j, extendType(tType['list'][j])]);\n            }\n\n        // _DEF_ (default)\n        } else if (eType['kind'] === '_DEF_') {\n            if (eType['$type'] !== tType['$type'] || eType['kind'] !== tType['kind']) {\n                throw new ExtendError(/EL0122B/, prop, []);\n            }\n            if (!_isLiteral(eType['list'][0])) throw new ExtendError(/EL0122C/, prop, [extendType(eType['list'][0])]);\n            if (!_isLiteral(tType['list'][0])) throw new ExtendError(/EL0122D/, prop,  [extendType(tType['list'][0])]);\n\n        // _ETC_\n        } else {\n            throw new ExtendError(/EL0122E/, prop, [eType['kind']]);\n        }\n\n        // element check\n        var arrTarget = (tType['kind']) ? tType['list'] : [tarType];\n        for (var m = 0; m < arrTarget.length; m++) {\n            var success = false;\n            for (var n = 0; n < eType['list'].length; n++) {\n                try {\n                    if (success) continue;\n                    _execAllow(eType['list'][n], arrTarget[m], opt, pathName);\n                    success = true;\n                } catch (error) {\n                    continue;\n                }\n            }\n            if (!success) throw new ExtendError(/EL0122F/, prop, [m, eType, extendType(arrTarget[m])['$type']]);\n        }\n    }\n    \n    function $classAllow() {\n        var oriObj;\n        var tarObj;\n        if (tType['$type'] === 'class') {         // # class to class\n            if (isProtoChain(tType['ref'], eType['ref'])) return undefined;   // 1.proto check\n            if (opt === 1) {\n                try {\n                    // 생성비교\n                    oriObj = new eType['ref']();\n                    tarObj = new tType['ref']();\n                    return _execAllow(oriObj, tarObj, opt, pathName);\n                } catch (error) {\n                    throw new ExtendError(/EL01231/, error, []);\n                }                    \n            }\n            throw new ExtendError(/EL01232/, prop, [opt]);\n\n        } else if (tType['$type'] === 'union') {  // # class to union\n            if (opt === 1) {\n                try {\n                    // 생성비교\n                    oriObj = new eType['ref']();\n                    return _execAllow(oriObj, tType['ref'], opt, pathName);\n                } catch (error) {\n                    throw new ExtendError(/EL01233/, error, []);\n                }                    \n            }\n            throw new ExtendError(/EL01234/, prop, [opt]);\n\n        }\n        throw new ExtendError(/EL01235/, prop, [tType]);\n    }\n\n    function $unionAllow() {\n        var list;\n\n        if (tType['$type'] !== 'union') throw new ExtendError(/EL01241/, prop, [tType]);\n        list = getAllProperties(eType['ref']);\n\n        for (var i = 0; i < list.length; i++) {\n            var key = list[i];\n            if (!(key in tType['ref'])) throw new ExtendError(/EL01242/, prop, [key, typeOf(extType[key])]);      \n            try {\n                _execAllow(eType['ref'][key], tType['ref'][key], opt, pathName);\n            } catch (error) {\n                throw new ExtendError(/EL01243/, error, [key]);\n            }\n        }\n    }\n\n    function $functionAllow() {\n        if (tType['$type'] !== 'function')  throw new ExtendError(/EL01251/, prop, [tType]);\n        if (eType['ref'] === Function) return;\n        // special type check\n        if (eType['name']) {\n            if (eType['name'] === tarType.name  \n            || eType['name'] === tType['name'] \n            || (tType['func'] && eType['name'] === tType['func'].name)) return;\n            throw new ExtendError(/EL01252/, prop, [eType['name'], tType.name]);\n        }\n        if (eType['func']) {\n            if (typeof tType['func'] !== 'function') throw new ExtendError(/EL01253/, prop, []);\n            if (isProtoChain(tType['func'], eType['func'])) return;\n            throw new ExtendError(/EL01254/, prop, []);\n        }\n\n        if (!eType['return'] && (!eType['params'] || eType['params'].length === 0)) return;\n        if (typeof tType['params'] === 'undefined' && typeof tType['return'] === 'undefined') { \n            throw new ExtendError(/EL01255/, prop, [extendType(eType.params), typeOf(eType.return)]);\n        }\n        if (Array.isArray(eType['params']) && eType['params'].length > 0) {  \n            try {   // params check\n                _execAllow(['_SEQ_'].concat(eType['params']), ['_SEQ_'].concat(tType['params']), opt, pathName);\n            } catch (error) {\n                throw new ExtendError(/EL01256/, error, []);\n            }\n        }\n        if (eType['return']) {            \n            try {   // return check\n                _execAllow(eType['return'], tType['return'], opt, pathName);\n            } catch (error) {\n                throw new ExtendError(/EL01257/, error, []);\n            }\n        }\n    }\n}\n\n/**\n * 타입을 검사하여 메세지를 리턴\n * @param {any} extType 검사할 타입 , extType \n * @param {any} target 검사대상\n * @param {number} [opt] 허용옵션 : 0 = 기본, 1 = 타입생성 비교 \n * @param {string} [pathName] '' 공백시 성공\n * @throws {ExtendError}\n */\nfunction _execMatch(extType, target, opt, pathName) {\n    var eType = extendType(extType);\n    var tType = extendType(target);\n    var prop = {};\n    var sExt = eType.toString(), sTar = tType.toString();\n    \n    pathName = pathName ? pathName : 'extType';\n    if (pathName !== 'extType') prop['error path'] = pathName;    // TODO: 'target' 명칭의 중복 수정필요\n    opt = opt || 0;\n\n    // seq, opt 필수 검사\n    if (eType['kind']) {\n        if ((eType['kind'] === '_SEQ_' || eType['kind'] === '_OPT_' || eType['kind'] === '_REQ_' || eType['kind'] === '_EUM_'|| eType['kind'] === '_DEF_') \n        && (typeof eType['ref'] === 'undefined' || eType['list'].length === 0)) {\n            throw new ExtendError(/EL01101/, prop, ['extType', sExt]);\n        }\n    }\n\n    // check match type\n    if (eType['$type'] === 'null') {\n        if (target !== null) throw new ExtendError(/EL01102/, prop, ['null', sTar]);\n    \n    } else if (eType['$type'] === 'undefined') {\n        if (typeof target !== 'undefined') throw new ExtendError(/EL01102/, prop, ['undefined', sTar]);\n    \n    } else if (eType['$type'] === 'string') {\n        if (typeof eType['default'] === 'string' && typeof target === 'undefined') target = eType['default'];\n        if (typeof target !== 'string') throw new ExtendError(/EL01102/, prop, ['string', sTar]);\n    \n    } else if (eType['$type'] === 'number') {\n        if (typeof eType['default'] === 'number' && typeof target === 'undefined') target = eType['default']; \n        if (typeof target !== 'number') throw new ExtendError(/EL01102/, prop, ['number', sTar]);\n    \n    } else if (eType['$type'] === 'boolean') {\n        if (typeof eType['default'] === 'boolean' && typeof target === 'undefined') target = eType['default'];\n        if (typeof target !== 'boolean') throw new ExtendError(/EL01102/, prop, ['boolean', sTar]);\n    \n    } else if (eType['$type'] === 'bigint') {    // ES6+\n        if (typeof eType['default'] === 'bigint' && typeof target === 'undefined') target = eType['default'];\n        if (typeof target !== 'bigint') throw new ExtendError(/EL01102/, prop, ['bigint', sTar]);\n    \n    } else if(eType['$type'] === 'symbol') {    // ES6+\n        if (typeof target !== 'symbol') throw new ExtendError(/EL01102/, prop, ['symbol', sTar]);\n    \n    } else if (eType['$type'] === 'regexp') {\n        if (eType['default'] && eType['default'] !== null && typeof target === 'undefined') target = eType['default'];\n        if (!(target instanceof RegExp)) throw new ExtendError(/EL01102/, prop, ['regexp', sTar]);\n    \n    } else if (eType['$type'] === 'object') {\n        if (tType['$type'] !== 'object') throw new ExtendError(/EL01102/, prop, ['object', sTar]);\n\n    } else if (eType['$type'] === 'array') $arrayMatch();\n    else if (eType['$type'] === 'choice') $choiceMatch();\n    else if (eType['$type'] === 'class') $classMatch();\n    else if (eType['$type'] === 'union') $unionMatch();\n    else if (eType['$type'] === 'function') $functionMatch();        \n    else throw new ExtendError(/EL01103/, prop, []);\n\n    // inner function\n    function $arrayMatch() {\n        if (!Array.isArray(target)) throw new ExtendError(/EL01111/, prop, [sTar]);\n        \n        // _ALL_ (all)\n        if (eType['kind'] === '_ALL_') {      \n            return;\n\n        // _ANY_ (any)\n        } else if (eType['kind'] === '_ANY_') {\n            if (target.length === 0) throw new ExtendError(/EL01112/, prop, [target.length]);\n            return;\n\n        // _SEQ_ (sequence)\n        } else if (eType['kind'] === '_SEQ_') {\n            if (eType['list'].length > target.length) throw new ExtendError(/EL01113/, prop, [eType['list'].length, tType['list'].length]);    // REVIEW: 세부정보 표현\n            for(var i = 0; i < eType['list'].length; i++) {\n                var _elem   = eType['list'][i];\n                var _tar    = tType['list'][i];\n                if (_isLiteral(_elem)) {\n                    if (!_equalLiternal(_elem, _tar)) throw new ExtendError(/EL01114/, prop, [i, _elem, _tar]);\n                } else {\n                    try {\n                        _execMatch(_elem, _tar, opt, pathName);\n                    } catch (error) {\n                        throw new ExtendError(/EL01115/, error, [i, typeOf(_elem)]);\n                    }\n                }\n            }\n            return;\n\n        // _REQ_ (require)\n        } else if (eType['kind'] === '_REQ_') {\n            if (target.length === 0) throw new ExtendError(/EL01116/,  prop, [target.length]);\n\n        // _OPT_ (option)\n        } else if (eType['kind'] === '_OPT_') {\n            if (Array.isArray(target) && target.length === 0) return;\n\n        // _ETC_\n        } else {\n            throw new ExtendError(/EL01117/,  prop, [eType['kind']]);\n        }\n        \n\n        // element check\n        for (var k = 0; k < target.length; k++) {\n            var tar = target[k];\n            var success = false;\n            for (var j = 0; j < eType['list'].length; j++) {\n                try {\n                    var elem = eType['list'][j];\n                    if (_isLiteral(elem)) {\n                        if (_equalLiternal(elem, tar)) {\n                            success = true;\n                            break;\n                        }\n                    } else {\n                        _execMatch(elem, tar, opt, pathName);    // REVIEW: pathName + '['+i+']'  이렇게 들어가야 함\n                        success = true;\n                        break;\n                    }\n                } catch (error) {\n                    continue;\n                }\n            }\n            if (!success) {\n                throw new ExtendError(/EL01118/, prop, [eType.toString(), tType.toString()]);\n            }\n        }\n    }\n\n    function $choiceMatch() {\n        // _ALL_ (all)\n        if (eType['kind'] === '_ALL_') {\n            return undefined;\n\n        // _ANY_ (any)\n        } else if (eType['kind'] === '_ANY_') {\n            if (typeof target !== 'undefined') return undefined;\n            throw new ExtendError(/EL01121/, prop, []);\n\n        // _NON_ (none)\n        } else if (eType['kind'] === '_NON_') {\n            if (typeof target === 'undefined') return undefined;\n            throw new ExtendError(/EL01122/, []);\n            \n        // _ERR_ (error)\n        } else if (eType['kind'] === '_ERR_') {\n            if (target instanceof Error) return undefined;\n            throw new ExtendError(/EL01123/, []);\n\n        // _REQ_ (require)\n        } else if (eType['kind'] === '_REQ_') {\n\n        // _OPT_ (option)\n        } else if (eType['kind'] === '_OPT_') {\n            if (typeof target === 'undefined') return undefined;\n\n        // _EUN_ (enumeration)\n        } else if (eType['kind'] === '_EUM_') {\n            for (var i = 0; i < eType['list'].length; i++) {\n                if (!_isLiteral(eType['list'][i])) throw new ExtendError(/EL01124/, prop, [i, typeOf(eType['list'][i])]);\n            }\n\n        // _DEF_ (default)\n        } else if (eType['kind'] === '_DEF_') {\n            if (!_isLiteral(eType['list'][0])) throw new ExtendError(/EL01125/, prop, [typeOf(eType['list'][0])]);\n            if (typeof target === 'undefined') {\n                target = eType['list'][0];\n                return undefined;\n            }\n            // _IDX_ (index)\n            // } else if (eType['kind'] === '_IDX_') {\n            /**\n             * POINT:\n             * - 검사\n             *  + target object 검사\n             *  -\\+ 파라메터 2개 검사\n             * \n             * - 인덱스 타입 목록 추출\n             * \n             * - 초이스로 변환\n             *  + 허용타입들 + \n             * \n             * this.command = [['_AND_',  { aa: 1 }, ClassA ]]\n             * [['_IDX_', String]]\n             * [['_KEY_', Number, String, '리터럴']]\n             * \n             * this.command = [['_AND_', [['_IDX_', String]], [['_KEY_', Number, String, '리터럴']] ]]\n             * \n             * 마지막에 리턴 및 실패 처리\n             */\n\n            /**\n             * - 검사\n             *  + 타겟의 object 여부 검사\n             *  + 파라메터 1개 이상 검사\n             * - 조건문 처리\n             *  + 둘다 성공해야 성공\n             */\n            // POINT: 개발 해야함\n            // if (eType['list'].length === 0) throw new ExtendError('TODO: IDX 는 검사 타입이 없습니다. 하나이상 있어야 합니다.', prop, []);\n            // if (tType['$type'] !== 'union') throw new ExtendError('TODO: IDX 는 검사 대상이 object(union) 타입만 가능합니다.', prop, ['object', sTar]);\n\n            // for(var i = 0; i < eType['list'].length; i++) {\n            //     var _elem   = eType['list'][i];\n                \n            //     // var _tar    = tType['list'][i];\n            //     try {\n            //         _execMatch(_elem, target);\n            //     } catch (error) {\n            //         throw new ExtendError('TODO: ', error, []);\n            //     }\n                \n            // }\n        \n        // _ETC_\n        } else {\n            throw new ExtendError(/EL01126/,  prop, [eType['kind']]);\n        }\n\n        // element check\n        for (var j = 0; j < eType['list'].length; j++) {\n            try {\n                var elem = eType['list'][j];\n                if (_isLiteral(elem)) {\n                    if (_equalLiternal(elem, target)) return undefined;\n                } else {\n                    return _execMatch(elem, target, opt, pathName);\n                }\n            } catch (error) {\n                continue;\n            }\n        }\n        throw new ExtendError(/EL01127/, prop,[eType, tType]);\n    }\n\n    function $classMatch() {\n        if (tType['$type'] === 'class') {         // # class to class\n            if (typeof eType['ref'] === 'undefined') return undefined;  // 전역 클래스 타입\n            if (isProtoChain(tType['ref'], eType['ref'])) return undefined;\n        } else if (typeof target === 'object') {    // # class to typeof 'object'\n            if (target instanceof extType) return undefined;     \n            if (!_isBuiltFunction(extType) && target !== null && opt === 1) {\n                try {\n                    var subPath = pathName === 'extType' ? '<instance>' : pathName + '<instance>';\n                    return _execMatch(_creator(extType), target, opt, subPath);\n                } catch (error) {\n                    throw new ExtendError(/EL01131/, error);\n                }\n            }\n            throw new ExtendError(/EL01132/, prop, [_typeName(extType)]);\n        }\n        throw new ExtendError(/EL01133/, prop, [tType]);                \n    }\n\n    function $unionMatch() {\n        var list;\n        \n        if (tType['$type'] !== 'union') throw new ExtendError(/EL01141/, prop, [tType]);\n        list = getAllProperties(eType.ref);\n\n        for (var i = 0; i < list.length; i++) {\n            var key = list[i];\n            var listDefType = extendType(extType[key]);\n            // REVIEW: for 위쪽으로 이동 검토!\n            if (key === '_interface' || key === 'isImplementOf') continue;             // 예약어\n            // REVIEW: 재귀로 구현 체크\n            // default 설정\n            if (typeof listDefType['default'] !== 'undefined' && listDefType['default'] !== null && typeof target[key] === 'undefined') target[key] = listDefType['default'];\n            // POINT:\n            // if (target !== null && !(key in target)) throw new ExtendError(/EL01142/, prop, [key, typeOf(extType[key])]);    \n            try {\n                var subPath = pathName +'[\\''+ key+'\\']';\n                _execMatch(extType[key], target[key], opt, subPath);\n            } catch (error) {\n                throw new ExtendError(/EL01143/, error, [key]);\n            }\n        }\n    }\n\n    function $functionMatch() {\n        if (tType['$type'] !== 'function') throw new ExtendError(/EL01151/, prop, [tType]);\n        if (eType['ref'] === Function) return;\n        // special type check\n        if (eType['name']) {\n            if (eType['name'] === target.name \n            || eType['name'] === tType['name'] \n            || (tType['func'] && eType['name'] === tType['func'].name)) return;\n            throw new ExtendError(/EL01152/, prop, [eType['name'], target.name]);\n        }\n        if (eType['func']) {\n            if (typeof tType['func'] !== 'function') throw new ExtendError(/EL01153/, prop, []);\n            if (isProtoChain(tType['func'], eType['func'])) return;\n            throw new ExtendError(/EL01154/, prop, []);\n        }\n\n        if (!eType['return'] && (!eType['params'] || eType['params'].length === 0)) return;\n        if (typeof tType['params'] === 'undefined' && typeof tType['return'] === 'undefined') { \n            throw new ExtendError(/EL01155/, prop, [extendType(eType.params), typeOf(eType.return)]);\n        }\n        // params check\n        if (Array.isArray(eType['params']) && eType['params'].length > 0) {  \n            try {\n                _execAllow(['_SEQ_'].concat(eType['params']), ['_SEQ_'].concat(tType['params']), opt, pathName);\n            } catch (error) {\n                throw new ExtendError(/EL01156/, error, []);\n            }\n        }\n        // return check\n        if (eType['return']) {            \n            try {\n                _execAllow(eType['return'], tType['return'], opt, pathName);\n            } catch (error) {\n                throw new ExtendError(/EL01157/, prop, []);\n            }\n        }\n    }\n}\n\n/**\n * Verify that the extension type allows the target type.  \n * \n * @param {any} extType Extension Type\n * @param {any} tarType What type to check\n * @param {number} [opt=0] Allow option (0 = Keep existing, 1 = Create class type)\n * @returns {throw?} Exception occurs if extension type does not allow target type\n */\nfunction allowType(extType, tarType, opt) {\n    try {\n        _execAllow(extType, tarType, opt);\n    } catch (error) {\n        throw new ExtendError(/EL0130A/, error);\n    }\n}\nType.allowType = allowType;\n\n/**\n * Verify that the extension type matches the target.  \n * \n * @param {any} extType Extension Type\n * @param {any} target For inspection\n * @param {number} [opt=0] Allow option (0 = Keep existing, 1 = Create class type)\n * @returns {throw?} Exception occurs when failing\n */\nfunction matchType(extType, target, opt) {\n    try {\n        _execMatch(extType, target, opt);\n    } catch (error) {\n        throw new ExtendError(/EL0130B/, error);\n    }\n}\nType.matchType = matchType;\n\n/**\n * Determine whether the extension type allows the target type.  \n * \n * @param {any} extType Extension Type\n * @param {any} target Type to be examined\n * @param {number} opt Allow option (0 = Keep existing, 1 = Create class type)\n * @returns {boolean} whether to allow ('true' or 'false')\n */\nfunction isAllowType(extType, target, opt) {\n    try {\n        _execAllow(extType, target, opt);\n    } catch (error) {\n        return false;\n    }\n    return true;\n}\nType.isAllowType = isAllowType;\n\n/**\n * Verify that the extension type matches the target.  \n * \n * @param {any} extType Extension Type\n * @param {any} target Type to be examined\n * @param {number} [opt] Allow option (0 = Keep existing, 1 = Create class type)\n * @returns {boolean} Match or not ('true' or 'false')\n */\nfunction isMatchType(extType, target, opt) {\n    try {\n        _execMatch(extType, target, opt);\n        return true;\n    } catch (error) {\n        return false;\n    }\n}\nType.isMatchType = isMatchType;\n\nexport default Type;\nexport { Type };","/**** util.js | Util ****/\n//==============================================================\nimport ExtendError      from './extend-error.js';\nimport Type             from './type.js';\n   \nvar _global = globalThis;\n\nvar OLD_ENV = _global.OLD_ENV ? _global.OLD_ENV : false;    // 커버리지 테스트 역활\n\n/**\n * This is a utility module.\n */\nvar Util = {};\n\n// local function\nfunction _isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Returns the nested depth of the array.  \n * REVIEW: 필요성 검토 필요!\n * \n * @param {array} p_elem Array elements\n * @param {number} p_depts Current depth (default: 0)\n * @returns {number} Maximum nested depth of array\n */\nfunction getArrayDepth(p_elem, p_depts) {\n    var MAX     = 10;\n    var level   = 0;\n    \n    p_depts = p_depts || 0;\n    if (p_elem instanceof Array && MAX > p_depts) {\n        level++;\n        p_depts++;\n        level = level + getArrayDepth(p_elem[0], p_depts);\n    }\n    return level;\n};\nUtil.getArrayDepth = getArrayDepth;\n\n/**\n * Creates a 36-digit GUID.  \n * \n * @returns {string} GUID string generated\n */\nfunction createGuid() {\n    function _p8(s) {  \n        var p = (Math.random().toString(16)+'000000000').substring(2,10);  \n        return s ? '-' + p.substring(0, 4) + '-' + p.substring(4, 8) : p ;  \n    }\n    return _p8() + _p8(true) + _p8(true) + _p8();\n};\nUtil.createGuid = createGuid;\n\n/**\n * Deep copy of the object (except prototype)  \n * \n * @param {object} p_target Destination object to copy\n * @returns {object} copied object\n */\nfunction deepCopy(p_target) {\n    var nobj;\n\n    if (!_isObject(p_target)) {\n        return p_target;\n    }\n    if (p_target instanceof RegExp) return p_target;\n\n    // 객체인지 배열인지 판단\n    nobj = Array.isArray(p_target) ? [] : {};\n    \n    if (Array.isArray(p_target)) {\n        for (var i = 0; i < p_target.length; i++) {\n            nobj[i] = deepCopy(p_target[i]);\n        }\n    } else {\n        for (var key in p_target) {\n            if (Object.prototype.hasOwnProperty.call(p_target, key)) {\n                nobj[key] = deepCopy(p_target[key]);\n            }\n        }\n    }\n    return nobj;\n};\nUtil.deepCopy = deepCopy;\n\n/**\n * Sets the specified creator to inherit the parent creator.   \n * \n * @function\n * @param {function | object} ctor generator function or object\n * @param {function | object} superCtor Parent generator function or object\n */\nUtil.inherits = (function () {\n    if (typeof Object.create === 'function' && !OLD_ENV) {\n        // implementation from standard node.js 'Util' module\n        return function(ctor, superCtor) {\n            if (superCtor) {\n                ctor.super = superCtor;\n                ctor.prototype = Object.create(superCtor.prototype, {\n                    constructor: {\n                        value: ctor,\n                        writable: true,\n                        configurable: true,\n                        enumerable: false,\n                    }\n                });\n            }\n        };\n    } else {\n        // old school shim for old browsers\n        return function (ctor, superCtor) {\n            if (superCtor) {\n                ctor.super = superCtor;\n                var TempCtor = function () {};\n                TempCtor.prototype = superCtor.prototype;\n                ctor.prototype = new TempCtor();\n                ctor.prototype.constructor = ctor;\n            }\n        };\n    }\n}());\n\n/**\n * Verify that the object implements the specified interface.  \n * Verify that the 'obj' object created with 'ctor' implements the interface provided by 'interfaces'.  \n * If 'ctor._KIND' is 'Interface', use 'allowType()' to confirm.  \n * Otherwise, use 'matchType()' to confirm.  \n * \n * @name implements\n * @function\n * @param {function} p_ctor Generator to be examined\n * @param {object} p_obj object to be examined\n * @param {function?} args List of interfaces to check\n */\n\nfunction _implements(p_ctor, p_obj) {\n    var _interface = [];\n    var addCnt = 0;\n\n    if (typeof p_ctor !== 'function') throw new ExtendError(/EL01401/, null, [typeof p_ctor]);\n    if (!_isObject(p_obj)) throw new ExtendError(/EL01402/, null, [typeof p_obj]);\n\n    if (typeof p_obj._interface === 'undefined') {\n        Object.defineProperty(p_obj, '_interface', {\n            get: function() { \n                return _interface;\n            },\n            configurable: false,\n            enumerable: false,\n        });\n    }    \n\n    if (!p_ctor['_UNION']) p_ctor['_UNION'] = [];\n    \n    for(var i = 2; i < arguments.length; i++) {\n        if (typeof arguments[i] === 'function') {\n            if (p_obj._interface.indexOf(arguments[i]) < 0) { // 중복 검사 \n                p_obj._interface.push(arguments[i]);\n                addCnt++;\n            }\n        } else throw new ExtendError(/EL01403/, null, [i - 2, typeof arguments[i]]);\n    } \n\n    for (var j = 0; j < p_ctor['_UNION'].length; j++) {\n        if (p_obj._interface.indexOf(p_ctor['_UNION'][j]) < 0) {    // 인터페이스 중복 검사 후 등록\n            p_obj._interface.push(p_ctor['_UNION'][j]);\n            addCnt++;\n        }\n    }\n\n    try {\n        var beginIdx = p_obj._interface.length - addCnt;\n        for (var k = beginIdx; k < p_obj._interface.length; k++) {\n            if (p_ctor['_KIND'] === 'interface') {  // 인터페이스 타입과 분리\n                Type.allowType(p_obj._interface[k], p_obj, 1);\n            } else Type.matchType(p_obj._interface[k], p_obj, 1);\n        }\n    } catch (error) { \n        throw new ExtendError(/EL01404/, error, [$typeName(p_obj), $typeName(p_obj._interface[i]), p_ctor['_KIND'] || 'class']);\n    }\n\n    if (typeof p_obj.isImplementOf === 'undefined') {   // 내부 메소드 설정\n        Object.defineProperty(p_obj, 'isImplementOf', {\n            value: $isImplementOf,\n            configurable: false,\n            enumerable: false\n        });\n    }\n\n    // inner function\n    function $isImplementOf(target) {\n        if (typeof target === 'function') {\n            for (var i = 0; i < this._interface.length; i++) {\n                if (this._interface[i] === target) return true;  \n            }\n        } else if (typeof target === 'string') {\n            for (var j = 0; j < this._interface.length; j++) {\n                if (this._interface[j].name === target) return true;  \n            }\n        } else throw new ExtendError(/EL01405/, null, [typeof target]);\n        return false;\n    }\n    function $typeName(obj) {\n        var proto;\n        var constructor;\n        if (typeof obj === 'function') {\n            return obj.name;\n        } else if (typeof obj === 'object') {\n            proto = !OLD_ENV && Object.getPrototypeOf ? Object.getPrototypeOf(obj) : obj.__proto__ ;\n            constructor = proto.constructor;\n            return  constructor.name;\n        } else return 'unknown name';\n    }\n};\nUtil.implements = _implements;\n\nexport default Util;\nexport { Util };","/**** trans-queue.js | EventEmitter ****/\n//==============================================================\nimport ExtendError          from './extend-error.js';\n  \nvar EventEmitter = (function () {\n    /**\n     * Creates an instance of the class 'EventEmitter'.\n     * @constructs EventEmitter\n     */\n    function EventEmitter() {\n        \n        var $storage = {};\n        var isLog = false;\n\n        /**\n         * Internal object that stores registered events.  \n         * \n         * @private\n         * @member {object}  EventEmitter#$subscribers  \n         */\n        Object.defineProperty(this, '$storage', {\n            get: function() { return $storage; },\n            set: function(nVal) { \n                if (!_isObject(nVal)) throw new ExtendError(/EL01501/, null, [this.constructor.name, nVal]);\n                $storage = nVal;\n            },\n            configurable: false,\n            enumerable: false\n        });\n\n        /**\n         * Array that stores registered event names.  \n         * \n         * @protected\n         * @member {object}  EventEmitter#_list  \n         */\n        Object.defineProperty(this, '_list', {\n            get: function() { \n                return Object.keys(this.$storage);\n            },\n            configurable: false,\n            enumerable: false\n        });\n\n        /**\n         * Array that stores registered event names.\n         * \n         * @member {boolean}  EventEmitter#isLog  \n         */\n        Object.defineProperty(this, 'isLog', {\n            get: function() { return isLog; },\n            set: function(nVal) {\n                if (typeof nVal !== 'boolean') throw new ExtendError(/EL01502/, null, [this.constructor.name, nVal]);\n                isLog = nVal;\n            }\n        });\n    }\n    EventEmitter._NS = 'Common';    // namespace\n\n    // local function\n    function _isString(obj) {    // 공백 아닌 문자 여부\n        if (typeof obj === 'string' && obj.length > 0) return true;\n        return false;\n    }\n    function _isObject(obj) {    // 객체 여부\n        if (typeof obj === 'object' && obj !== null) return true;\n        return false;\n    }\n\n    /**\n     * Adds a listener (function) for the event.  \n     * \n     * @param {string} p_event Event Name\n     * @param {function} p_listener Listener function\n     */\n    EventEmitter.prototype.on = function(p_event, p_listener) {\n        if (!_isString(p_event)) throw new ExtendError(/EL01503/, null, [typeof p_event]);\n        if (typeof p_listener !== 'function') throw new ExtendError(/EL01504/, null, [typeof p_listener]);\n        \n        if (typeof this.$storage[p_event] !== 'object') {\n            this.$storage[p_event] = [];\n        }\n        if (this.$storage[p_event].indexOf(p_listener) === -1) {\n            this.$storage[p_event].push(p_listener);\n        }\n        // this.$storage[p_event].push(p_listener);\n\n    };\n    /** Alias for method 'on(). */\n    EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n    \n    /**\n     * Adds a one-time function for the event.  \n     * \n     * @param {string} p_event Event Name\n     * @param {function} p_listener Listener function\n     */\n    EventEmitter.prototype.once = function(p_event, p_listener) {\n        var self = this;\n\n        if (!_isString(p_event)) throw new ExtendError(/EL01505/, null, [typeof p_event]);\n        if (typeof p_listener !== 'function') throw new ExtendError(/EL01506/, null, [typeof p_listener]);\n\n        function onceListener() {\n            self.off(p_event, onceListener);\n            p_listener.apply(self, arguments);\n        }\n        this.on(p_event, onceListener);\n    };\n\n    /**\n     * Removes the listener (function) of the specified event.  \n     * \n     * @param {string} p_event Event Name\n     * @param {function} p_listener Listener function\n     */\n    EventEmitter.prototype.off = function(p_event, p_listener) {\n        if (!_isString(p_event)) throw new ExtendError(/EL01507/, null, [typeof p_event]);\n        if (typeof p_listener !== 'function') throw new ExtendError(/EL01508/, null, [typeof p_listener]);\n        \n        if (typeof this.$storage[p_event] === 'object') {\n            var idx = this.$storage[p_event].indexOf(p_listener);\n            if (idx > -1) {\n                this.$storage[p_event].splice(idx, 1);\n            }\n        }\n    };\n    /** Alias of method 'off()'. */\n    EventEmitter.prototype.removeListener = EventEmitter.prototype.off; // 별칭\n\n    /**\n     * Remove all events or all listeners registered for a particular event.  \n     * @param {string} [p_event] Name of the event to be removed (Remove all events if omitted)\n     */\n    EventEmitter.prototype.removeAllListeners = function(p_event) {\n        if (!p_event) {\n            this.$storage = {};  // 초기화\n        }\n        if (typeof this.$storage[p_event] === 'object') {\n            delete this.$storage[p_event];\n        }\n    };\n\n    /**\n     * Runs the listener (function) of the registered event.  \n     * \n     * @param {string} p_event Event Name\n     * @returns {boolean | undefined}  'true' listener execution successful, 'false' execution failed, 'undefined' listener no\n     */\n    EventEmitter.prototype.emit = function(p_event) {\n        var args = [].slice.call(arguments, 1);\n        var listeners = [];\n        // var isListener = false;\n        var isReturn;\n\n        if (!_isString(p_event)) throw new ExtendError(/EL01509/, null, [typeof p_event]);\n\n        if (typeof this.$storage[p_event] === 'object') {\n            listeners = this.$storage[p_event].slice();\n            for (var i = 0; i < listeners.length; i++) {\n                isReturn = listeners[i].apply(this, args);\n                if (isReturn === false) return false;\n            }\n        }\n        if (this.isLog) console.log('['+p_event+'] 이벤트가 밸생하였습니다.');\n\n        return listeners.length > 0 ? true : undefined;\n    };\n\n    return EventEmitter;\n    \n}());\n\nexport default EventEmitter;\nexport { EventEmitter };","/**** i-object.js | IObject ****/\n//==============================================================    \nimport ExtendError      from './extend-error.js';    \n\n/**\n * Object interface.\n * \n * @interface\n */\nclass IObject {\n\n    static _NS = 'Interface';    // namespace\n    static _KIND = 'interface';\n\n    /**\n     * @constructs IObject\n     */\n    constructor() {\n    }\n\n    /**\n     * Returns a list of types of objects.\n     * \n     * @returns {Function[]} Arrangement of types of objects\n     * @abstract\n     */\n    getTypes() {\n        throw new ExtendError(/EL02111/, null, ['IObject']);\n    }\n\n    /**\n     * Verify that the object is an instance of a particular class or interface.\n     * \n     * @returns {boolean} Instance or 'true' if it's an instance or 'false' if it's not\n     * @abstract\n     */\n    instanceOf() {\n        throw new ExtendError(/EL02112/, null, ['IObject']);\n    }\n\n    /**\n     * Compare that the object is the same as the given object.\n     * \n     * @returns {boolean} If two objects are the same, 'true', or 'false'\n     * @abstract\n     */\n    equal() {\n        throw new ExtendError(/EL02113/, null, ['IObject']);\n    }\n}\n\nexport default IObject;\nexport { IObject };","/**** i-marshal.js | IMarshal ****/\n//==============================================================\nimport ExtendError      from './extend-error.js';    \n   \n/**\n * Object control interface.\n * \n * @interface\n */\nclass IMarshal {\n    \n    static _NS = 'Interface';    // namespace\n    static _KIND = 'interface';\n\n    /**\n     * @constructs IMarshal\n     */\n    constructor() {\n    }\n\n    /**\n     * Internal property that stores the unique identifier of the object.\n     * \n     * @member {string}\n     */\n    _guid = String;\n\n    /**\n     * Internal property that stores the creator type of the object.\n     * \n     * @member {string} REVIEW:\n     */\n    _type = [['_req_', Function, { $type: 'class' }]];\n\n    /**\n     * Returns the object literal.\n     * \n     * @abstract\n     */\n    getObject() {\n        throw new ExtendError(/EL02121/, null, ['IMarshal']);\n    }\n\n    /**\n     * Set the object literal by converting it to an instance.\n     * \n     * @abstract\n     */\n    setObject() {\n        throw new ExtendError(/EL02122/, null, ['IMarshal']);\n    }\n}\n\nexport default IMarshal;\nexport { IMarshal };","/**** i-collection.js | ICollection ****/\n//==============================================================\nimport ExtendError      from './extend-error.js';\n\n/**\n * This is the collection interface.\n * \n * @interface\n */\nclass ICollection {\n\n    static _KIND = 'interface';\n    static _NS = 'Interface';  // namespace\n\n    constructor() {\n    }\n\n    /**\n     * Add an element to the collection.\n     * \n     * @abstract\n     */\n    add() {\n        throw new ExtendError(/EL02161/, null, ['ICollection']);\n    }\n\n    /**\n     * Remove an element from the collection.\n     * \n     * @abstract\n     */\n    remove() {\n        throw new ExtendError(/EL02162/, null, ['ICollection']);\n    }\n\n    /**\n     * Verify that an element exists in the collection.\n     * \n     * @returns {boolean} If the element exists, it is 'true', otherwise it is 'false'\n     * @abstract\n     */\n    contains() {\n        throw new ExtendError(/EL02163/, null, ['ICollection']);\n    }\n\n    /**\n     * Returns the index of an element in the collection.\n     * \n     * @returns {number} index of element, '-1' without element\n     * @abstract\n     */\n    indexOf() {\n        throw new ExtendError(/EL02164/, null, ['ICollection']);\n    }\n}\n\nexport default ICollection;\nexport { ICollection };","/**** i-collection-property.js | IPropertyCollection ****/\n//==============================================================\nimport ExtendError      from './extend-error.js';    \n// import Util             from './util.js';\nimport ICollection      from './i-collection.js';\n\n/**\n * This is the property collection interface.\n * \n * @interface\n * @extends ICollection\n */\nclass IPropertyCollection extends ICollection {\n\n    static _KIND = 'interface';\n    static _NS = 'Interface';  // namespace\n\n    constructor() {\n        super();\n    }\n\n    /**\n     * Returns the property key for the specified index.\n     * \n     * @returns {boolean} Property key for that index\n     * @abstract\n     */\n    indexToKey() {\n        throw new ExtendError(/EL02181/, null, ['IPropertyCollection']);\n    }\n}\n\nexport default IPropertyCollection;\nexport { IPropertyCollection };","/**** i-element.js | IElement ****/\n//==============================================================\nimport ExtendError      from './extend-error.js';  \n\n/**\n * Element (independent) interface.\n * \n * @interface\n */\nclass IElement {\n\n    static _NS = 'Interface';    // namespace\n    static _KIND = 'interface';\n\n    /**\n     * @constructs IElement\n     */\n    constructor() {\n    }\n\n    /**\n     * Internal property that stores the name of the element.\n     * \n     * @member {string}\n     */\n    _name = String;\n\n    /**\n     * Creates a copy of the current element.\n     * \n     * @returns {object} Replicated Elements\n     * @abstract\n     */\n    clone() {\n        throw new ExtendError(/EL02131/, null, ['IElement']);\n    }\n}\n\nexport default IElement;\nexport { IElement };","/**** i-list.js | IList ****/\n//==============================================================\n\n/**\n * List interface.\n * \n * @interface\n */\nclass IList {\n    \n    static _NS = 'Interface';    // namespace\n    static _KIND = 'interface';\n\n    /**\n     * @constructs IList\n     */\n    constructor() {\n    }\n    \n    /**\n     * An internal array that stores the data in the list.\n     * \n     * @member {array}\n     */\n    _list = Array;\n    \n    /**\n     * Returns the number of lists.\n     * \n     * @member {number}\n     */\n    count = Number;\n}\n\nexport default IList;\nexport { IList };","/**** i-control-list.js | IListControl ****/\n//==============================================================\nimport ExtendError      from './extend-error.js';  \n   \n/**\n * List control interface.\n * \n * @interface\n */\nclass IListControl {\n\n    static _NS = 'Interface';    // namespace\n    static _KIND = 'interface';\n\n    constructor() {\n    }\n\n    /**\n     * Add an element to the list.\n     * \n     * @abstract\n     */\n    add() {\n        throw new ExtendError(/EL02151/, null, ['IListControl']);\n    }\n\n    /**\n     * Remove an element from the list.\n     * \n     * @abstract\n     */\n    del() {\n        throw new ExtendError(/EL02152/, null, ['IListControl']);\n    }\n\n    /**\n     * Verify that an element exists in the list.\n     * \n     * @returns {boolean} If the element exists, it is 'true', otherwise it is 'false'\n     * @abstract\n     */\n    has() {\n        throw new ExtendError(/EL02153/, null, ['IListControl']);\n    }\n\n    /**\n     * Search for elements in the list.\n     * \n     * @abstract\n     */\n    find() {\n        throw new ExtendError(/EL02154/, null, ['IListControl']);\n    }\n}\n\nexport default IListControl;\nexport { IListControl };","/**** i-serialize.js | ISerialize ****/\n//==============================================================\nimport ExtendError      from './extend-error.js';  \n\n/**\n * Interface for serialization and deserialization.\n * \n * @interface\n */\nclass ISerialize {\n    \n    static _NS = 'Interface';    // namespace\n    static _KIND = 'interface';\n\n    /**\n     * @constructs ISerialize\n     */\n    constructor() {\n    }\n\n    /**\n     * Serialize objects, convert them into strings (such as JSON), and export them.\n     * \n     * @returns {string} Serialized String\n     * @abstract\n     */\n    output() {\n        throw new ExtendError(/EL02191/, null, ['ISerialize']);\n    }\n\n    /**\n     * Restore objects by loading serialized data.\n     * \n     * @abstract\n     */\n    load() {\n        throw new ExtendError(/EL02192/, null, ['ISerialize']);\n    }\n}\n\nexport default ISerialize;\nexport { ISerialize };","/**** i-collection-array.js | IArrayCollection ****/\n//==============================================================\nimport ExtendError      from './extend-error.js';   \n// import Util             from './util.js'; \nimport ICollection      from './i-collection.js';\n\n/**\n * Array collection interface.\n * \n * @extends ICollection\n */\nclass IArrayCollection extends ICollection {\n\n    static _KIND = 'interface';\n    static _NS = 'Interface';  // namespace\n\n    constructor() {\n        super();\n    }\n\n    /**\n     * Adds an element to the specified location.\n     * \n     * @abstract\n     */\n    insertAt() {\n        throw new ExtendError(/EL02171/, null, ['IArrayCollection']);\n    }\n}\n\nexport default IArrayCollection;\nexport { IArrayCollection };","/**** namespace-manager.js | NamespaceManager ****/\n//==============================================================\nimport ExtendError      from './extend-error.js';    \nimport Type             from './type.js';\nimport Util             from './util.js';\nimport IList            from './i-list.js';\nimport IListControl     from './i-control-list.js';\n   \nvar NamespaceManager = (function () {\n    /**\n     * Create a Namespace Manager.  \n     * \n     * @constructs NamespaceManager\n     */\n    function NamespaceManager() {\n\n        var $storage = this.$createNsRefer();\n        var _elemTypes  = []; \n        var allowOverlap = false;\n        \n        \n        /**\n         * Namespace repository  \n         * \n         * @member {string} NamespaceManager#$storage\n         * @readonly\n         * @private\n         */\n        Object.defineProperty(this, '$storage', {\n            get: function() { return $storage; },\n            set: function(nVal) { $storage = nVal; },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Namespace element type list.  \n         * Allow all types if empty.  \n         * \n         * @member {array<any>}  NamespaceManager#_elemTypes  \n         * @protected\n         */\n        Object.defineProperty(this, '_elemTypes', {\n            get: function() {\n                return _elemTypes;\n            },\n            set: function(val) {\n                var arrType = Array.isArray(val) ? val : Array.prototype.slice.call(arguments, 0);\n                _elemTypes = arrType;\n            },\n            configurable: false,\n            enumerable: true,\n        });\n\n        /**\n         * Namespace element list.  \n         * \n         * @member {array<string>}  NamespaceManager#_list\n         * @readonly\n         */\n        Object.defineProperty(this, '_list', {\n            get: function() {\n                var storage = this.$storage;\n                var arr = [];\n                var stack = [];\n                findElement(storage);\n                return arr;\n\n                // inner function\n                function findElement(target) { \n                    for (var prop in target) {\n                        if (prop === '_type') continue;\n                        var ns = target[prop];\n                        stack.push(prop);\n                        if (!ns['_type']) {\n                            arr.push(stack.join('.'));\n                        } else findElement(ns);\n                        stack.pop();\n                    }\n                }\n            },\n            configurable: false,\n            enumerable: true,\n        });\n\n        /**\n         * Total number of Namespace elements.  \n         * \n         * @member {number} NamespaceManager#count \n         * @readonly\n         */\n        Object.defineProperty(this, 'count', {\n            get: function() {\n                return this._list.length;\n            },\n            configurable: false,\n            enumerable: true,\n        });\n\n        /**\n         * Set whether to allow duplicate element registration.  \n         * Default is 'false' and does not allow duplication.  \n         * \n         * @member {boolean} NamespaceManager#allowOverlap\n         */\n        Object.defineProperty(this, 'allowOverlap', {\n            get: function() { return allowOverlap; },\n            set: function(val) { \n                if (typeof val !== 'boolean') throw new ExtendError(/EL03311/, null, [typeof val]);\n                allowOverlap = val;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        // inner variable access\n        // this.__SET$storage = function(val, call) {\n        //     if (call instanceof NamespaceManager) $storage = val;\n        // }\n\n        this._$KEYWORD = ['namespace', 'ns', 'NS', '_type'];    // 금지단어\n\n        Util.implements(NamespaceManager, this);        // strip:\n    }\n    NamespaceManager._UNION = [IList, IListControl];\n    NamespaceManager._NS = 'Meta';\n    \n    // local function\n    function _isString(obj) {    // 공백아닌 문자 여부\n        if (typeof obj === 'string' && obj.length > 0) return true;\n        return false;\n    }\n\n    function _validNamespace(nsName) {  // 네임스페이스 이름 검사\n        var regex = /^[_a-zA-Z]([.]?[_0-9a-zA-Z])*$/;\n        return regex.test(nsName);\n    }\n\n    function _validName(sName) {   // 이름 검사\n        var regex = /^[_a-zA-Z]([_0-9a-zA-Z])*$/;\n        return regex.test(sName);\n    }\n\n    function _getArray(ns) {  // 네임스페이스 문자열 배열로 얻기\n        var sections = [];\n        if (ns === '') return sections;\n        if (typeof ns === 'string') {\n            if (!_validNamespace(ns)) throw new ExtendError(/EL03312/, null, [ns]);\n            sections = ns.split('.');\n        } else if (Array.isArray(ns)) {\n            sections = ns;\n        } else throw new ExtendError(/EL03313/, null, [typeof ns]);\n\n        for (var i = 0; i < sections.length; i++) {\n            var sName =sections[i];\n            if (!_isString(sName)) throw new ExtendError(/EL03314/, null, [i, typeof sName]);\n            if (!_validName(sName)) throw new ExtendError(/EL03315/, null, [i, sName]);\n        }\n        return sections;\n    }\n    \n    /**\n     * Creates a storage initialization object.  \n     * \n     * @returns {object} initialized namespace type object { _type: 'ns'}\n     * @private\n     */\n    NamespaceManager.prototype.$createNsRefer = function() {\n        return { _type: 'ns' };\n    };\n\n    /**\n     * Returns the Namespace path object.  \n     * \n     * @param {string | object} p_elem Factors to obtain the path\n     * @returns {object} Namespace path object {ns: '...', key: '...'}\n     * @protected\n     */\n    NamespaceManager.prototype._getPathObject = function(p_elem) {\n        var fullName;\n        var arr;\n        var key;\n        var nsPath;\n        var obj = {};\n\n        if (_isString(p_elem)) fullName = p_elem;\n        else fullName = this.getPath(p_elem);\n        \n        if (typeof fullName !== 'string') return undefined;\n\n        arr = fullName.split('.');\n        key = arr.pop();\n        nsPath = arr.join('.');\n        obj['ns'] = nsPath;\n        obj['key'] = key;\n        return obj;\n    };\n    \n    /**\n     * Initialize the namespace.  \n     */\n    NamespaceManager.prototype.init = function() {\n        this.$storage = this.$createNsRefer();\n    };\n\n    /**\n     * Add a path to the Namespace.  \n     * \n     * @param {string | array<string>} p_ns Namespace name, path in the form of a string or array separated by a dot ('.')\n     */\n    NamespaceManager.prototype.addNamespace = function(p_ns) {\n        var parent = this.$storage;\n        var sections;\n    \n        try {\n            sections = _getArray(p_ns);\n\n            if (this._$KEYWORD.indexOf(sections[0]) > -1) sections = sections.slice(1); // 최상위 에약어 제거\n        \n            for (var i = 0; i < sections.length; i+=1) {\n                // var sName = sections[i];\n                if (typeof parent[sections[i]] === 'undefined') {\n                    parent[sections[i]] = this.$createNsRefer();\n                }\n                parent = parent[sections[i]];\n            }\n\n        } catch (error) {\n            throw new ExtendError(/EL03321/, error, []);\n        }\n    };\n\n    /**\n     * Delete the path in the Namespace.  \n     * \n     * @param {string | array<string>} p_ns Namespace name, path in the form of a string or array separated by a dot ('.')\n     */\n    NamespaceManager.prototype.delNamespace = function(p_ns) {\n        var parent = this.$storage;\n        var sections;\n    \n        try {\n            sections = _getArray(p_ns);\n\n            for (var i = 0; i < sections.length; i+=1) {\n                var sName = sections[i];\n                if (parent[sName] && parent[sName]['_type'] === 'ns') {\n                    if (i === sections.length - 1) delete parent[sName];\n                    else parent = parent[sName];\n                } else return;\n            }\n        } catch (error) {\n            throw new ExtendError(/EL03322/, error, []);\n        }\n    };\n\n    /**\n     * Returns the path object of the namespace.  \n     * \n     * @param {string | sting[]} p_ns Namespace name, path in the form of a string or array separated by a dot ('.')\n     * @returns {object} path object\n     */\n    NamespaceManager.prototype.path = function(p_ns) {\n        var parent = this.$storage;\n        var sections;\n\n        if (!p_ns) return parent;\n        \n        try {\n            sections = _getArray(p_ns);\n\n            for (var i = 0; i < sections.length; i+=1) {\n                var sName = sections[i];\n                if (parent[sName] && parent[sName]['_type'] === 'ns') {\n                    if (i === sections.length - 1) return parent[sName];    \n                    parent = parent[sName];\n                } else return undefined;\n            }\n            return undefined;\n            \n        } catch (error) {\n            throw new ExtendError(/EL03323/, error, []);\n        }\n    };\n\n    /**\n     * Adds an element to the specified namespace path.  \n     * \n     * @param {string} p_fullName Full path to the Namespace\n     * @param {any} p_elem Functions, classes, or objects to be added\n     */\n    NamespaceManager.prototype.add = function(p_fullName, p_elem) {\n        var parent = this.$storage;\n        var sections;\n        var oPath;\n        var key;\n        var ns;\n\n        try {\n            oPath = this._getPathObject(p_fullName);\n            key = oPath['key'];\n            ns = oPath['ns'];\n            sections = _getArray(ns);\n\n            if (this._elemTypes.length > 0) Type.matchType([this._elemTypes], p_elem);  // []로 감싸서 choice 타입으로 변환됨\n            if (!_validName(key)) throw new ExtendError(/EL03331/, null, [key]);\n            if (!this.allowOverlap && this.getPath(p_elem)) {\n                throw new ExtendError(/EL03332/, null, []);\n            }\n            \n            if (sections.length === 0) {    // 최상위 등록\n                parent[key] = p_elem;\n                return;\n            } else this.addNamespace(ns);\n\n            for (var i = 0; i < sections.length; i+=1) {\n                var sName = sections[i];\n                if (i === sections.length - 1) { \n                    parent[sName][key] = p_elem;\n                } else parent = parent[sName];\n            }\n            \n        } catch (error) {\n            throw new ExtendError(/EL03333/, error, []);\n        }\n    };\n\n    /**\n     * Deletes an element from the specified namespace path.  \n     * \n     * @param {string} p_fullname Full path to the Namespace\n     * @returns {boolean} Successful deletion ('true' or 'false')\n     */\n    NamespaceManager.prototype.del = function(p_fullName) {\n        var parent = this.$storage;\n        var sections;\n\n        try {\n            sections = _getArray(p_fullName);\n\n            for (var i = 0; i < sections.length; i+=1) {\n                var sName = sections[i];\n                if (parent[sName]) {\n                    if (i === sections.length - 1) {\n                        delete parent[sName];\n                        return true;\n                    } else parent = parent[sName];\n                } else return false;\n            }\n            return false;\n            \n        } catch (error) {\n            throw new ExtendError(/EL03334/, error, []);\n        }\n\n    };\n\n    /**\n     * Verify that the specified element exists in the Namespace.  \n     * \n     * @param {string | any} p_elem Function, class, or object to check\n     * @returns {boolean} Existence ('true' or 'false')\n     */\n    NamespaceManager.prototype.has = function(p_elem) {\n        if (_isString(p_elem) && this.find(p_elem)) return true;\n        else if (typeof this.getPath(p_elem) === 'string') return true;\n        return false;\n    };\n\n    /**\n     * Retrieves elements from the specified namespace path.  \n     * \n     * @param {string | array<string>} p_fullName Full path to the Namespace\n     * @returns {(object | function)?} Found elements\n     */\n    NamespaceManager.prototype.find = function(p_fullName) {\n        var parent = this.$storage;\n        var sections;\n\n        try {\n            sections = _getArray(p_fullName);   // try undefined\n            for (var i = 0; i < sections.length; i+=1) {\n                var sName = sections[i];\n                if (parent[sName]) {\n                    if (i === sections.length - 1) return parent[sName];\n                    else parent = parent[sName];\n                } else return undefined;\n            }\n            return undefined;\n            \n        } catch (error) {\n            return undefined;              \n        }\n    };\n    \n    /**\n     * Returns the path of the specified element in the Namespace.  \n     * (Route of the first element in case of redundancy)  \n     * @param {any} p_elem Elements to find (function or object)\n     * @returns {string?} The path of the element, 'undefined' if not found\n     */\n    NamespaceManager.prototype.getPath = function(p_elem) {\n        var namespace = this.$storage;\n        var stack = [];\n\n        if (!p_elem) throw new ExtendError(/EL03341/, null, [typeof p_elem]);\n\n        if ($findElement(namespace)) {\n            return stack.join('.');\n        } else return undefined;\n\n        // inner function\n        function $findElement(target) { \n            for(var prop in target) {\n                var obj = target[prop];\n                if (obj === 'ns') continue;\n                if (obj && obj['_type'] === 'ns') {\n                    stack.push(prop);\n                    if($findElement(obj)) return true;\n                } else {\n                    if (obj === p_elem) {\n                        stack.push(prop);\n                        return true;\n                    }\n                }\n            }\n            stack.pop();\n            return false;\n        }\n    };\n\n    /**\n     * Serialize the namespace repository and convert it into a string.  \n     * To convert the function to JSON, you must specify a separate 'stringify' function.  \n     * \n     * @param {function?} p_stringify JSON Stringify function (optional)\n     * @param {string?} p_space Setting the blank to apply at the output\n     * @returns {string} serialized string\n     */\n    NamespaceManager.prototype.output = function(p_stringify, p_space) {\n        var arr = [];\n        var obj;\n        var str;\n        var temp = { list: arr };\n\n        try {\n            for (var i = 0; i < this._list.length; i++) {\n                var fullName    = this._list[i];\n                var fun         = this.find(fullName);\n                var nObj        = this._getPathObject(fullName);\n                obj = { \n                    ns: nObj.ns, \n                    key: nObj.key, \n                    full: fullName, \n                    elem: fun\n                };\n                arr.push(obj);\n            }\n\n            if (typeof p_stringify === 'function') str = p_stringify(temp, { space: p_space } );\n            else str = JSON.stringify(temp, null, p_space);\n            return str;\n            \n        } catch (error) {\n            throw new ExtendError(/EL03342/, error, [error]);\n        }\n        \n    };\n\n    /**\n     * Parsing serialized strings and fetching them to the Namespace repository.  \n     * @param {string} p_str serialized string\n     * @param {function?} p_parse  JSON parser function\n     */\n    NamespaceManager.prototype.load = function(p_str, p_parse) {\n        var arr = [];\n        \n        if (!_isString(p_str)) throw new ExtendError(/EL03343/, null, [typeof p_str]);\n        \n        try {\n            if (typeof p_parse === 'function') arr = p_parse(p_str);\n            else arr = JSON.parse(p_str, null);\n            \n            this.init();\n            for (var i = 0; i < arr['list'].length; i++) {\n                var o = arr['list'][i];\n                var fun = o['elem'];\n                this.add(o['full'], fun);\n            }\n\n        } catch (error) {\n            throw new ExtendError(/EL03344/, error, [error.message]);\n        }\n    };\n\n    return NamespaceManager;\n}());\n\nexport default NamespaceManager;\nexport { NamespaceManager };","/**** meta-registry.js | MetaRegistry ****/\n//==============================================================\n// import Message from './message.js';    \nimport ExtendError          from './extend-error.js';    \nimport Util                 from './util.js';\nimport NamespaceManager     from './namespace-manager.js';\n       \nvar MetaRegistry = (function () {\n    /**\n     * 'MetaRegistry' is a class responsible for registering and managing meta objects.  \n     * \n     * @constructs MetaRegistry\n     * @static\n     */\n    function MetaRegistry() { \n    }\n\n    MetaRegistry._NS = 'Meta';    // namespace\n\n    // var define\n    var _list = [];\n    var namespace = new NamespaceManager();\n\n    /**\n     * List of meta objects.  \n     * \n     * @member {any[]} MetaRegistry#_list\n     * @readonly\n     */\n    Object.defineProperty(MetaRegistry, '_list', {\n        get: function() { \n            var arr = [];\n            for (var i = 0; i < _list.length; i++) arr.push(_list[i]);\n            return arr;\n        },\n        configurable: false,\n        enumerable: true,\n    });\n\n    /**\n     * Total number of currently registered meta objects.  \n     * \n     * @member {number} MetaRegistry#count\n     * @readonly\n     */\n    Object.defineProperty(MetaRegistry, 'count', {\n        get: function() { return _list.length; },\n        configurable: false,\n        enumerable: true,\n    });        \n\n    /**\n     * Namespace manager for meta objects.  \n     * \n     * @member {NamespaceManager} MetaRegistry#namespace\n     * @readonly\n     */\n    Object.defineProperty(MetaRegistry, 'namespace', {\n        get: function() { return namespace; },\n        configurable: false,\n        enumerable: true,\n    });\n\n    // local function\n    function _isBuiltFunction(obj) {    // 내장함수 여부\n        if (typeof obj === 'function' && (false \n            || obj === Number || obj === String \n            || obj === Boolean || obj === Function\n            || obj === Object || obj === Array\n            || obj === RegExp || obj === Date \n            || obj === Symbol || obj === BigInt\n        )) return true;\n        return false;\n    }\n\n    function _isObject(obj) {    // 객체 여부\n        if (typeof obj === 'object' && obj !== null) return true;\n        return false;\n    }\n\n    function _isString(obj) {    // 공백아닌 문자 여부\n        if (typeof obj === 'string' && obj.length > 0) return true;\n        return false;\n    }\n    \n    function _getGuidList(oGuid, arr) {  //객체 배열 리턴\n        arr = arr || [];\n        if (MetaRegistry.isGuidObject(oGuid)) arr.push(oGuid);\n        if (Array.isArray(oGuid)){\n            for(var i = 0; i < oGuid.length; i++) {\n                if (_isObject(oGuid[i])) _getGuidList(oGuid[i], arr);\n            }\n        } else if (_isObject(oGuid)) {\n            for(var prop in oGuid) {\n                if (_isObject(oGuid[prop])) _getGuidList(oGuid[prop], arr);\n            }\n        }\n        return arr;\n    };\n\n    /**\n     * Initializes registered meta objects and namespaces.  \n     */\n    MetaRegistry.init = function() {\n        _list.length = 0;\n        this.namespace.init();\n    };\n\n    /**\n     * Register the meta object and register the creator in the namespace.  \n     * An exception occurs if an object is already registered.   \n     * Register if there is no creator in the Namespace.  \n     * \n     * @param {MetaObject} p_meta Meta object to register\n     */\n    MetaRegistry.register = function(p_meta) {\n        var _ns;\n        var key;\n        var type;\n        // var fullName;\n\n        if (!this.isMetaObject(p_meta)) throw new ExtendError(/EL03211/, null, [p_meta._type, p_meta._guid]);\n        if (this.has(p_meta)) throw new ExtendError(/EL03212/, null, [p_meta._guid]);\n\n        _ns         = p_meta['_ns'] || '';\n        type        = p_meta['_type'];\n        key         = type.name;\n        // fullName    = p_meta['_ns'] && p_meta['_ns'].length > 0 ?  _ns +'.'+key : key;\n\n        _list.push(p_meta);  // 객체 등록\n        this.registerClass(type, _ns, key); // 클래스 등록\n    };\n\n    /**\n     * Undoes the meta object in the registry.  \n     * \n     * @param {MetaObject | string} p_meta Meta object or GUID string\n     * @returns {boolean} successful removal ('true' or 'false')\n     */\n    MetaRegistry.release = function(p_meta) {\n        var guid;\n\n        if (typeof p_meta !== 'object' && typeof p_meta !== 'string') {\n            throw new ExtendError(/EL03213/, null, [typeof p_meta]);\n        }\n\n        guid = typeof p_meta === 'string' ? p_meta : p_meta['_guid'];\n        if (!_isString(guid)) return false;\n\n        for(var i = 0; i < _list.length; i++) {\n            if (_list[i]['_guid'] === guid) {\n                _list.splice(i, 1);\n                return true;\n            }\n        }\n        return false;\n    };\n\n    /**\n     * Check if the registry has a meta object.  \n     * \n     * @param {object | string} p_oGuid  Object of type GUID or GUID string\n     * @returns {boolean} Existence ('true' or 'false')\n     */\n    MetaRegistry.has = function(p_oGuid) {\n        var guid = _isObject(p_oGuid) ? p_oGuid['_guid'] : p_oGuid;\n\n        if (!_isString(guid)) return false;\n\n        for(var i = 0; i < _list.length; i++) {\n            if (_list[i]['_guid'] === guid) return true;\n        }\n        return false;\n    };\n    \n    /**\n     * Locate the meta object in the registry.  \n     * \n     * @param {object | string} p_oGuid Object of type GUID or GUID string\n     * @returns {MetaObject?} meta object found, 'undefined' if not found\n     */\n    MetaRegistry.find = function(p_oGuid) {\n        var guid = _isObject(p_oGuid) ? p_oGuid['_guid'] : p_oGuid;\n        \n        if (!_isString(guid)) return undefined;\n        \n        for(var i = 0; i < _list.length; i++) {\n            if (_list[i]['_guid'] === guid) return _list[i];\n        }\n        return undefined;\n    };\n\n    /**\n     * Checks for meta objects.  \n     * \n     * @param {object} p_target Target object\n     * @returns {boolean} Whether it is a meta object ('true' or 'false')\n     */\n    MetaRegistry.isMetaObject = function(p_target) {\n        if (!_isObject(p_target)) return false;\n        if (_isString(p_target['_guid']) && typeof p_target['_type'] === 'function') return true;\n        return false;\n    };\n    \n    /**\n     * Creates a meta object of a GUID object.  \n     * \n     * @param {object} p_oGuid GUID type object\n     * @param {object} [p_origin=p_oGuid] Initial GUID literal object\n     * @returns {MetaObject} created meta object\n     */\n    MetaRegistry.createMetaObject = function(p_oGuid, p_origin) {\n        var origin = p_origin ? p_origin : p_oGuid;\n        var args = [null];\n        var type;\n        var ns;\n        var fullName;\n        var coClass;\n        var params;\n        \n        if (!_isObject(p_oGuid)) throw new ExtendError(/EL03221/, null, [typeof p_oGuid]);\n        if (!_isString(p_oGuid['_type'])) throw new ExtendError(/EL03222/, null, [typeof p_oGuid['_type']]);\n        if (!_isObject(origin)) throw new ExtendError(/EL03223/, null, [typeof origin]);\n        \n        type        = p_oGuid['_type'];\n        ns          = p_oGuid['_ns'] || '';\n        fullName    =  ns !== '' ? [ns, type].join('.') : type;\n        coClass     = this.getClass(fullName);\n        \n        if (typeof coClass !== 'function') throw new ExtendError(/EL03224/, null, [fullName, typeof coClass]);\n        \n        // params = coClass.hasOwnProperty('_PARAMS') ? coClass['_PARAMS'] : []; // arr\n        params = Object.prototype.hasOwnProperty.call(coClass, '_PARAMS') ? coClass['_PARAMS'] : []; // arr\n        for (var i = 0; i < params.length; i++) {\n            var argName = params[i];\n            var prop = p_oGuid[argName];\n            var obj;\n            obj = _isObject(prop) && prop['$ref'] ? this.findSetObject(prop['$ref'], origin) : prop;\n            if (p_oGuid[argName]) args.push(obj);\n        }\n        return new (Function.prototype.bind.apply(coClass, args));\n    };\n    \n    /**\n     * Creates a reference object for a GUID object.  \n     * \n     * @param {MetaObject} p_meta Meta object\n     * @returns {object} created reference object ('{$ref: 'guid value'}')\n     * @example\n     * var meta = new MetaElement('m1');\n     * obj.onwer = MetaRegistry.createReferObject(meta);\n     * console.log(obj.onwer);          // { $ref : '5337877c-49d6-9add-f35a-7bd31d510d4f' }\n     */\n    MetaRegistry.createReferObject = function(p_meta) {\n        if (!_isObject(p_meta)) throw new ExtendError(/EL03225/, null, [typeof p_meta]);\n        if (!_isString(p_meta['_guid'])) throw new ExtendError(/EL03226/, null, [typeof p_meta['_guid']]);\n        return { $ref: p_meta['_guid'] };\n    };\n\n    /**\n     * Register the function in the Namespace and create a reference object.  \n     * \n     * @param {function} p_target Function or constructor\n     * @returns {object} created namespace reference object ('{$ns: 'Meta.MetaElement'}')\n     * @example\n     * var meta = new MetaElement('m1');\n     * obj.onwer = MetaRegistry.createReferObject(meta);\n     * console.log(obj);                // {onwer: {$ns: 'Meta.MetaElement'}}\n     */\n    MetaRegistry.createNsReferObject = function(p_target) {\n        var fullName;\n        var ns, key;\n\n        if (typeof p_target !== 'function') throw new ExtendError(/EL03227/, null, [typeof p_target]);\n        \n        if (!this.findClass(p_target)) {\n            ns  = p_target['_NS'] || '';\n            key = p_target.name;\n            this.registerClass(p_target, ns, key);\n        }\n        fullName = this.findClass(p_target);\n        return { $ns: fullName };\n    };\n\n    /**\n     * Set the GUID of the meta object in the GUID object.  \n     * - oGuid.$set = meta._guid  \n     * \n     * @param {object} p_oGuid GUID type object\n     * @param {MetaObject} p_meta Meta object\n     * @returns {object} set object\n     * @example\n     * var meta = new MetaElement('m1');    // meta.guid = '5337877c-49d6-9add-f35a-7bd31d510d4f'\n     * var obj = { name: 'm2' };\n     * MetaRegistry.setMetaObject(obj, meta);\n     * console.log(obj);                    // {name: 'm2, $set: '5337877c-49d6-9add-f35a-7bd31d510d4f'}\n     */\n    MetaRegistry.setMetaObject = function(p_oGuid, p_meta) {\n        if (!_isObject(p_oGuid)) throw new ExtendError(/EL03241/, null, [typeof p_oGuid]);\n        if (!_isObject(p_meta)) throw new ExtendError(/EL03242/, null, [typeof p_meta]);\n        if (!_isString(p_meta['_guid'])) throw new ExtendError(/EL03243/, null,[typeof p_meta['_guid']]);\n        \n        p_oGuid['$set'] = p_meta['_guid'];\n        return p_oGuid;\n    };\n        \n    /**\n     * Validates the GUID object.  \n     * 1. Check if the object has duplicate GUID values  \n     * 2. Determine if an object has a '$ref' value  \n     * 3. Determine if an object has a '$ns' value  \n     * 4. Check the number of '_key' and '_elem' of objects   \n     * \n     * @param {object} p_oGuid GUID object to be inspected\n     * @returns {boolean} Inspection result ('true' or 'false')\n     */\n    MetaRegistry.validObject = function(p_oGuid) {\n        var _this = this;\n        var arrObj;\n\n        if (!_isObject(p_oGuid)) throw new ExtendError(/EL03251/, null, [typeof p_oGuid]);\n        \n        arrObj = _getGuidList(p_oGuid);\n        if (!$validUniqueGuid() || !$validReference(p_oGuid) || !$validCollection(p_oGuid)) return false;\n        return true;\n\n        // inner function\n        function $findGuid(guid, arr) { // guid 조회\n            for(var i = 0; i < arr.length; i++) {\n                if (arr[i]['_guid'] === guid) return arr[i];\n            }\n            return undefined;\n        }\n        function $validReference(oGuid) { // 참조 검사\n            if (oGuid['$ref'] && !$findGuid(oGuid['$ref'], arrObj)) return false;\n            if (oGuid['$set'] && !$findGuid(oGuid['$set'], arrObj)) return false;\n            if (oGuid['$ns'] && !_this.getClass(oGuid['$ns'])) return false;\n    \n            if (Array.isArray(oGuid)){\n                for(var i = 0; i < oGuid.length; i++) {\n                    if (_isObject(oGuid[i]) && !$validReference(oGuid[i])) return false;\n                }\n            } else {\n                for(var prop in oGuid) {\n                    if (_isObject(oGuid[prop]) && !$validReference(oGuid[prop])) return false;\n                }\n            }\n            return true;\n        }\n        function $validCollection(oGuid) { // 컬렉션 검사\n            if (Array.isArray(oGuid['_elem']) && Array.isArray(oGuid['_key'])) {\n                if (oGuid['_elem'].length !== oGuid['_key'].length) return false;\n            }\n            if (Array.isArray(oGuid)){\n                for(var i = 0; i < oGuid.length; i++) {\n                    if (_isObject(oGuid[i]) && !$validCollection(oGuid[i])) return false;\n                }\n            } else {\n                for(var prop in p_oGuid) {\n                    if (_isObject(oGuid[prop]) && !$validCollection(oGuid[prop])) return false;\n                }\n            }\n            return true;\n        }\n        function $validUniqueGuid() {    // guid 유일한 값인지 검사\n            for (var i = 0; i < arrObj.length; i++) {\n                for (var j = 0; j < arrObj.length; j++) {\n                    if (arrObj[i]['_guid'] === arrObj[j]['_guid'] && i !== j) return false; // 중복\n                }\n            }\n            return true;\n        }\n    };\n\n    /**\n     * Verify that the target object is a GUID object.  \n     * @param {object} p_target Object to be checked\n     * @returns {boolean} Guid object(`true` or `false`)\n     */\n    MetaRegistry.isGuidObject = function(p_target) {\n        if (!_isObject(p_target)) return false;\n        if (_isString(p_target['_guid']) && _isString(p_target['_type'])) return true;\n        return false;\n    };\n\n    /**\n     * Verify that the source object contains a GUID object.  \n     * \n     * @param {string| object} p_oGuid GUID object or GUID string to check\n     * @param {object | array<object>} p_origin  GUID literal object of query\n     * @returns {boolean} whether to include ('true' or 'false')\n     */\n    MetaRegistry.hasGuidObject = function(p_oGuid, p_origin) {\n        var guid = _isObject(p_oGuid) ? p_oGuid['_guid'] : p_oGuid;\n        var arrOrigin = [];\n\n        if (!_isString(guid)) throw new ExtendError(/EL03252/, null, [typeof guid]);\n\n        if (Array.isArray(p_origin)) arrOrigin = p_origin;\n        else arrOrigin.push(p_origin);\n\n        for (var i = 0; i < arrOrigin.length; i++) {\n            var origin = arrOrigin[i];\n            var arrObj = _getGuidList(origin);\n            if (!_isObject(origin)) throw new ExtendError(/EL03253/, null, [i, typeof guid]);\n            for (var j = 0; j < arrObj.length; j++) {\n                if (arrObj[j]._guid === guid) return true;\n            }\n        }\n        return false;\n    };\n\n    /**\n     * Verify that the GUID object contains a reference type element.  \n     * Reference types are '$ref' and '$ns'.  \n     * \n     * @param {object} p_oGuid GUID object to check\n     * @returns {boolean} whether to include ('true' or 'false')\n     */\n    MetaRegistry.hasRefer = function(p_oGuid) {\n        if (!_isObject(p_oGuid)) throw new ExtendError(/EL03254/, null, [typeof p_oGuid]);\n        if (!this.isGuidObject(p_oGuid)) throw new ExtendError(/EL03255/, null, [p_oGuid['_type'], p_oGuid['_guid']]);\n\n        return $hasRefer(p_oGuid);\n\n        // inner function\n        function $hasRefer(oGuid) {  // 참조 포함 여부\n            if (Array.isArray(oGuid)){\n                for(var i = 0; i < oGuid.length; i++) {\n                    if (typeof oGuid[i] === 'object' && $hasRefer(oGuid[i])) return true;\n                }\n            } else {\n                if (oGuid['$ref'] && _isString(oGuid['$ref'])) return true;\n                if (oGuid['$ns'] && _isString(oGuid['$ns'])) return true;\n                for(var prop in oGuid) {\n                    if (_isObject(oGuid[prop]) && $hasRefer(oGuid[prop])) return true;\n                }\n            }\n            return false;\n        }\n    };     \n\n    /**\n     * Retrieves the set GUID object from the repository.  \n     * \n     * @param {string | object} p_oGuid GUID object or GUID string to look up\n     * @param {object} p_origin GUID literal object with query target\n     * @returns {MetaObject} meta-objects viewed\n     */\n    MetaRegistry.findSetObject = function(p_oGuid, p_origin) {\n        var guid = _isObject(p_oGuid) ? p_oGuid['_guid'] : p_oGuid;\n        var origin = p_origin;\n\n        if (!_isString(guid)) throw new ExtendError(/EL03256/, null, [guid]);\n        if (!_isObject(origin)) throw new ExtendError(/EL03257/, null, [typeof origin]);\n\n        return $findObject(origin);\n        \n        // inner finction\n        function $findObject(oGuid) { // 객체 조회\n            var result;\n            if (Array.isArray(oGuid)){\n                for(var i = 0; i < oGuid.length; i++) {\n                    if (typeof oGuid[i] === 'object') {\n                        result = $findObject(oGuid[i]);\n                        if(result) return result;\n                    }\n                }\n            } else {\n                if (oGuid['_guid'] && oGuid['_guid'] === guid) {\n                    result = oGuid['$set'] ? MetaRegistry.find(oGuid['$set']) : undefined;\n                    return result;\n                }\n                for(var prop in oGuid) {\n                    if (typeof oGuid[prop] === 'object') {\n                        result = $findObject(oGuid[prop]);\n                        if(result) return result;\n                    } \n                }\n            }\n            return result;\n        }\n    };\n\n        \n\n    /**\n     * Converts the reference element value of a GUID object to a real object reference.  \n     * To be converted: '$ns' is converted to '[Object Object]'.  \n     * @param {object} p_oGuid GUID object to convert\n     * @returns {object} converted meta object\n     */\n    MetaRegistry.transformRefer = function(p_oGuid) {\n        var _this = this;\n        var arrObj;\n        var clone;\n\n        if (!_isObject(p_oGuid)) throw new ExtendError(/EL03244/, null, [typeof p_oGuid]);\n        \n        arrObj = _getGuidList(p_oGuid);\n        clone = Util.deepCopy(p_oGuid);\n        $linkReference(clone, arrObj);\n        return clone;\n\n        // inner function\n        function $linkReference(oGuid, arr, parentName) {    // 참조 연결\n            parentName = parentName || '';\n            if (Array.isArray(oGuid)){\n                for(var i = 0; i < oGuid.length; i++) {\n                    if (typeof oGuid[i] === 'object') $linkReference(oGuid[i], arr);\n                }\n            } else {\n                for(var prop in oGuid) {\n                    if (_isObject(oGuid[prop])) {\n                        if (oGuid[prop]['$ns']) {\n                            var ns = _this.getClass(oGuid[prop]['$ns']);\n                            if (typeof ns !== 'function') throw new ExtendError(/EL03245/, null, [parentName, prop]);\n                            oGuid[prop] = ns; // function 타입 연결\n                        } else $linkReference(oGuid[prop], arr, parentName ? parentName +'.'+ prop : prop);\n                    }\n                }\n            }\n        }\n    };\n    \n    /**\n     * Register the creator or object in the specified namespace.  \n     * It registers after performing duplicate checks, and does not store built-in functions (Array, String, Number, etc.).  \n     * \n     * @param {function | object} p_target To be registered (class creator or object)\n     * @param {string} p_ns Namespace name (separated by a dot '.')\n     * @param {string} p_key Destination name (class name or function name), otherwise the last name of the namespace applies.\n     */\n    MetaRegistry.registerClass = function(p_target, p_ns, p_key) {\n        var fullName;\n        \n        if (!(_isObject(p_target) || typeof p_target === 'function')) throw new ExtendError(/EL03231/, null, [typeof p_target]);\n        if (p_ns && typeof p_ns !== 'string') throw new ExtendError(/EL03232/, null, [typeof p_ns]);\n        if (p_key && !_isString(p_key)) throw new ExtendError(/EL03233/, null, [typeof p_key]);\n\n        if (p_key) fullName = p_ns.length > 0 ? p_ns +'.'+ p_key : p_key;\n        else fullName = p_ns;\n        \n        if (_isBuiltFunction(p_target)) return;    // 내장함수 제외\n        if (typeof globalThis[fullName] === 'function') return;\n        \n        if (!this.namespace.find(fullName)) this.namespace.add(fullName, p_target);  // 중복 검사 후 등록\n    };\n    \n    /**\n     * Undoes the registered item in the Namespace.  \n     * \n     * @param {string} p_fullName full path to the namespace ('string')\n     * @returns {boolean} Successful deletion ('true' or 'false')\n     */\n    MetaRegistry.releaseClass = function(p_fullName) {\n        if (!_isString(p_fullName)) throw new ExtendError(/EL03234/, null, [typeof p_fullName]);\n        \n        if (typeof globalThis[p_fullName] === 'function') return true; // 내장함수 & 전역 함수\n        return this.namespace.del(p_fullName);\n    };\n    \n    /**\n     * Finds the specified constructor or object in the Namespace and returns the entire path.  \n     * \n     * @param {function} p_target Creator or object\n     * @returns {string?} Namespace Full path, 'undefined' if not found\n     */\n    MetaRegistry.findClass = function(p_target) {\n        var fullName;\n\n        if (typeof p_target !== 'function') throw new ExtendError(/EL03235/, null, [typeof p_target]);\n        \n        fullName = p_target.name;\n        if (typeof globalThis[fullName] === 'function') return fullName;   // 내장함수 & 전역 함수\n        return this.namespace.getPath(p_target);\n    };\n    \n    /**\n     * Returns a generator or object corresponding to the entire path specified in the Namespace.  \n     * \n     * @param {string} p_fullName Full path to the Namespace\n     * @returns {(object | function)?} corresponding object or creator, 'undefined' if not found\n     */\n    MetaRegistry.getClass = function(p_fullName) {\n        if (!_isString(p_fullName)) throw new ExtendError(/EL03236/, null, [typeof p_fullName]);\n        \n        if (typeof globalThis[p_fullName] === 'function') return globalThis[p_fullName];  // 내장함수 & 전역 함수\n        return this.namespace.find(p_fullName);\n    };\n\n    /**\n     * Pars the serialized JSON string to convert it to 'MetaObject'.  \n     * REVIEW: 필요성 재검토 필요  \n     * @param {string} p_str serialized JSON string\n     * @param {function?} p_parse JSON parser function (default is 'JSON.parse')\n     * @returns {MetaObject} converted meta object\n     */\n    MetaRegistry.loadMetaObject = function(p_str, p_parse) {\n        var obj = p_str;\n        var oGuid;\n        var meta;\n\n        if (typeof p_str !== 'string') throw new ExtendError(/EL03246/, null, [typeof str]);\n\n        obj = (typeof p_parse === 'function') ? p_parse(obj) : JSON.parse(obj, null);\n        if (this.has(obj)) return this.find(obj['_guid']);  // 객체가 존재할 경우\n        if (!this.isGuidObject(obj)) throw new ExtendError(/EL03247/, null, [obj['_type'], obj['_guid']]);\n\n        oGuid = this.transformRefer(obj);\n        meta = this.createMetaObject(oGuid);\n        meta.setObject(oGuid);\n        return meta;\n    };\n    return MetaRegistry;\n}());\n\nexport default MetaRegistry;\nexport { MetaRegistry };","/**** meta-object.js | MetaObject ****/\n//==============================================================\nimport ExtendError      from './extend-error.js';    \nimport Type             from './type.js';\nimport Util             from './util.js';\nimport IObject          from './i-object.js';\nimport IMarshal         from './i-marshal.js';\nimport MetaRegistry     from './meta-registry.js';\n   \nvar MetaObject  = (function () {\n    /**\n     * Creates an instance of the MetaObject class.  \n     * \n     * @constructs MetaObject\n     * @implements {IObject}\n     * @implements {IMarshal}\n     */\n    function MetaObject() {\n\n        var _guid;\n        var _ns;\n        \n        /**\n         * Internal property that stores the unique identifier of the object.  \n         * \n         * @readonly\n         * @member {string} MetaObject#_guid \n         * @example\n         * var obj = MetaObject();\n         * console.log(obj._guid);      // '5337877c-49d6-9add-f35a-7bd31d510d4f' unique key code\n         */\n        Object.defineProperty(this, '_guid', {\n            get: function() { \n                if (!_guid) _guid = Util.createGuid();\n                return _guid;\n            },\n            set: function(nVal) { _guid = nVal; },\n            configurable: false,\n            enumerable: false\n        });\n\n        /**\n         * Internal property that refers to the generator function of the object.  \n         * \n         * @readonly\n         * @member {function} MetaObject#_type \n         * @example\n         * var obj = new MetaObject();\n         * obj._type === MetaObject;        // true\n         * console.log(typeof obj._type);   // 'function'\n         */\n        Object.defineProperty(this, '_type', {\n            get: function() { \n                var proto = this.__proto__ || Object.getPrototypeOf(this);\n                return proto.constructor;\n            },\n            configurable: false,\n            enumerable: false\n        });\n\n        /**\n         * Indicates the object name space.  \n         * If '_type.NS' is not statically defined, use the parent's namespace as the default.  \n         */\n        Object.defineProperty(this, '_ns', {\n            get: function() { \n                return _ns;\n            },\n            set: function(nVal) { \n                _ns = nVal;\n            },\n            configurable: false,\n            enumerable: false\n        });\n        \n        // 추상클래스 검사\n        if (Object.prototype.hasOwnProperty.call(this._type, '_KIND')) {\n        // if (this._type.hasOwnProperty('_KIND')) {\n            var kind = this._type['_KIND'].toLowerCase();\n            if (['abstract', 'interface', 'enum', 'function'].indexOf(kind) > -1) {\n                throw new ExtendError(/EL03111/, null, [this._type.name, kind]);\n            }\n        }\n\n        // _NS 선언이 없으면 부모의 것을 기본으로 사용!\n        if (this._type && this._type._NS) this._ns = this._type._NS;\n        MetaRegistry.register(this);\n\n        Util.implements(MetaObject, this);          // strip:\n    }\n    MetaObject._UNION = [IObject, IMarshal];\n    MetaObject._NS = 'Meta';\n    MetaObject._PARAMS = [];\n\n    // local function\n    function _isObject(obj) {    // 객체 여부\n        if (typeof obj === 'object' && obj !== null) return true;\n        return false;\n    }\n\n    function _compare(p_obj1, p_obj2) { // 객체 비교\n        if (p_obj1 === p_obj2) return true;\n        else if (p_obj1 instanceof MetaObject && p_obj2 instanceof MetaObject) {\n            var obj1 = p_obj1.getObject(2);    // _guid, $ref 제외 객체\n            var obj2 = p_obj2.getObject(2);\n            return Type.deepEqual(obj1, obj2);\n        } else if (_isObject(p_obj1) && _isObject(p_obj2)) {\n            return Type.deepEqual(p_obj1, p_obj2);\n        } else return false;\n    }\n\n    /**\n     * Compare the current object with the specified object.  \n     * However, the '_guid' property is excluded from the comparison.  \n     * \n     * @param {object} p_target To compare\n     * @returns {boolean} If two objects are the same, 'true', or 'false'\n     * @example\n     * var meta1 = new MetaObject();\n     * var meta2 = new MetaObject();\n     * meta1.equal(meta2);      // true\n     * meta2.equal(meat1);      // true\n     * meta1 === meta2;         // false\n     * \n     * var obj1 = {a: 1};\n     * var obj2 = {a: 1};\n     * this.equal(obj1, obj2);  // true\n     */\n    MetaObject.prototype.equal = function(p_target) {\n        return _compare(this, p_target);\n    };\n    Object.defineProperty(MetaObject.prototype, 'equal', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the creators of the current object and all the creators of the prototype chain to the array.  \n     * \n     * @returns {array<function>} Array of generator functions (includes first defined constructors sequentially)\n     * @example\n     * var obj = new MetaObject();\n     * var arr = obj.getTypes();\n     * arr[0] === MetaObject;   // true\n     * arr[1] === Object;       // true\n     * console.log(arr.length); // 2\n     * \n     * var elem = new MetaElement('e1');   // Inherited MetaObject \n     * var arr = elem.getTypes();\n     * arr[0] === MetaElement;  // true\n     * arr[1] === MetaObject;   // true\n     * arr[2] === Object;       // true\n     * console.log(arr.length); // 3\n     */\n    MetaObject.prototype.getTypes = function() {\n        return parentFunction(this);\n\n        // inner function\n        function parentFunction(obj) {\n            var list = [];\n            var proto = obj.__proto__ || Object.getPrototypeOf(obj);\n            if (proto) {\n                list.push(proto.constructor);\n                list = list.concat(parentFunction(proto));\n            }\n            return list;\n        }\n    };\n    Object.defineProperty(MetaObject.prototype, 'getTypes', {\n        enumerable: false\n    });\n\n    /**\n     * Verify that the object is an instance of a particular class.  \n     * You can also examine the defined interface type (including '_UNION').  \n     * \n     * @param {Function | string} p_target Class constructor function or class name (string)\n     * @returns {boolean} Whether there is an instance of the specified class ('true' or 'false')\n     * @example\n     * var obj = new MetaObject();\n     * obj.instanceOf('MetaObject');    // true\n     * obj.instanceOf('Object');        // true\n     * obj.instanceOf(MetaObject);      // true\n     * obj.instanceOf(Object);          // true\n     * obj.instanceOf(String);          // false\n     * \n     * var elem = new MetaElement('e1');// Inherited MetaObject \n     * obj.instanceOf('MetaElement');   // true\n     * obj.instanceOf('MetaObject');    // true\n     * obj.instanceOf('Object');        // true\n     * obj.instanceOf(MetaElement);     // true\n     * obj.instanceOf(MetaObject);      // true\n     * obj.instanceOf(Object);          // true\n     * obj.instanceOf(String);          // false\n     */\n    MetaObject.prototype.instanceOf = function(p_target) {\n        var _this = this;\n        var unionTypes = this._interface || this._type._UNION;\n        // var unionTypes = this._type['_UNION'] || [];\n        // var unionTypes = this._interface || [];\n        // var thisTypes = this.getTypes();\n\n        if (typeof p_target === 'string') return $$findFunctionName(p_target);\n        if (typeof p_target === 'function') return $findFunction(p_target);\n        return false;\n\n        // inner function\n        function $findFunction(fun) {\n            var types = _this.getTypes();\n            for (var i = 0; i < types.length; i++) {\n                if (fun === types[i]) return true;\n            }\n            \n            for (var k = 0; k < unionTypes.length; k++) {\n                if (fun ===  unionTypes[k]) return true;\n            }\n            return false;\n        }\n        function $$findFunctionName(funName) {\n            var types = _this.getTypes();\n            for (var i = 0; i < types.length; i++) {\n                if (funName === types[i].name) return true;\n            }\n            for (var k = 0; k < unionTypes.length; k++) {\n                if (funName === unionTypes[k].name) return true;\n            }\n            return false;\n        }\n    };\n    Object.defineProperty(MetaObject.prototype, 'instanceOf', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the object as an object literal of type GUID.  \n     * \n     * @param {number} [p_vOpt=0] Import mode  \n     * mode=0 : reference structure (_guid:Yes, $ref:Yes)  \n     * mode=1: Redundant structure (_guid:Yes, $ref:Yes)  \n     * mode=2 : non-coordinated structure (_guid: No, $ref: No)  \n     * @param {object | array<object>} [p_owned={}] Parent object that contains (owns) the current object\n     * @returns {object} Guid type object literal\n     * @example\n     * a.getObject(2) == b.getObject(2)   \n     */\n    MetaObject.prototype.getObject = function(p_vOpt) {\n        var vOpt = p_vOpt || 0;\n        var obj = {};\n        // var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        if (vOpt < 2 && vOpt > -1) obj['_guid'] = this._guid;\n        obj['_type'] = this._type._NS ? this._type._NS +'.'+ this._type.name : this._type.name;\n        return obj;                        \n    };\n    Object.defineProperty(MetaObject.prototype, 'getObject', {\n        enumerable: false\n    });\n\n    /**\n     * Set up a GUID type object literal by converting it to an instance object.  \n     * \n     * @param {object} p_oGuid object literal of type of GUID to set\n     * @param {object} [p_origin=p_oGuid] Initial GUID literal object referenced during conversion\n     */\n    MetaObject.prototype.setObject  = function(p_oGuid, p_origin) {\n        var origin = p_origin ? p_origin : p_oGuid;\n        var fullName = this._type._NS ? this._type._NS +'.'+ this._type.name : this._type.name;\n\n        if (!_isObject(p_oGuid)) throw new ExtendError(/EL03112/, null, [typeof p_oGuid]);\n        if (p_oGuid['_type'] !== fullName) throw new ExtendError(/EL03113/, null, [p_oGuid['_type'], fullName]);\n        \n        if (MetaRegistry.isGuidObject(origin)) {\n            if (!origin['__TRANSFORM_REFER']) {\n                origin = MetaRegistry.transformRefer(origin);\n                origin['__TRANSFORM_REFER'] = true;\n            }\n        } else throw new ExtendError(/EL03114/, null, [p_origin._type, p_origin._guid]);\n        \n        MetaRegistry.setMetaObject(p_oGuid, this); // $set attach\n    };\n    Object.defineProperty(MetaObject.prototype, 'setObject', {\n        enumerable: false\n    });\n\n    return MetaObject;\n\n}());\n\nexport default MetaObject;\nexport { MetaObject };","/**** meta-element.js | MetaElement ****/\n//==============================================================\nimport ExtendError      from './extend-error.js';    \nimport Util             from './util.js';\nimport IElement         from './i-element.js';\nimport MetaObject       from './meta-object.js';\n   \nvar MetaElement  = (function (_super) {\n\n    /**\n     * Creates an instance of the MetaElement class.  \n     * \n     * @constructs MetaElement\n     * @extends MetaObject\n     * @implements {IElement}\n     * @param {string} p_name Name of the element\n     */\n    function MetaElement(p_name) {\n        _super.call(this);\n        \n        var _name;\n\n        /**\n         * Internal property that stores the name of the element.  \n         * \n         * @readonly\n         * @member {string} MetaElement#_name\n         */\n        Object.defineProperty(this, '_name', {\n            get: function() { return _name; },\n            set: function(nVal) {\n                if (typeof nVal !== 'string') throw new ExtendError(/EL03121/, null, [typeof val]);\n                if (nVal.length === 0) throw new ExtendError(/EL03122/, null, []);\n                _name = nVal;\n            },\n            configurable: false,\n            enumerable: false\n        });\n\n        this._name = p_name;\n\n        Util.implements(MetaElement, this);     // strip:\n    }\n    Util.inherits(MetaElement, _super);\n    \n    MetaElement._UNION = [IElement];\n    MetaElement._NS = 'Meta';           // namespace\n    MetaElement._PARAMS = ['name'];     // creator parameter\n    \n    /**\n     * Returns the object as an object literal of type GUID.  \n     * \n     * @param {number} [p_vOpt=0] Import mode  \n     * mode=0 : reference structure (_guid:Yes, $ref:Yes)  \n     * mode=1: Redundant structure (_guid:Yes, $ref:Yes)  \n     * mode=2 : non-coordinated structure (_guid: No, $ref: No)  \n     * @param {object | array<object>} [p_owned={}] Parent object that contains (owns) the current object  \n     * @returns {object}  Guid type object literal\n     * @example\n     * a.getObject(2) == b.getObject(2)   \n     */\n    MetaElement.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        // var vOpt = p_vOpt || 0;\n        // var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        obj['name'] = this._name;\n        return obj;\n    };\n    Object.defineProperty(MetaElement.prototype, 'getObject', {\n        enumerable: false\n    });\n\n    /**\n     * Set up a GUID type object literal by converting it to an instance object.  \n     * \n     * @param {object} p_oGuid object literal of the type of GUID to be set\n     * @param {object} [p_origin=p_oGuid] Initial GUID literal object referenced during conversion\n     */\n    MetaElement.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        // var origin = p_origin ? p_origin : p_oGuid;\n        this._name = p_oGuid['name'];\n        // this.__SET$_name(p_oGuid['name'], this);\n    };\n    Object.defineProperty(MetaElement.prototype, 'setObject', {\n        enumerable: false\n    });\n\n    /**\n     * Creates a replica of the current object.  \n     * \n     * @returns {MetaElement} Replicated Objects\n     */\n    MetaElement.prototype.clone  = function() {\n        var clone = new MetaElement(this._name);\n        return clone;\n    };\n    Object.defineProperty(MetaElement.prototype, 'clone', {\n        enumerable: false\n    });\n\n    return MetaElement;\n\n}(MetaObject));\n\n\nexport default MetaElement;\nexport { MetaElement };","/**** base-collection.js | BaseCollection ****/\n//==============================================================\nimport ExtendError          from './extend-error.js';\nimport Util                 from './util.js';\nimport Type                 from './type.js';\nimport EventEmitter         from './event-emitter.js';\nimport ICollection          from './i-collection.js';\nimport IList                from './i-list.js';\nimport MetaRegistry         from './meta-registry.js';\nimport MetaObject           from './meta-object.js';\n\nvar BaseCollection  = (function (_super) {\n    /**\n    * The creator that creates the collection.  \n    * This is an abstract class, and you must create an instance through inheritance.  \n    * \n    * @abstract\n    * @extends MetaObject\n    * @constructs BaseCollection\n    * @implements {ICollection}\n    * @implements {IList}\n    * @param {object} [p_owner] Objects that own this collection\n    */\n    function BaseCollection(p_owner) { \n        _super.call(this);\n        \n        // private variable\n        var $KEYWORD = [];\n        var $event = new EventEmitter();\n        var $elements = [];\n        var $descriptors = [];\n        \n        // protected variable\n        var _owner ;\n        var _elemTypes  = [];\n\n        /** \n         * List of strings used as reserved words in the collection.  \n         * \n         * @private\n         * @member {array<string>}  BaseCollection#$KEYWORD\n         */\n        Object.defineProperty(this, '$KEYWORD', {\n            get: function() { return $KEYWORD; },\n            set: function(newVal) { $KEYWORD = $KEYWORD.concat(newVal); },  // REVIEW: 예약어 중복\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Object that handles events. Used to register and generate various events in the collection.\n         * \n         * @private\n         * @member {EventEmitter} BaseCollection#$event  \n         */\n        Object.defineProperty(this, '$event', {\n            get: function() { return $event; },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * An arrangement that stores elements of a collection.\n         * \n         * @private\n         * @member {string} BaseCollection#$elements\n         */\n        Object.defineProperty(this, '$elements', {\n            get: function() { return $elements; },\n            set: function(nVal) { $elements = nVal; },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * A descriptor array that defines the getter and setter methods for each collection element.  \n         * \n         * @private\n         * @member {string} BaseCollection#$descriptors\n         */\n        Object.defineProperty(this, '$descriptors', {\n            get: function() { return $descriptors; },\n            set: function(nVal) { $descriptors = nVal; },\n            configurable: false,\n            enumerable: false,\n        });\n\n\n\n        /** \n         * Owned object of the collection.  \n         * \n         * @protected \n         * @member {object} BaseCollection#_owner  \n         */\n        Object.defineProperty(this, '_owner', {   \n            get: function() { return _owner; },\n            set: function(val) { _owner = val; },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Defines the type constraints for the collection element.  \n         * \n         * @protected \n         * @member {array<any>}  BaseCollection#_elemTypes  \n         */\n        Object.defineProperty(this, '_elemTypes', {\n            get: function() { return _elemTypes; },\n            set: function(val) {\n                var arrType = Array.isArray(val) ? val : Array.prototype.slice.call(arguments, 0);\n                var reg = /^_[a-zA-Z]+_/;\n                var arr1 = arrType.length > 0 && typeof arrType[0] === 'string' ? arrType[0] : '';\n                \n                // var result;\n                if (arrType.length > 0  && reg.exec(arr1) === null) {\n                    arrType = ['_req_'].concat(arrType);\n                }\n                   \n                // result = reg.exec(val);\n                // if (result !== null) return result[0].toUpperCase();\n                _elemTypes = arrType;\n            },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * An array that stores a list of elements in a collection.  \n         * \n         * @protected \n         * @readonly\n         * @member {Array}  BaseCollection#_list  \n         */\n        Object.defineProperty(this, '_list', {\n            get: function() {\n                var arr = [];\n                for (var i = 0; i < $elements.length; i++) arr.push(this.$elements[i]);\n                return arr;\n            },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * Returns the number of elements in the collection.  \n         * \n         * @readonly\n         * @member {number} BaseCollection#count \n         */\n        Object.defineProperty(this, 'count', {\n            get: function() { return this.$elements.length; },\n            enumerable: false,\n            configurable: false\n        });\n\n        /**\n         * Returns the number of elements in the collection.  \n         * @readonly\n         * @member {number} BaseCollection#length \n         */\n        Object.defineProperty(this, 'length', {\n            get: function() { return this.$elements.length; },\n            enumerable: false,\n            configurable: false\n        });\n\n\n        /**\n         * Event handler called before adding an element to a collection.  \n         * \n         * @event BaseCollection#onAdd\n         * @param {function}    p_callback\n         * @param {any}         p_callback.p_elem Elements to add\n         * @param {number}      p_callback.p_idx Index of the element to be added\n         * @param {this}        p_callback.p_this Current collection objects\n         */\n        Object.defineProperty(this, 'onAdd', {\n            set: function(fun) { this.$event.on('add', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Event handler that is called after an element is added.  \n         * \n         * @event BaseCollection#onAdded\n         * @param {function}    p_callback\n         * @param {any}         p_callback.p_elem Added elements\n         * @param {number}      p_callback.p_idx Index of added element\n         * @param {this}        p_callback.p_this Current collection objects\n         */\n        Object.defineProperty(this, 'onAdded', {\n            set: function(fun) { this.$event.on('added', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Event handler called before removing an element.  \n         * \n         * @event BaseCollection#onRemove\n         * @param {function}    p_callback\n         * @param {any}         p_callback.p_elem Elements to be removed\n         * @param {number}      p_callback.p_idx Index of the element to be removed\n         * @param {this}        p_callback.p_this Current collection objects\n         */\n        Object.defineProperty(this, 'onRemove', {\n            set: function(fun) { this.$event.on('remove', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Event handler that is called after the element is removed.  \n         * \n         * @event BaseCollection#onRemoved\n         * @param {function}    p_callback\n         * @param {any}         p_callback.p_elem Removed elements\n         * @param {number}      p_callback.p_idx Index of removed element\n         * @param {this}        p_callback.p_this Current collection objects\n         */\n        Object.defineProperty(this, 'onRemoved', {\n            set: function(fun) { this.$event.on('removed', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n        * Event handler called before deleting all elements.  \n        * \n        * @event BaseCollection#onClear\n        * @param {function}    p_callback\n        * @param {this}        p_callback.p_this Current collection objects\n        */\n        Object.defineProperty(this, 'onClear', {\n            set: function(fun) { this.$event.on('clear', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Event handler that is called after all elements are deleted.  \n         * \n         * @event BaseCollection#onCleared\n         * @param {function}    p_callback\n         * @param {this}        p_callback.p_this Current collection objects\n         */\n        Object.defineProperty(this, 'onCleared', {\n            set: function(fun) { this.$event.on('cleared', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Event handler called before the element changes.  \n         * \n         * @event BaseCollection#onChanging \n         * @param {function}    p_callback\n         * @param {number}      p_callback.p_nextValue New value to be changed\n         * @param {any}         p_callback.prevValue Existing value\n         * @param {any}         p_callback.index Index of the element to be changed\n         * @param {this}        p_callback.p_this Current collection objects\n         */\n        Object.defineProperty(this, 'onChanging', {\n            set: function(fun) { this.$event.on('changing', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Event handler that is called after an element changes.  \n         * \n         * @event BaseCollection#onChanged \n         * @param {function}    p_callback\n         * @param {any}         p_callback.p_nextValue New value changed\n         * @param {any}         p_callback.p_prevValue Existing value\n         * @param {number}      p_callback.p_index Index of changed element\n         * @param {this}        p_callback.p_this Current collection objects\n         */\n        Object.defineProperty(this, 'onChanged', {\n            set: function(fun) { this.$event.on('changed', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        // object settging\n        this._owner = p_owner || null;\n\n        // 예약어 등록\n        this.$KEYWORD = ['$event', '_owner', '$elements', '$descriptors', '_elemTypes', '_list', 'count', 'length', '$KEYWORD'];\n        this.$KEYWORD = ['onAdd', 'onAdded', 'onRemove', 'onRemoved', 'onClear', 'onCleared', 'onChanging', 'onChanged'];\n        this.$KEYWORD = ['_onAdd', '_onAdded', '_onRemove', '_onRemoved', '_onClear', '_onCleared', '_onChanging', '_onChanged'];\n        this.$KEYWORD = ['_getPropDescriptor', 'getObject', 'setObject', '_guid', '_type'];\n        this.$KEYWORD = ['_remove', 'remove', 'removeAt', 'contains', 'indexOf', 'add', 'clear'];\n\n        Util.implements(BaseCollection, this);          // strip:\n    }\n    Util.inherits(BaseCollection, _super);\n    \n    BaseCollection._UNION = [ICollection, IList];\n    BaseCollection._NS = 'Collection';\n    BaseCollection._PARAMS = ['_owner'];\n    BaseCollection._KIND = 'abstract';\n    \n    /**\n     * Internal method that runs before adding an element.  \n     * \n     * @param {any} p_elem .Elements to be added\n     * @param {number} p_idx Where the element will be added\n     * @listens BaseCollection#onAdd\n     */\n    BaseCollection.prototype._onAdd = function(p_elem, p_idx) {\n        return this.$event.emit('add', p_elem, p_idx, this); \n    };\n    Object.defineProperty(BaseCollection.prototype, '_onAdd', {\n        enumerable: false\n    });\n\n    /**\n     * Internal method that runs after an element is added.  \n     * @param {any} p_elem Added elements\n     * @param {number} p_idx Location where the element was added\n     * @listens BaseCollection#onAdded\n     */\n    BaseCollection.prototype._onAdded = function(p_elem, p_idx) {\n        return this.$event.emit('added', p_elem, p_idx, this); \n    };\n    Object.defineProperty(BaseCollection.prototype, '_onAdded', {\n        enumerable: false\n    });\n\n    /**\n     * Internal method that runs before removing an element.  \n     * \n     * @param {any} p_elem Elements to be removed\n     * @param {number} p_idx Where the element will be removed\n     * @listens BaseCollection#onRemove\n     */\n    BaseCollection.prototype._onRemove = function(p_elem, p_idx) {\n        return this.$event.emit('remove', p_elem, p_idx, this);\n    };\n    Object.defineProperty(BaseCollection.prototype, '_onRemove', {\n        enumerable: false\n    });\n\n    /**\n     * Internal method that runs after the element is removed.  \n     * \n     * @param {any} p_elem Removed elements\n     * @param {number} p_idx Where the element was removed\n     * @listens BaseCollection#onRemoved\n     */\n    BaseCollection.prototype._onRemoved = function(p_elem, p_idx) {\n        return this.$event.emit('removed', p_elem, p_idx, this);\n    };\n    Object.defineProperty(BaseCollection.prototype, '_onRemoved', {\n        enumerable: false\n    });\n\n    /** \n     * Internal method that runs before deleting all elements.\n     * \n     * @listens BaseCollection#onClear\n     */\n    BaseCollection.prototype._onClear = function() {\n        return this.$event.emit('clear', this); \n    };\n    Object.defineProperty(BaseCollection.prototype, '_onClear', {\n        enumerable: false\n    });\n\n    /** \n     * Internal method that runs after all elements are deleted.  \n     * \n     * @listens BaseCollection#onCleared\n     */\n    BaseCollection.prototype._onCleared = function() {\n        return this.$event.emit('cleared', this); \n    };\n    Object.defineProperty(BaseCollection.prototype, '_onCleared', {\n        enumerable: false\n    });\n\n    /** \n     * Internal method that runs before the element changes.\n     * \n     * @param {any} p_nVal New value to be changed\n     * @param {any} p_oVal Existing value\n     * @param {number} p_idx Location of the element to be changed\n     * @listens BaseCollection#onChanging\n     */\n    BaseCollection.prototype._onChanging = function(p_nVal, p_oVal, p_idx) {\n        return this.$event.emit('changing', p_nVal, p_oVal, p_idx, this);\n    };\n    Object.defineProperty(BaseCollection.prototype, '_onChanging', {\n        enumerable: false\n    });\n\n    /** \n     * Internal method that runs after the element changes.  \n     * \n     * @param {any} p_nVal New value changed\n     * @param {any} p_oVal Existing value\n     * @param {number} p_idx Location of changed element\n     * @listens BaseCollection#onChanged\n     */        \n    BaseCollection.prototype._onChanged = function(p_nVal, p_oVal, p_idx) {\n        return this.$event.emit('changed', p_nVal, p_oVal, p_idx, this);\n    };\n    Object.defineProperty(BaseCollection.prototype, '_onChanged', {\n        enumerable: false\n    });\n\n    /**\n     * Internal method to set the attribute descriptor for a particular index.  \n     * \n     * @protected\n     * @param {number} p_idx Where to specify properties\n     * @param {boolean} p_enum whether the property is enumerable\n     */\n    BaseCollection.prototype._getPropDescriptor = function(p_idx, p_enum) {\n        if (typeof p_enum !== 'boolean') p_enum = true;\n        return {\n            get: function() { return this.$elements[p_idx]; },\n            set: function(nVal) {\n                var oVal = this.$elements[p_idx];\n                if (this._elemTypes.length > 0) Type.matchType([this._elemTypes], nVal);\n                this._onChanging(nVal, oVal, p_idx);  // before event\n                this.$elements[p_idx] = nVal;\n                this._onChanged(nVal, oVal, p_idx);   // after event\n            },\n            configurable: true,\n            enumerable: p_enum,\n        };\n    };\n    Object.defineProperty(BaseCollection.prototype, '_getPropDescriptor', {\n        enumerable: false\n    });\n\n    /** \n     * Internal method to remove elements from the collection.  \n     * \n     * @abstract \n     */\n    BaseCollection.prototype._remove  = function() {\n        throw new ExtendError(/EL04111/, null, []);\n    };\n    Object.defineProperty(BaseCollection.prototype, '_remove', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the object as an object literal of type GUID.  \n     * \n     * @param {number} [p_vOpt=0] Import mode  \n     * mode=0 : reference structure(_guid:Yes, $ref:Yes)  \n     * mode=1 : Redundant structure(_guid:Yes, $ref:Yes)  \n     * mode=2 : non-coordinated structure(_guid:No,  $ref:No)   \n     * @param {object | array<object>} [p_owned={}] Parent object that contains (owns) the current object\n     * @returns {object}  Guid type object literal\n     * @example\n     * a.getObject(2) == b.getObject(2)   \n     */\n    BaseCollection.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        // var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n        var _elems = [];\n        \n        if (!Type.deepEqual(this.$event['$storage'], {})) {\n            obj['$storage'] = this.$event.$storage;\n        }\n        if (vOpt < 2 && vOpt > -1 && this._owner) {\n            obj['_owner'] = MetaRegistry.createReferObject(this._owner);\n        }\n        for (var i = 0; i < this._elemTypes.length; i++) {\n            var elem = this._elemTypes[i];\n            if (typeof elem === 'function') _elems.push(MetaRegistry.createNsReferObject(elem));\n            else _elems.push(elem);\n        }\n        obj['_elemTypes'] = _elems;\n        return obj;                        \n    };\n    Object.defineProperty(BaseCollection.prototype, 'getObject', {\n        enumerable: false\n    });\n\n    /**\n     * Set up a GUID type object literal by converting it to an instance object.\n     * \n     * @param {object} p_oGuid Object literal of type of GUID to set\n     * @param {object} [p_origin=p_oGuid] Initial GUID literal object referenced during conversion\n     */\n    BaseCollection.prototype.setObject = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        \n        var owner;\n        var origin = p_origin ? p_origin : p_oGuid;\n        \n        this.clear();\n        if (p_oGuid['$storage']) {\n            this.$event.$storage = p_oGuid['$storage'];\n        }\n        if (p_oGuid['_owner']) {\n            owner = MetaRegistry.findSetObject(p_oGuid['_owner']['$ref'], origin);\n            if (!owner) throw new ExtendError(/EL04112/, null, [p_oGuid['_owner']['$ref']]);    // Branch:\n            this._owner = owner;            \n        }\n        if (Array.isArray(p_oGuid['_elemTypes']) && p_oGuid['_elemTypes'].length > 0){\n            this._elemTypes = p_oGuid['_elemTypes'];\n        }\n    };\n    Object.defineProperty(BaseCollection.prototype, 'setObject', {\n        enumerable: false\n    });\n\n    /**\n     * Remove the element from the collection.  \n     * \n     * @param {any} p_elem Elements to be removed\n     * @returns {number} Index of removed element. If element does not exist, return -1\n     */\n    BaseCollection.prototype.remove = function(p_elem) {\n        var idx = this.$elements.indexOf(p_elem);\n\n        if (idx >= 0 && this.removeAt(idx)) return idx;\n        return -1;\n    };\n    Object.defineProperty(BaseCollection.prototype, 'remove', {\n        enumerable: false\n    });\n    \n    /**\n     * Remove the element in the specified location.\n     * \n     * @param {number} p_pos Where to remove\n     * @returns {boolean} Element Removal Successful\n     */\n    BaseCollection.prototype.removeAt = function(p_pos) {\n        var elem;\n        \n        if (typeof p_pos !== 'number') throw new ExtendError(/EL04113/, null, [typeof p_pos]);\n        if (p_pos < 0 ) return false;\n        \n        elem = this.$elements[p_pos];\n        if (this.$elements.length > p_pos) {\n            // this._onRemove(p_pos, elem);\n            if (this._onRemove(elem, p_pos) === false) return false;\n\n            if (!this._remove(p_pos)) return false;\n            this._onRemoved(elem, p_pos);\n            return true;\n        }\n        return false;\n    };\n    Object.defineProperty(BaseCollection.prototype, 'removeAt', {\n        enumerable: false\n    });\n\n    /**\n     * Verify that a particular element exists in the collection.  \n     * \n     * @param {any} p_elem Factors to check\n     * @returns {boolean} Element Existence\n     */\n    BaseCollection.prototype.contains = function(p_elem) {\n        return this.$elements.indexOf(p_elem) > -1;\n    };\n    Object.defineProperty(BaseCollection.prototype, 'contains', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the index of an element.  \n     * \n     * @param {any} p_elem Elements to search for\n     * @returns {number} Index of element, return -1 if element is missing\n     */\n    BaseCollection.prototype.indexOf = function(p_elem) {\n        return this.$elements.indexOf(p_elem);\n    };\n    Object.defineProperty(BaseCollection.prototype, 'indexOf', {\n        enumerable: false\n    });\n\n    /** \n     * Adds an element to the collection.\n     * \n     * @abstract \n     */\n    BaseCollection.prototype.add  = function() {\n        throw new ExtendError(/EL04114/, null, []);\n    };\n    Object.defineProperty(BaseCollection.prototype, 'add', {\n        enumerable: false\n    });\n    \n    /**\n     * Initialize the collection.  \n     * \n     * @abstract \n     */\n    BaseCollection.prototype.clear  = function() {\n        throw new ExtendError(/EL04115/, null, []);\n    };\n    Object.defineProperty(BaseCollection.prototype, 'clear', {\n        enumerable: false\n    });\n\n    return BaseCollection;\n    \n}(MetaObject));\n\nexport default BaseCollection;\nexport { BaseCollection };","/**** collection-array.js | ArrayCollection ****/\n//==============================================================\nimport Message              from './message-wrap.js';    \nimport ExtendError          from './extend-error.js';    \nimport Util                 from './util.js';\nimport Type                 from './type.js';\nimport IArrayCollection     from './i-collection-array.js';\nimport MetaRegistry         from './meta-registry.js';\nimport MetaObject           from './meta-object.js';\nimport { BaseCollection }   from './base-collection.js';\n\nvar ArrayCollection  = (function (_super) {\n    /**\n     * Creates an instance of an ArrayCollection class.  \n     * \n     * @constructs ArrayCollection\n     * @implements {IArrayCollection}\n     * @extends BaseCollection\n     * @param {object} [p_owner] Objects that own this collection\n     */\n    function ArrayCollection(p_owner) {\n        _super.call(this, p_owner);\n\n        this.$KEYWORD = ['insertAt'];\n\n        Util.implements(ArrayCollection, this);     // strip:\n    }\n    Util.inherits(ArrayCollection, _super);\n    \n    ArrayCollection._UNION = [IArrayCollection];\n    ArrayCollection._NS = 'Collection';     // namespace\n    ArrayCollection._PARAMS = ['_owner'];   // creator parameter\n\n    // local function\n    function _isObject(obj) {    // 객체 여부\n        if (typeof obj === 'object' && obj !== null) return true;\n        return false;\n    }\n    \n    /**\n     * Internal method to remove the specified element from the collection.  \n     * \n     * @protected\n     * @param {number} p_pos Index of the element to be removed\n     * @returns {boolean} Success or failure\n     */\n    ArrayCollection.prototype._remove = function(p_pos) {\n        var count = this.count - 1;   // [idx] 포인트 이동\n        \n        this.$elements.splice(p_pos, 1);\n        this.$descriptors.splice(p_pos, 1);\n        \n        if (p_pos < count) {\n            for (var i = p_pos; i < count; i++) {   // 참조 변경(이동)\n                var desc = this.$descriptors[i] ? this.$descriptors[i] : this._getPropDescriptor(i);\n                Object.defineProperty(this, [i], desc);\n            }\n            delete this[count];     // 마지막 idx 삭제\n        } else {\n            delete this[p_pos];     // idx 삭제 (끝일 경우)\n        }\n        return true;\n    };\n    Object.defineProperty(ArrayCollection.prototype, '_remove', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the object as an object literal of type GUID.  \n     * \n     * @param {number} [p_vOpt=0] Import mode  \n     * mode=0 : reference structure (_guid:Yes, $ref:Yes)  \n     * mode=1: Redundant structure (_guid:Yes, $ref:Yes)  \n     * mode=2 : non-coordinated structure (_guid: No, $ref: No)  \n     * @param {object | array<object>} [p_owned={}] Parent object that contains (owns) the current object\n     * @returns {object}  Guid type object literal \n     * @example\n     * a.getObject(2) == b.getObject(2)   \n     */\n    ArrayCollection.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        if (this.$descriptors.length > 0) {\n            obj['_desc'] = [];\n            for (var i = 0; i < this.$descriptors.length; i++) {\n                obj['_desc'].push(this.$descriptors[i]);\n            }\n        }\n        obj['_elem'] = [];\n        for (var j = 0; j < this.$elements.length; j++) {\n            var elem = this.$elements[j];\n            if (elem instanceof MetaObject) {\n                if (MetaRegistry.hasGuidObject(elem, owned)) {\n                    obj['_elem'].push(MetaRegistry.createReferObject(elem));\n                } else obj['_elem'].push(elem.getObject(vOpt, owned));\n            } else obj['_elem'].push(elem);\n        }\n        return obj;                        \n    };\n    Object.defineProperty(ArrayCollection.prototype, 'getObject', {\n        enumerable: false\n    });\n\n    /**\n     * Set up a GUID type object literal by converting it to an instance object.   \n     * \n     * @param {object} p_oGuid object literal of the type of GUID to be set\n     * @param {object} [p_origin=p_oGuid] Initial GUID literal object referenced during conversion\n     */\n    ArrayCollection.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        var origin = p_origin ? p_origin : p_oGuid;\n\n        if (Array.isArray(p_oGuid['_desc']) && p_oGuid['_desc'].length > 0) {\n            for (var i = 0; i < p_oGuid['_desc'].length; i++) {\n                this.$descriptors.push(p_oGuid['_desc'][i]);\n            }\n        }\n        for(var j = 0; j < p_oGuid['_elem'].length; j++) {\n            Object.defineProperty(this, [j], this._getPropDescriptor(j));\n        }\n\n        for(var k = 0; k < p_oGuid['_elem'].length; k++) {\n            var elem = p_oGuid['_elem'][k];\n            if (MetaRegistry.isGuidObject(elem)) {\n                var obj = MetaRegistry.createMetaObject(elem, origin);\n                obj.setObject(elem, origin);\n                this.$elements.push(obj);\n                \n            } else if (elem['$ref']) {\n                var meta = MetaRegistry.findSetObject(elem['$ref'], origin);\n                if (!meta) throw new ExtendError(/EL04211/, null, [k, elem['$ref']]);\n                this.$elements.push(meta);  \n            \n            } else this.$elements.push(elem);\n        }\n    };        \n    Object.defineProperty(ArrayCollection.prototype, 'setObject', {\n        enumerable: false\n    });\n\n    /**\n     * Adds an element to the collection.  \n     * \n     * @param {any} p_elem Elements to add\n     * @param {object} [p_desc] Property descriptor object for element\n     * @returns {number} Location of the added element\n     */\n    ArrayCollection.prototype.add = function(p_elem, p_desc) {\n        var pos = this.count;\n        this.insertAt(pos, p_elem, p_desc);\n        return pos;\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'add', {\n        enumerable: false\n    });\n\n    /**\n     * Initialize the collection.  \n     * Empty the $elements and $descriptors arrays upon initialization.  \n     * \n     * @returns {boolean} Additional success\n     */\n    ArrayCollection.prototype.clear = function() {\n        try {\n            if (this._onClear() === false) return false;\n\n            for (var i = 0; i < this.count; i++) delete this[i];\n            this.$elements = [];\n            this.$descriptors = [];\n            \n            this._onCleared();    // event\n            return true;\n\n        } catch (error) {\n            console.error(error);\n            return false;\n        }\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'clear', {\n        enumerable: false\n    });\n\n    /**\n     * Adds an element to the specified location.  \n     * \n     * @param {number} p_pos Where to add\n     * @param {any} p_elem Elements to add\n     * @param {object} [p_desc] Property descriptor object for element\n     * @returns {boolean} Additional success\n     */\n    ArrayCollection.prototype.insertAt = function(p_pos, p_elem, p_desc) {\n        try {\n            var index   = this.count;\n\n            if (typeof p_pos !== 'number') throw new ExtendError(/EL04212/, null, [typeof p_pos]);\n            if (index < p_pos) throw new ExtendError(/EL04213/, null, [p_pos, index]);\n            if (p_pos < 0) throw new ExtendError(/EL04214/, null, [p_pos]);\n            if (this._elemTypes.length > 0) Type.matchType([this._elemTypes], p_elem);\n            if (_isObject(p_desc) && p_desc.configurable === false) {\n                console.warn(Message.get('WS011', ['configurable = false', 'element']));\n                // Message.warn('WS011', ['configurable = false', 'element']); \n            }\n            if (_isObject(p_desc) && p_desc.writable === false ) {\n                console.warn(Message.get('WS011', ['writable = false', 'element']));\n                // Message.warn('WS011', ['writable = false', 'element']);\n            }\n\n            if (this._onAdd(p_elem, p_pos) === false) return false;\n\n            // data process\n            this.$elements.splice(p_pos, 0, p_elem);            \n            this.$descriptors.splice(p_pos, 0, p_desc);\n            // property define\n            if (_isObject(p_desc)) {\n                Object.defineProperty(this, [p_pos], p_desc);\n            } else {\n                Object.defineProperty(this, [p_pos], this._getPropDescriptor(p_pos));\n            }\n            // reindexing\n            for (var i = p_pos + 1; i < this.count; i++) {\n                var desc = this.$descriptors[i] ? this.$descriptors[i] : this._getPropDescriptor(i);\n                Object.defineProperty(this, [i], desc);\n            }\n            this._onAdded(p_elem, p_pos);\n            \n            return true;\n\n        } catch (error) {\n            throw new ExtendError(/EL04215/, error, [p_pos, p_elem]);\n        }\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'insertAt', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the result of executing the function provided to all elements to the new array.  \n     * \n     * @param {Function} callback callback function to convert, (elem: T, index: number, list: T[]) => U\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {Array} Array of converted elements\n     */\n    ArrayCollection.prototype.map  = function(callback, thisArg) {\n        var newArr = [];\n\n        if (typeof callback !== 'function') throw new ExtendError(/EL04116/, null, [typeof callback]);\n    \n        for (var i = 0; i < this.length; i++) {\n            newArr[i] = callback.call(thisArg || this, this[i], i, this._list);\n        }\n        return newArr;\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'map', {\n        enumerable: false\n    });\n\n    /**\n     * Returns a new array containing only elements that satisfy the conditions of the provided function.  \n     * \n     * @param {Function} callback callback function to filter, (elem: T, index: number, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {Array} Array of filtered elements\n     */\n    ArrayCollection.prototype.filter = function (callback, thisArg) {\n        let newArr = [];\n\n        if (typeof callback !== 'function') throw new ExtendError(/EL04117/, null, [typeof callback]);\n\n        for (let i = 0; i < this.length; i++) {\n            if (callback.call(thisArg || this, this[i], i, this._list)) {\n                newArr.push(this[i]);\n            }\n        }\n        return newArr;\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'filter', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the accumulated results by executing the reducer function provided to all elements.  \n     * \n     * @param {Function} callback callback function to be reduced, (acc: U, element: T, index: number, list: T[]) => U\n     * @param {any} initialValue Initial value\n     * @returns  {any} Accumulated final result value\n     */\n    ArrayCollection.prototype.reduce = function(callback, initialValue) {\n        var acc = initialValue;\n\n        if (typeof callback !== 'function') throw new ExtendError(/EL04118/, null, [typeof callback]);\n\n        for(let i=0; i < this.length; i++) {\n            acc = acc ? callback(acc, this[i], i, this._list) : this[i];\n        }\n        return acc;\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'reduce', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the first element that matches the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to be searched, (elem: T, index: number, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {any} The first element that satisfies the condition, 'undefined' if not found\n     */\n    ArrayCollection.prototype.find = function(callback, thisArg) {\n        if (typeof callback !== 'function') throw new ExtendError(/EL04119/, null, [typeof callback]);\n        \n        for (var i = 0; i < this.length; i++) {\n            if ( callback.call(thisArg || this, this[i], i, this._list) ) {\n                return this[i];\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'find', {\n        enumerable: false\n    });\n\n    /**\n     * Run the function provided for all elements.  \n     * \n     * @param {Function} callback Callback function to run, (elem: T, index: number, list: T[]) => void\n     * @param {any} thisArg Object to use as this inside the callback function\n     */\n    ArrayCollection.prototype.forEach = function(callback, thisArg) {\n        if (typeof callback !== 'function') throw new ExtendError(/EL041110/, null, [typeof callback]);\n        \n        for (var i = 0; i <this.length; i++) {\n            callback.call(thisArg || this, this[i], i, this._list);\n        }\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'forEach', {\n        enumerable: false\n    });\n\n    /**\n     * Verify that at least one element matches the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to be examined, (elem: T, index: number, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {boolean} 'true' if more than one element satisfies the condition, or 'false' if not\n     */\n    ArrayCollection.prototype.some = function(callback, thisArg) {\n        if (typeof callback !== 'function') throw new ExtendError(/EL041111/, null, [typeof callback]);\n        \n        for(var i=0; i < this.length; i++){\n            if (callback.call(thisArg || this, this[i], i, this._list)) return true;\n        }\n        return false;\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'some', {\n        enumerable: false\n    });\n\n    /**\n     * Verify that all elements satisfy the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to be examined, (elem: T, index: number, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {boolean}  'true' if all elements meet the conditions, 'false' otherwise\n     */\n    ArrayCollection.prototype.every = function(callback, thisArg) {\n        if (typeof callback !== 'function') throw new ExtendError(/EL041112/, null, [typeof callback]);\n        \n        for(var i=0; i < this.length; i++) {\n            if (!callback.call(thisArg || this, this[i], i, this._list)) return false;\n        }\n        return true;\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'every', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the index of the first element that matches the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to be examined, (elem: T, index: number, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {any} Index of the first element that satisfies the condition, if not found '-1'\n     */\n    ArrayCollection.prototype.findIndex = function(callback, thisArg) {\n        if (typeof callback !== 'function') throw new ExtendError(/EL041113/, null, [typeof callback]);\n        \n        for (var i = 0; i < this.length; i++) {\n            if ( callback.call(thisArg || this, this[i], i, this._list) ) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'findIndex', {\n        enumerable: false\n    });\n\n\n    return ArrayCollection;\n\n}(BaseCollection));\n\nexport default ArrayCollection;\nexport { ArrayCollection };","/**** collection-property.js | PropertyCollection ****/\n//==============================================================\nimport Message              from './message-wrap.js';\nimport ExtendError          from './extend-error.js';\nimport Type                 from './type.js';\nimport Util                 from './util.js';\nimport IPropertyCollection  from './i-collection-property.js';\nimport MetaRegistry         from './meta-registry.js';\nimport MetaObject           from './meta-object.js';\nimport BaseCollection       from './base-collection.js';\n\nvar PropertyCollection  = (function (_super) {\n    /**\n     * Creates an instance of the class 'PropertyCollection'.  \n     * \n     * @constructs PropertyCollection\n     * @implements {IPropertyCollection}\n     * @extends BaseCollection\n     * @param {object} p_owner Objects that own this collection\n     */\n    function PropertyCollection(p_owner) {\n        _super.call(this, p_owner); \n\n        var $keys = [];\n\n        /**\n         * Returns all key values in the collection to an array.\n         * \n         * @member {string} PropertyCollection#$keys\n         * @readonly\n         * @private\n         */\n        Object.defineProperty(this, '$keys', {\n            get: function() { return $keys; },\n            set: function(nVal) { $keys = nVal; },\n            configurable: false,\n            enumerable: false,\n        });\n\n        // 예약어 등록 \n        this.$KEYWORD = ['$keys', 'indexOf', 'exists', 'indexToKey'];\n\n        Util.implements(PropertyCollection, this);      // strip:\n    }\n    Util.inherits(PropertyCollection, _super);\n    \n    PropertyCollection._UNION = [IPropertyCollection];\n    PropertyCollection._NS = 'Collection';      // namespace\n    PropertyCollection._PARAMS = ['_owner'];    // creator parameter\n\n    // local function\n    function _isObject(obj) {    // 객체 여부\n        if (typeof obj === 'object' && obj !== null) return true;\n        return false;\n    }\n\n    function _isString(obj) {    // 공백아닌 문자 여부\n        if (typeof obj === 'string' && obj.length > 0) return true;\n        return false;\n    }\n\n    /**\n     * Internal method to remove the specified element from the collection.  \n     * \n     * @protected\n     * @param {number} p_pos Location of the element to be removed\n     * @returns {boolean} Removal successful\n     */\n    PropertyCollection.prototype._remove = function(p_pos) {\n        var count = this.count - 1;\n        var propName = this.indexToKey(p_pos);   // number 검사함\n        \n        delete this[propName];      // 프로퍼티 삭제\n\n        this.$elements.splice(p_pos, 1);\n        this.$keys.splice(p_pos, 1);\n        this.$descriptors.splice(p_pos, 1);\n        \n        if (p_pos < count) {        // 참조 자료 변경\n            for (var i = p_pos; i < count; i++) {\n                // var desc = this.$descriptors[i] ? this.$descriptors[i] : this._getPropDescriptor(i);\n                propName = this.indexToKey(i);\n                Object.defineProperty(this, [i], this.$descriptors[i] ? this.$descriptors[i] : this._getPropDescriptor(i, false));\n                Object.defineProperty(this, propName, this.$descriptors[i] ? this.$descriptors[i] : this._getPropDescriptor(i));\n            }\n            delete this[count];     // 마지막 idx 삭제\n        } else {\n            delete this[p_pos];     // idx 삭제 (끝일 경우)\n        }\n        return true;\n    };\n    Object.defineProperty(PropertyCollection.prototype, '_remove', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the object as an object literal of type GUID.  \n     * \n     * @param {number} [p_vOpt=0] Import mode\n     * mode=0 : reference structure (_guid:Yes, $ref:Yes)  \n     * mode=1: Redundant structure (_guid:Yes, $ref:Yes)  \n     * mode=2 : non-coordinated structure (_guid: No, $ref: No)  \n     * @param {object | array<object>} [p_owned={}] Parent object that contains (owns) the current object\n     * @returns {object}  Guid type object literal\n     * @example\n     * a.getObject(2) == b.getObject(2)   \n     */\n    PropertyCollection.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        if (this.$descriptors.length > 0) {\n            obj['_desc'] = [];\n            for (var i = 0; i < this.$descriptors.length; i++) {\n                obj['_desc'].push(this.$descriptors[i]);\n            }\n        }\n        obj['_elem'] = [];\n        for (var j = 0; j < this.count; j++) {\n            var elem = this.$elements[j];\n            if (elem instanceof MetaObject) {\n                if (MetaRegistry.hasGuidObject(elem, owned)) {\n                    obj['_elem'].push(MetaRegistry.createReferObject(elem));\n                } else obj['_elem'].push(elem.getObject(vOpt, owned));\n            } else obj['_elem'].push(elem);\n        }\n        obj['_key'] = [];\n        for (var k = 0; k < this.$keys.length; k++) {\n            var key = this.$keys[k];\n            obj['_key'].push(key);\n        }\n        return obj;                        \n    };\n    Object.defineProperty(PropertyCollection.prototype, 'getObject', {\n        enumerable: false\n    });\n\n    /**\n     * Set up a GUID type object literal by converting it to an instance object.  \n     * \n     * @param {object} p_oGuid Object literal of the type of GUID to be set\n     * @param {object} [p_origin=p_oGuid] Initial GUID literal object referenced during conversion\n     */\n    PropertyCollection.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        var origin = p_origin ? p_origin : p_oGuid;\n\n        if (p_oGuid['_elem'].length !== p_oGuid['_key'].length) throw new ExtendError(/EL04221/, null, [p_oGuid['_elem'].length, p_oGuid['_key'].length]);\n        \n        if (Array.isArray(p_oGuid['_desc']) && p_oGuid['_desc'].length > 0) {\n            if (p_oGuid['_elem'].length !== p_oGuid['_desc'].length) throw new ExtendError(/EL04222/, null, [p_oGuid['_elem'].length, p_oGuid['_desc'].length]);\n            for (var i = 0; i < p_oGuid['_desc'].length; i++) {\n                this.$descriptors.push(p_oGuid['_desc'][i]);\n            }\n        }\n\n        this.$keys = [];\n        for(var j = 0; j < p_oGuid['_key'].length; j++) {\n            var key = p_oGuid['_key'][j];\n            this.$keys.push(key);\n            Object.defineProperty(this, [j], this._getPropDescriptor(j, false));\n            Object.defineProperty(this, key, this._getPropDescriptor(j));\n        }\n\n        for(var k = 0; k < p_oGuid['_elem'].length; k++) {\n            var elem = p_oGuid['_elem'][k];\n            if (MetaRegistry.isGuidObject(elem)) {\n                var obj = MetaRegistry.createMetaObject(elem, origin);\n                obj.setObject(elem, origin);\n                this.$elements.push(obj);\n            \n            } else if (elem['$ref']) {\n                var meta = MetaRegistry.findSetObject(elem['$ref'], origin);\n                if (!meta) throw new ExtendError(/EL04223/, null, [k, elem['$ref']]);\n                this.$elements.push(meta);\n                \n            } else this.$elements.push(elem);\n        }\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'setObject', {\n        enumerable: false\n    });\n\n    /**\n     * Adds an element to the collection.  \n     * \n     * @param {string} p_key Key of the element\n     * @param {any} [p_elem] Elements to add\n     * @param {object} [p_desc] Property descriptor object for element\n     * @returns {number} Location of the added element\n     */\n    PropertyCollection.prototype.add = function(p_key, p_elem, p_desc) {\n        try {\n            var index   = this.count;\n            var regex = /^[a-zA-Z_][a-zA-Z0-9_]*/;\n            // var types = ['_req_'];\n\n            // types = [types.concat(this._elemTypes)];\n            \n            if (!_isString(p_key)) throw new ExtendError(/EL04225/, null, [p_key]);\n            if(!regex.test(p_key)) throw new ExtendError(/EL04226/, null, [p_key, regex.source]);\n            if (this.$KEYWORD.indexOf(p_key) > -1) throw new ExtendError(/EL04227/, null, [p_key]);\n            if (this.exists(p_key)) throw new ExtendError(/EL04228/, null, [p_key]);\n            if (this._elemTypes.length > 0) Type.matchType([this._elemTypes], p_elem);\n            // if (this._elemTypes.length > 0) Util.matchType(types, p_elem);\n            if (_isObject(p_desc) && p_desc.configurable === false) {\n                console.warn(Message.get('WS011', ['configurable = true', 'element']));\n                // Message.warn('WS011', ['configurable = true', 'element']);\n            }\n            if (_isObject(p_desc) && p_desc.writable === false ) {\n                console.warn(Message.get('WS011', ['writable = true', 'element']));\n                // Message.warn('WS011', ['writable = true', 'element']);\n            }\n\n            // this._onAdd(index, p_elem);\n            if (this._onAdd(p_elem, index) === false) return -1;\n\n            // data process\n            this.$elements.push(p_elem);\n            this.$keys.push(p_key);\n            this.$descriptors.push(p_desc);\n            // property define\n            if (_isObject(p_desc)) {\n                Object.defineProperty(this, [index], p_desc);\n                Object.defineProperty(this, p_key, p_desc);\n            } else {\n                Object.defineProperty(this, [index], this._getPropDescriptor(index, false));\n                Object.defineProperty(this, p_key, this._getPropDescriptor(index));\n            }\n            this._onAdded(p_elem, index);\n\n            return index;\n\n        } catch (error) {\n            throw new ExtendError(/EL04229/, error, [p_key, p_elem]);\n        }\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'add', {\n        enumerable: false\n    });\n\n    /**\n     * Initialize the collection.  \n     * Empty $elements, $descripts, and $keys at initialization.  \n     * \n     * @returns {boolean} Additional success\n     */\n    PropertyCollection.prototype.clear = function() {\n        try {\n            \n            if (this._onClear() === false) return false;\n            \n            for (var i = 0; i < this.count; i++) {\n                var propName = this.indexToKey(i);\n                delete this[i];\n                delete this[propName];\n            }\n            this.$elements = [];\n            this.$descriptors = [];\n            this.$keys = [];\n            \n            this._onCleared();\n            return true;\n\n        } catch (error) {\n            console.error(error);\n            return false;\n        }\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'clear', {\n        enumerable: false\n    });\n\n    /**\n     * Query the index based on the key.  \n     * \n     * @param {string} p_key Key to view\n     * @returns {number} Index corresponding to key, return '-1' if not present\n     */\n    PropertyCollection.prototype.keyToIndex = function(p_key) {\n        if (!_isString(p_key))  throw new ExtendError(/EL04224/, null, [typeof p_key]);\n        return this.$keys.indexOf(p_key);\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'keyToIndex', {\n        enumerable: false\n    });\n\n    /**\n     * Query the key based on the index value.  \n     * \n     * @param {number} p_idx Index to view\n     * @returns {string} Key values for that index\n     */\n    PropertyCollection.prototype.indexToKey = function(p_idx) {\n        if (typeof p_idx !== 'number') throw new ExtendError(/EL0422A/, null, [typeof p_idx]);\n        return this.$keys[p_idx];\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'indexToKey', {\n        enumerable: false\n    });\n\n    /**\n     * Verify that the specified key exists in the collection.  \n     * \n     * @param {string} p_key Key value to check\n     * @returns {boolean} If the key exists, it is 'true', otherwise it is 'false'\n     */\n    PropertyCollection.prototype.exists = function(p_key) {\n        if (!_isString(p_key)) throw new ExtendError(/EL0422B/, null, [typeof p_key]);\n        return Object.prototype.hasOwnProperty.call(this, p_key);\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'exists', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the result of executing the function provided to all elements to the new array.  \n     * \n     * @param {Function} callback Callback function to convert, (elem: T, index: number, key: string, list: T[]) => U\n     * @param {any} thisArg Objects to use as this inside the callback function\n     * @returns  {Array} New arrangement of transformed elements\n     */\n    PropertyCollection.prototype.map  = function(callback, thisArg) {\n        var newArr = [];\n\n        if (typeof callback !== 'function') throw new ExtendError(/EL04116/, null, [typeof callback]);\n    \n        for (var i = 0; i < this.length; i++) {\n            var key = this.indexToKey(i);\n            newArr[i] = callback.call(thisArg || this, this[i], i, key, this._list);\n        }\n        return newArr;\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'map', {\n        enumerable: false\n    });\n\n    /**\n     * Returns a new array containing only elements that satisfy the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to filter, (elem: T, index: number, key: string, list: T[]) => boolean\n     * @param {any} thisArg Objects to use as this inside the callback function\n     * @returns  {Array} Array of filtered elements\n     */\n    PropertyCollection.prototype.filter = function (callback, thisArg) {\n        let newArr = [];\n\n        if (typeof callback !== 'function') throw new ExtendError(/EL04117/, null, [typeof callback]);\n\n        for (let i = 0; i < this.length; i++) {\n            var key = this.indexToKey(i);\n            if (callback.call(thisArg || this, this[i], i, key, this._list)) {\n                newArr.push(this[i]);\n            }\n        }\n        return newArr;\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'filter', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the accumulated results by executing the reducer function provided to all elements.  \n     * \n     * @param {Function} callback callback function to be reduced, (acc: U, element: T, index: number, key: string, list: T[]) => U\n     * @param {any} initialValue Initial value\n     * @returns  {any} Array of filtered elements\n     */\n    PropertyCollection.prototype.reduce = function(callback, initialValue) {\n        var acc = initialValue;\n\n        if (typeof callback !== 'function') throw new ExtendError(/EL04118/, null, [typeof callback]);\n\n        for(let i=0; i < this.length; i++) {\n            var key = this.indexToKey(i);\n            acc = acc ? callback(acc, this[i], i, key, this._list) : this[i];\n        }\n        return acc;\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'reduce', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the first element that matches the conditions of the provided function.\n     * \n     * @param {Function} callback Callback function to be searched, (elem: T, index: number, key: string, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {any} The first element that satisfies the condition, 'undefined' if not found\n     */\n    PropertyCollection.prototype.find = function(callback, thisArg) {\n        if (typeof callback !== 'function') throw new ExtendError(/EL04119/, null, [typeof callback]);\n        \n        for (var i = 0; i < this.length; i++) {\n            var key = this.indexToKey(i);\n            if ( callback.call(thisArg || this, this[i], i, key, this._list) ) {\n                return this[i];\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'find', {\n        enumerable: false\n    });\n\n    /**\n     * Run the function provided for all elements.  \n     * \n     * @param {Function} callback callback function to be executed, (elem: T, index: number, key: string, list: T[]) => void\n     * @param {any} thisArg Object to use as this inside the callback function\n     */\n    PropertyCollection.prototype.forEach = function(callback, thisArg) {\n        if (typeof callback !== 'function') throw new ExtendError(/EL041110/, null, [typeof callback]);\n        \n        for (var i = 0; i <this.length; i++) {\n            var key = this.indexToKey(i);\n            callback.call(thisArg || this, this[i], i, key, this._list);\n        }\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'forEach', {\n        enumerable: false\n    });\n\n    /**\n     * Verify that at least one element matches the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to be examined, (elem: T, index: number, key: string, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {boolean}  'true' if more than one element satisfies the condition, or 'false' if not\n     */\n    PropertyCollection.prototype.some = function(callback, thisArg) {\n        if (typeof callback !== 'function') throw new ExtendError(/EL041111/, null, [typeof callback]);\n        \n        for(var i=0; i < this.length; i++){\n            var key = this.indexToKey(i);\n            if (callback.call(thisArg || this, this[i], i, key, this._list)) return true;\n        }\n        return false;\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'some', {\n        enumerable: false\n    });\n\n    /**\n     * Verify that all elements satisfy the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to be examined, (elem: T, index: number, key: string, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {boolean} 'true' if all elements meet the conditions, 'false' otherwise\n     */\n    PropertyCollection.prototype.every = function(callback, thisArg) {\n        if (typeof callback !== 'function') throw new ExtendError(/EL041112/, null, [typeof callback]);\n        \n        for(var i=0; i < this.length; i++){\n            var key = this.indexToKey(i);\n            if (!callback.call(thisArg || this, this[i], i, key, this._list)) return false;\n        }\n        return true;\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'every', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the index of the first element that matches the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to be examined, (elem: T, index: number, key: string, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {any} Index of the first element that satisfies the condition, if not found '-1'\n     */\n    PropertyCollection.prototype.findIndex = function(callback, thisArg) {\n        if (typeof callback !== 'function') throw new ExtendError(/EL041113/, null, [typeof callback]);\n        \n        for (var i = 0; i < this.length; i++) {\n            var key = this.indexToKey(i);\n            if ( callback.call(thisArg || this, this[i], i, key, this._list) ) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'findIndex', {\n        enumerable: false\n    });        \n\n    return PropertyCollection;\n\n}(BaseCollection));\n\nexport default PropertyCollection;\nexport { PropertyCollection };","/**** message-wrap.js | Message esm ****/\n//==============================================================\nimport { Message }          from 'logic-core';\nimport defaultCode          from './locales/default.js';\n\nconst isNode = typeof globalThis.isDOM === 'boolean' ? !globalThis.isDOM :  typeof process !== 'undefined' && process.versions !== null && process.versions.node !== null;\nlet localesPath = './locales';\n\nasync function absolutePath(localPath) {\n    try {\n        const { fileURLToPath } = await import('url');\n        const path = await import('path');\n        const __filename = fileURLToPath(import.meta.url);\n        const __dirname = path.dirname(__filename);\n        return path.resolve(__dirname, localesPath);\n    } catch (error) {\n        return localPath;  // Fallback to the original path\n    }\n}\n\nif (isNode) {\n    localesPath = await absolutePath(localesPath);\n}\n\nMessage.importMessage(defaultCode, localesPath);\n\nawait Message.autoDetect();\n\nexport default Message;\nexport { Message };","/* eslint-disable */\nexport default {\n  \"EL02200\": \"---- Interface.* ----\",\n  \"EL02210\": \"---- i-control-export.js ----\",\n  \"EL02211\": \"write(opt): object is an abstract method. '$1' must be implemented\",\n  \"EL02220\": \"---- i-control-import.js ----\",\n  \"EL02221\": \"read(object) is an abstract method. '$1' must be implemented\",\n  \"EL02230\": \"---- i-control-group.js ----\",\n  \"EL02231\": \"merge(any, opt) is an abstract method. '$1' must be implemented,\",\n  \"EL02232\": \"Copy(filter) is an abstract method. '$1' must be implemented,\",\n  \"EL02240\": \"---- i-control-schema.js ----\",\n  \"EL02241\": \"readSchema(json) is an abstract method. '$1' must be implemented\",\n  \"EL02242\": \"writeSchema(opt): object is an abstract method. '$1' must be implemented\",\n  \"EL02250\": \"---- i-transaction.js ----\",\n  \"EL02251\": \"AcceptChanges() is an abstract method. '$1' must be implemented\",\n  \"EL02252\": \"rejectChanges() is an abstract method. '$1' must be implemented\",\n  \"EL05100\": \"---- Meta.Entity.* ----\",\n  \"EL05110\": \"---- BaseColumn ----\",\n  \"EL05111\": \"$1._entity value is not an instance of [MetaElement]\",\n  \"EL05112\": \"$1.columnName is of type 'string'. typeof columnName = '$2'\",\n  \"EL05113\": \"Existing $1.columnName'$2'\",\n  \"EL05114\": \"Could not set columnName because $1.alias '$2' already exists\",\n  \"EL05115\": \"$1.alias is of type 'string'. typeofalias = '$2'\",\n  \"EL05116\": \"Existing $1.alias '$2'\",\n  \"EL05117\": \"$1.caption is of type 'string'. typeofcaption = '$2'\",\n  \"EL05118\": \"setObject(oGuid, origin); oGuid.['_entity'] guid not found. name = '$1', guid = '$2'\",\n  \"EL05119\": \"clone() is an abstract method. It must be inherited and implemented.\",\n  \"EL05120\": \"---- ObjectColumn ----\",\n  \"EL05121\": \"_load(prop); prop is of type 'object', type of prop = '$2'\",\n  \"EL05122\": \"setObject(oGuid, origin); oGuid.['default'] guid not found: guid = '$1'\",\n  \"EL05123\": \"setObject(oGuid, origin); oGuid.['value'] guid not found: guid = '$1'\",\n  \"EL05130\": \"---- MetaColumn ----\",\n  \"EL05131\": \"$1.required is of type 'boolean', type of = '$2'\",\n  \"EL05132\": \"$1.isNullPass is of type 'boolean'. typeofisNullPass = '$2' TODO: removed\",\n  \"EL05133\": \"The array element of $1.constraits is of type 'function' | {regex: RegExp, msg: string}. typeof [$2].regex = '$3', [$2].msg = '$4'\",\n  \"EL05134\": \"$1.getter is of type 'function', type of getter = '$2'\",\n  \"EL05135\": \"$1.setter is of type 'function', type of setter = '$2'\",\n  \"EL05136\": \"addConstraint (regex, msg, code, condition); regex is not a RegExp instance\",\n  \"EL05137\": \"addConstraint(regex, msg, code, condition); msg 는 'string' 타입입니다. typeof msg = '$1'\",\n  \"EL05138\": \"valid(value); value is a required value. columnName = '$1' \",\n  \"EL05139\": \"valid(value); function constraint failed. columnName = '$1' \",\n  \"EL0513A\": \"valid(value); regular expression constraint failed. Column name = '$1', msg = '$2'\",\n  \"EL05140\": \"---- BaseColumnCollection ----\",\n  \"EL05141\": \"$1._baseType is of type 'function', type of getter = '$2'\",\n  \"EL05142\": \"The prototype of $1._baseType [BaseColumn] must be connected (inheritance), \",\n  \"EL05143\": \"add(name, vlaue); cannot add columnColleciton because _onwer rows exist. _onwer.rows.count = '$1'\",\n  \"EL05144\": \"add(name, vlaue); cannot be added because '$2' exists in '$1'\",\n  \"EL05145\": \"add(name, vlaue); cannot be added because alias '$2' exists in '$1'\",\n  \"EL05146\": \"removeAt(idx); cannot remove columnColleciton because _onwer rows exist. _onwer.rows.count = '$1'\",\n  \"EL05147\": \"addValue(name, value) is an abstract method. Must be implemented\",\n  \"EL05148\": \"Column collection cannot use setter property. Add(), remove() method must be used\",\n  \"EL05150\": \"---- MetaTableColumnCollection ----\",\n  \"EL05151\": \"add(any); any 는 'string' | [BaseColumn] 타입입니다. typeof any = '$1'\",\n  \"EL05152\": \"addValue(name, value); name 은 'string' 타입입니다. typeof name = '$1'\",\n  \"EL05160\": \"---- MetaViewColumnCollection ----\",\n  \"EL05161\": \"add(any, refCol); refCol value is not of type [BaseColumnCollection\",\n  \"EL05162\": \"add(any, refCol); any 는 'string' | [BaseColumn] 타입입니다. typeof any = '$1'\",\n  \"EL05163\": \"addValue(name, value, refCol); name 은 'string' 타입입니다. typeof name = '$1'\",\n  \"EL05164\": \"addEntity(entity); entity value is not of type [BaseEntity\",\n  \"EL05200\": \"\",\n  \"EL05210\": \"---- MetaRow ----\",\n  \"EL05211\": \"$1.constructor(entity) value is not of type [BaseEntity\",\n  \"EL05212\": \"setObject(oGuid, origin); oGuid['_elem'].length = '$1' length and oGuid['_key'].length = '$2' length are different.\",\n  \"EL05213\": \"setObject(oGuid, origin); oGuid['_elem']['$1'] guid not found. guid = '$2'\",\n  \"EL05214\": \"changeKey(oldKey, newKey); parameter '$1' is not of type 'string'\",\n  \"EL05215\": \"changeKey(oldKey, newKey); existing key does not exist. '$1'\",\n  \"EL05216\": \"changeKey(oldKey, newKey); the key to be replaced overlaps with the existing key.'$1'\",\n  \"EL05220\": \"---- MetaRowCollection ----\",\n  \"EL05221\": \"The target's _entity object and $1._onwer object must be the same\",\n  \"EL05222\": \"insertAt(pos, row, isCheck); row is not type [MetaRow]\",\n  \"EL05223\": \"insertAt(pos, row, isCheck); row's _entity object and $1._onwer object must be the same\",\n  \"EL05224\": \"Validation of insertAt(pos, row, isCheck);row['$1'] failed msg = '$2'\",\n  \"EL05300\": \"---- base-entity.js ----\",\n  \"EL05310\": \"---- property ----\",\n  \"EL05311\": \"$1._mestaset value is not of type [MetaSet]\",\n  \"EL05312\": \"The $1.column property must be redefined,\",\n  \"EL05320\": \"---- private method :: _buildEntity, _readEntity, _readSchema - 14 ----\",\n  \"EL05321\": \"_buildEntity(entity, cb, items); items['$1'] 가 'string' It's not type. typeof items['$1'] = '$2'\",\n  \"EL05322\": \"_buildEntity(entity, cb, items); column name '$1' exists in this.column and cannot be added.\",\n  \"EL05323\": \"_buildEntity (entity, cb, items); row creation for entity failed\",\n  \"EL05324\": \"_readEntity(entity, opt); entity is not of type [BaseEntity\",\n  \"EL05325\": \"_readEntity(entity, opt); opt is not of type 'number'. type of opt = '$1'\",\n  \"EL05326\": \"_readEntity(entity, opt); entity read failed. opt = '$1'\",\n  \"EL05327\": \"_readEntity(entity, opt); this.rows exists and cannot load column.opt = '$1'\",\n  \"EL05328\": \"_readEntity(entity, opt); column name '$1' exists in this.column and cannot be added\",\n  \"EL05329\": \"_readSchema(obj, isRow, origin); obj._baseEntity guid not found. guid = '$1'\",\n  \"EL0532A\": \"_readSchema (obj, isRow, origin); Schema read failed\",\n  \"EL0532B\": \"_readSchema(obj, isRow, origin); this.rows exists and cannot be added to column\",\n  \"EL0532C\": \"_readSchema(obj, isRow, origin); this.columns['$1'] guid not found.guid = '$2'\",\n  \"EL0532D\": \"_readSchema(obj, isRow, origin); this.columns['$1']._entity guid를 not found. guid = '$2'\",\n  \"EL0532E\": \"_readSchema(obj, isRow, origin); column name '$1' exists in this.column and cannot be added\",\n  \"EL05330\": \"---- method :: transformSchema(static), setValue, clone, select - 7, : getValue, clear, reset, newRow, getObject, setObject ----\",\n  \"EL05331\": \"BaseEntity.transformSchema(oGuid); oGuid is not a schema object. oGuid = {column: $1,rows: $2}\",\n  \"EL05332\": \"BaseEntity.transformSchema(oGuid); schema conversion failed\",\n  \"EL05333\": \"setValue(row);row is not of type [MetaRow\",\n  \"EL05334\": \"Row setting failed for setValue(row); columns\",\n  \"EL05335\": \"select (filter, ...); recited from MetaRegistry.namespace to fetch '$1'\",\n  \"EL05336\": \"select(filter, ...); lookup failed\",\n  \"EL05337\": \"clone() is an abstract method. Must be implemented\",\n  \"EL05338\": \"validate(); validation can be performed if all columns are MetaColumn type.\",\n  \"EL05340\": \"---- merge, copy - 8 ----\",\n  \"EL05341\": \"merge(target, opt, isMath); target is not of type [BaseEntity]\",\n  \"EL05342\": \"merge(target, opt, isMath); opt is not of type 'number'. type of opt = '$1'\",\n  \"EL05343\": \"merge(target, opt, isMath); opt = 1, target.columns['$1'].name = '$2' 이 column name 에 존재합니다.\",\n  \"EL05344\": \"merge(target, opt, isMath); opt = 1, target.columns['$1'].name = '$2' 이 column alias 에 존재합니다.\",\n  \"EL05345\": \"merge(target, opt, isMath); opt = 3, target.columns['$1'].name = '$2' 이 columns name 에 존재합니다.\",\n  \"EL05346\": \"merge(target, opt, isMath); opt = 3, target.columns['$1'].name = '$2' 이 columns alias 에 존재합니다.\",\n  \"EL05347\": \"merge(target, opt, isMath); merge failed. opt = '$1'\",\n  \"EL05348\": \"copy() is an abstract method. must be implemented\",\n  \"EL05350\": \"---- load, read, readSchema, readDate - 12 ----\",\n  \"EL05351\": \"load(obj, pas); type [BaseEntity] obj cannot be loaded\",\n  \"EL05352\": \"load(obj, pas); obj is not of type 'object' (except null) type of obj = '$1'\",\n  \"EL05353\": \"load(obj, pas); load failed\",\n  \"EL05354\": \"read(obj, opt); obj is not of type 'object' (except null) type of obj = '$1'\",\n  \"EL05355\": \"read(obj, opt); opt is not of type 'number'. type of opt = '$1'\",\n  \"EL05356\": \"read(obj, opt); opt values are not in the range (1-3). obj = '$1'\",\n  \"EL05357\": \"read(obj, opt); read failed\",\n  \"EL05358\": \"readSchema(obj, isCreate, origin); obj is not of type 'object' (except null) type of obj = '$1'\",\n  \"EL05359\": \"readSchema(obj, isCreate, origin); obj is not a schema object. obj = {column: $1,rows: $2}\",\n  \"EL0535A\": \"readSchema (obj, isCreate, origin); skami read failed\",\n  \"EL0535B\": \"readData(obj); obj is not of type 'object' (except null) type of obj = '$1'\",\n  \"EL0535C\": \"readData(obj); obj is not a schema object. obj = {columns: $1,rows: $2}\",\n  \"EL0535D\": \"readData(obj); data read failed\",\n  \"EL05360\": \"---- output, write, writeSchema, writeData - 4 ----\",\n  \"EL05361\": \"\",\n  \"EL05400\": \"\",\n  \"EL05410\": \"---- MetaTable ----\",\n  \"EL05411\": \"$1.tableName value is not of type 'string'. typeoftableName = '$2'\",\n  \"EL05412\": \"$1.column value is not of type [MetaTableCollection]\",\n  \"EL05413\": \"$1.rows exists and cannot set columns.rows.count = '$2'\",\n  \"EL05414\": \"setObject(oGuid, origin); oGuid.['_metaSet'] guid not found: guid = '$1'\",\n  \"EL05420\": \"---- MetaTableColleciton ----\",\n  \"EL05421\": \"$1._baseType value is not function type. typeof_baseType = '$2'\",\n  \"EL05422\": \"The prototype of $1._baseType [MetaTable] must be connected. (Inheritance)\",\n  \"EL05423\": \"add(any); any is 'string' | [MetaTable] type. typeofany = '$1'\",\n  \"EL05424\": \"add(any); tableName = '$1' existing\",\n  \"EL05430\": \"---- MetaView ----\",\n  \"EL05431\": \"$1.viewName value is not of type 'string'. typeofviewName = '$2'\",\n  \"EL05432\": \"$1.column value is not of type [MetaViewCollection]\",\n  \"EL05433\": \"$1.rows exists and cannot set columns.rows.count = '$2'\",\n  \"EL05434\": \"$1._baseEntity value is not of type [BaseEntity]\",\n  \"EL05435\": \"setObject(oGuid, origin); oGuid.['_metaSet'] guid not found: guid = '$1'\",\n  \"EL05436\": \"setObject(oGuid, origin); oGuid.['_baseEntivity'] guid not found: guid = '$1'\",\n  \"EL05440\": \"---- MetaViewColleciton ----\",\n  \"EL05441\": \"$1._baseType value is not of type 'function'. typeof_baseType = '$2'\",\n  \"EL05442\": \"The prototype of $1._baseType [MetaView] must be connected (inheritance), \",\n  \"EL05443\": \"You cannot enter obj and baseEntity of type [MetaView] at the same time\",\n  \"EL05444\": \"add(obj, baseEntity); baseEntity is not type [BaseEntity]\",\n  \"EL05445\": \"add(obj, baseEntity); obj is 'string' | [MetaView] type. typeof obj = '$1'\",\n  \"EL05446\": \"add(obj, baseEntity); viewName = '$1' existing\",\n  \"EL05450\": \"---- MetaSet ----\",\n  \"EL05451\": \"$1.setName value is not of type 'string'. typeofsetName = '$2'\",\n  \"EL05452\": \"$1.autoChanges value is not of type 'boolean'. typeofsetName = '$2'\",\n  \"EL05453\": \"MetaSet.transformSchema(oGuid); oGuid is not a schema object: oGuid = {tables:..., views:...}\",\n  \"EL05454\": \"load(obj, pas); type [MetaSet] obj cannot be loaded\",\n  \"EL05455\": \"load(obj, pas); obj is not of type 'object' (except null) type of obj = '$1'\",\n  \"EL05456\": \"read(obj, opt); obj is not of type 'object' (except null) type of obj = '$1'\",\n  \"EL05457\": \"read(obj, opt); opt is not of type 'number'. type of opt = '$1'\",\n  \"EL05458\": \"readSchema(obj, isCreate); obj is not of type 'object' (except null) type of obj = '$1'\",\n  \"EL05459\": \"readSchema(obj, isCreate); obj is not a schema object. obj = {tables: $1, views: $2}\",\n  \"EL0545A\": \"readData(obj); obj is not of type 'object' (except null) type of obj = '$1'\",\n  \"EL0545B\": \"readData(obj); obj is not a schema object.\"\n}","/**** i-control-export.js | IExportControl ****/\n//==============================================================\nimport { ExtendError }      from 'logic-core';\n\n\n/**\n * 내보내기 제어 인터페이스 입니다.\n * \n * @interface\n * @constructs IExportControl\n */\nclass IExportControl {\n\n    static _NS = 'Interface';    // namespace\n    static _KIND = 'interface';\n    \n    constructor() {\n    }\n\n    /**\n     * 대상을 내보냅니다. (쓰기)\n     * \n     * @returns {any}\n     * @abstract\n     */\n    write() {\n        throw new ExtendError(/EL02211/, null, ['IExportControl']);\n    }\n}\n\nexport default IExportControl;\nexport { IExportControl };","/**** i-control-group.js | IGroupControl ****/\n//==============================================================\nimport { ExtendError }      from 'logic-core';\n\n/**\n * 그룹 제어 인터페이스 입니다.\n * \n * @interface\n * @constructs IGroupControl\n */\nclass IGroupControl {\n\n    static _NS = 'Interface';    // namespace\n    static _KIND = 'interface';\n    \n    constructor() {\n    }\n\n    /**\n     * 병합합니다.\n     * \n     * @abstract\n     */\n    merge() {\n        throw new ExtendError(/EL02231/, null, ['IGroupControl']);\n    }\n\n    /**\n     * 복사합니다.\n     * \n     * @returns {any}\n     * @abstract\n     */\n    copy() {\n        throw new ExtendError(/EL02232/, null, ['IGroupControl']);\n    }\n}\n\nexport default IGroupControl;\nexport { IGroupControl };","/**** i-control-import.js | IImportControl ****/\n//==============================================================\nimport { ExtendError }      from 'logic-core';\n\n/**\n * 가져오기 제어 인터페이스 입니다.\n * \n * @interface\n * @constructs IImportControl\n */\nclass IImportControl {\n\n    static _NS = 'Interface';    // namespace\n    static _KIND = 'interface';\n    \n    constructor() {\n    }\n\n    /**\n     * 대상을 가져옵니다. (읽기)\n     * \n     * @abstract\n     */\n    read() {\n        throw new ExtendError(/EL02221/, null, ['IImportControl']);\n    }\n}\n\nexport default IImportControl;\nexport { IImportControl };","/**** i-control-schema.js | ISchemaControl ****/\n//==============================================================\nimport { ExtendError }      from 'logic-core';\n\n/**\n * 스키마 제어 인터페이스 입니다.\n * \n * @interface\n * @constructs ISchemaControl\n */\nclass ISchemaControl {\n\n    static _NS = 'Interface';    // namespace\n    static _KIND = 'interface';\n    \n    constructor() {\n    }\n\n    /**\n     * 스키마를 가져옵니다.\n     * \n     * @abstract\n     */\n    readSchema() {\n        throw new ExtendError(/EL02241/, null, ['ISchemaControl']);\n    }\n\n    /**\n     * 스키마를 내보냅니다.\n     * \n     * @returns {any}\n     * @abstract\n     */\n    writeSchema() {\n        throw new ExtendError(/EL02242/, null, ['ISchemaControl']);\n    }\n}\n\nexport default ISchemaControl;\nexport { ISchemaControl };","/**** i-transaction.js | ITransaction ****/\n//==============================================================\nimport { ExtendError }      from 'logic-core';\n\n/**\n * 트렌젝션 인터페이스 입니다.\n * \n * @interface\n * @constructs ITransaction\n */\nclass ITransaction {\n    \n    static _NS = 'Interface';    // namespace\n    static _KIND = 'interface';\n    \n    constructor() {\n    }\n\n    /**\n     * 변경을 수락합니다. (commit)\n     * \n     * @abstract\n     */\n    acceptChanges() {\n        throw new ExtendError(/EL02251/, null, ['ITransaction']);\n    }\n\n    /**\n     * 변경을 거부합니다. (rollback)\n     * \n     * @abstract\n     */\n    rejectChanges() {\n        throw new ExtendError(/EL02252/, null, ['ITransaction']);\n    }\n}\n\nexport default ITransaction;\nexport { ITransaction };","/**** trans-queue.js | TransactionQueue ****/\n//==============================================================\nimport { ExtendError }              from 'logic-core';\nimport { MetaObject }               from 'logic-core';\nimport { ArrayCollection }          from 'logic-core';\n\nvar TransactionQueue  = (function () {\n    /**\n     * 트랜젝션 큐\n     * \n     * @constructs TransactionQueue\n     * @param {ArrayCollection} p_collection 배열컬렉션\n     */\n    function TransactionQueue(p_collection) {\n        \n        var queue = [];\n        var collection;\n\n        /**\n         * 큐 목록\n         * \n         * @readonly\n         * @member {array<object>} TransactionQueue#queue\n         */\n        Object.defineProperty(this, 'queue', {\n            get: function() { return queue; },\n            configurable: false,\n            enumerable: true\n        });\n        \n        /**\n         * 대상 컬랙션\n         * \n         * @member {Number} TransactionQueue#count \n         */\n        Object.defineProperty(this, 'collection', {\n            get: function() { return collection; },\n            set: function(nVal) { \n                if (!(nVal instanceof MetaObject)) {\n                    throw new ExtendError(/EL04321/, null, []);\n                }\n                if (!(nVal.instanceOf(ArrayCollection))) {\n                    throw new ExtendError(/EL04322/, null, []);\n                }\n                collection = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        this.collection = p_collection;\n    }\n\n    TransactionQueue._NS = 'Collection';    // namespace\n    TransactionQueue._PARAMS = ['_owner'];  // creator parameter\n\n    /**\n     * 초기화\n     */\n    TransactionQueue.prototype.init  = function() {\n        this.queue.length = 0;\n    };\n\n    /**\n     * 커밋\n     */\n    TransactionQueue.prototype.commit  = function() {\n        this.init();\n    };\n\n    /**\n     * 롤백\n     */\n    TransactionQueue.prototype.rollback  = function() {\n        var pos, obj;\n        \n        for (var i = this.queue.length - 1; i >= 0; i--) {\n            obj = this.queue[i];\n            if(obj.cmd === 'I') {\n                // pos = this.collection.indexOf(obj.ref);\n                pos = obj.pos;\n                this.collection.removeAt(pos);\n            } else if(obj.cmd === 'D') {\n                pos = obj.pos;\n                this.collection.insertAt(pos, obj.clone);\n            } else if(obj.cmd === 'U') {\n                // pos = this.collection.indexOf(obj.ref);\n                pos = obj.pos;\n                this.collection.removeAt(pos);\n                this.collection.insertAt(pos, obj.clone);\n            } else throw new ExtendError(/EL04323/, null, [obj.cmd]);\n        }\n        this.init();\n    };\n\n    /**\n     * 추가\n     * \n     * @param {number} p_pos 위치\n     * @param {object} p_target 대상\n     * @param {string} p_etc 기타\n     */\n    TransactionQueue.prototype.insert  = function(p_pos, p_target, p_etc) {\n        this.queue.push({\n            cmd: 'I',\n            pos: p_pos,\n            ref: p_target,\n            clone: null,\n            etc: p_etc || ''\n        });\n    };\n    \n    /**\n     * 삭제\n     * \n     * @param {number} p_pos 위치\n     * @param {object} p_clone 복제한 객체\n     * @param {string} p_etc 기타\n     */\n    TransactionQueue.prototype.delete  = function(p_pos, p_clone, p_etc) {\n        this.queue.push({\n            cmd: 'D',\n            pos: p_pos,\n            ref: null,\n            clone: p_clone,\n            etc: p_etc || ''\n        });\n    };\n\n    /**\n     * 수정\n     * \n     * @param {number} p_pos 위치\n     * @param {object} p_target 대상\n     * @param {object} p_clone 복제한 객체\n     * @param {string} p_etc 기타\n     */\n    TransactionQueue.prototype.update  = function(p_pos, p_target, p_clone, p_etc) {\n        this.queue.push({\n            cmd: 'U',\n            pos: p_pos,\n            ref: p_target,\n            clone: p_clone,\n            etc: p_etc || ''\n        });\n    };\n    \n    /**\n     * 변경 내역 조회\n     * \n     * @returns {array<object>}\n     */\n    TransactionQueue.prototype.select  = function() {\n        return this.queue;\n    };\n\n    return TransactionQueue;\n\n}());\n\nexport default TransactionQueue;\nexport { TransactionQueue };","/**** collection-transaction.js | TransactionCollection ****/\n//==============================================================\nimport { ExtendError }          from 'logic-core';\nimport { Type }                 from 'logic-core';\nimport { Util }                 from 'logic-core';\nimport { ArrayCollection }      from 'logic-core';\nimport { TransactionQueue }     from './trans-queue.js';\n\nvar TransactionCollection  = (function (_super) {\n    /**\n     * 트랜젝션 컬렉션 클래스\n     * \n     * @constructs TransactionCollection\n     * @extends ArrayCollection\n     * @param {object} p_owner 소유객체\n     */\n    function TransactionCollection(p_owner) {\n        _super.call(this, p_owner);\n\n        var _transQueue = new TransactionQueue(this);\n        var autoChanges = false;\n\n        /**\n         * 트렌젝션 큐\n         * \n         * @readonly\n         * @member {TransactionQueue} TransactionCollection#_transQueue\n         */\n        Object.defineProperty(this, '_transQueue', {\n            get: function() { return _transQueue; },\n            configurable: false,\n            enumerable: false\n        });\n\n        /**\n         * 자동 변경 유무 (기본값: 사용 false)\n         * \n         * @member {boolean} TransactionCollection#autoChanges\n         */\n        Object.defineProperty(this, 'autoChanges', {\n            get: function() { return autoChanges; },\n            set: function(nVal) { \n                if (typeof nVal !== 'boolean') {\n                    throw new ExtendError(/EL04311/, null, [this.constructor.name ,typeof nVal]);\n                }\n                autoChanges = nVal;\n            },\n            configurable: false,\n            enumerable: false\n        });\n\n        /**\n         * 변경 유무\n         * \n         * @readonly\n         * @member {TransactionCollection} TransactionCollection#hasChanges\n         */\n        Object.defineProperty(this, 'hasChanges', {\n            get: function() { return _transQueue.queue.length > 0; },\n            configurable: false,\n            enumerable: false\n        });\n\n        // 예약어 등록 \n        this.$KEYWORD = ['_transQueue', 'autoChanges', 'hasChanges'];\n        this.$KEYWORD = ['commit', 'rollback'];\n\n    }\n    Util.inherits(TransactionCollection, _super);\n\n    TransactionCollection._NS = 'Collection';      // namespace\n    TransactionCollection._PARAMS = ['_owner'];    // creator parameter\n\n    /**\n     * 트랜젝션 컬렉션 프로퍼티 기술자 \n     * \n     * @protected\n     * @param {number} p_idx 인덱스\n     */\n    TransactionCollection.prototype._getPropDescriptor = function(p_idx) {\n        return {\n            get: function() { return this.$elements[p_idx]; },\n            set: function(nVal) {\n                if (this._elemTypes.length > 0) Type.matchType([this._elemTypes], nVal);\n                this._transQueue.update(p_idx, nVal, this.$elements[p_idx]); \n                this.$elements[p_idx] = nVal;\n            },\n            configurable: true,\n            enumerable: true,\n        };\n    };\n    Object.defineProperty(TransactionCollection.prototype, '_getPropDescriptor', {\n        enumerable: false\n    });\n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.  \n     * \n     * @param {number} p_vOpt 가져오기 옵션  \n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)  \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)  \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    TransactionCollection.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        // var vOpt = p_vOpt || 0;\n        // var origin = p_origin ? p_origin : obj;\n        // var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        if (this.autoChanges !== false) obj['autoChanges'] = this.autoChanges;\n        return obj;                        \n    };\n    Object.defineProperty(TransactionCollection.prototype, 'getObject', {\n        enumerable: false\n    });\n\n    /**\n     * 현재 객체를 초기화 후, 지정한 guid 타입의 객체를 사용하여 설정합니다.  \n     * \n     * @param {object} p_oGuid guid 타입의 객체\n     * @param {object} [p_origin] 현재 객체를 설정하는 원본 guid 객체  \n     * 기본값은 p_oGuid 객체와 동일\n     */\n    TransactionCollection.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        this._transQueue.init();\n        if (p_oGuid['autoChanges']) this.autoChanges = p_oGuid['autoChanges'];\n    };\n    Object.defineProperty(TransactionCollection.prototype, 'setObject', {\n        enumerable: false\n    });\n\n    /**\n     * 지정 위치에 요소 삭제\n     * \n     * @param {number} p_pos 인덱스 위치\n     * @returns {boolean}\n     */\n    TransactionCollection.prototype.removeAt = function(p_pos) {\n        if (!this.autoChanges) this._transQueue.delete(p_pos, this[p_pos]);\n        return _super.prototype.removeAt.call(this, p_pos);\n    };\n    Object.defineProperty(TransactionCollection.prototype, 'removeAt', {\n        enumerable: false\n    });\n\n    /**\n     * 전체 초기화\n     */\n    TransactionCollection.prototype.clear = function() {\n        _super.prototype.clear.call(this);\n        this._transQueue.init();\n    };\n    Object.defineProperty(TransactionCollection.prototype, 'clear', {\n        enumerable: false\n    });\n\n    /**\n     * 지정 위치에 요소 추가\n     * \n     * @param {number} p_pos 인덱스 위치\n     * @param {any} p_elem 요소\n     * @param {object} [p_desc] 프로퍼티 기술자 객체\n     * @returns {boolean}\n     */\n    TransactionCollection.prototype.insertAt = function(p_pos, p_elem, p_desc) {\n        if (!this.autoChanges) this._transQueue.insert(p_pos, p_elem);\n        return _super.prototype.insertAt.call(this, p_pos, p_elem, p_desc);\n    };\n    Object.defineProperty(TransactionCollection.prototype, 'insertAt', {\n        enumerable: false\n    });\n\n    /**\n     * 변경사항 반영\n     */\n    TransactionCollection.prototype.commit = function() {\n        this._transQueue.commit();\n    };\n    Object.defineProperty(TransactionCollection.prototype, 'commit', {\n        enumerable: false\n    });\n\n    /**\n     * 변경사항 이전으로 복귀\n     */\n    TransactionCollection.prototype.rollback = function() {\n        this._transQueue.rollback();\n    };\n    Object.defineProperty(TransactionCollection.prototype, 'rollback', {\n        enumerable: false\n    });\n\n    return TransactionCollection;\n\n}(ArrayCollection));\n\nexport default TransactionCollection;\nexport { TransactionCollection };","/**** meta-row.js | MetaRow ****/\n//==============================================================\nimport { ExtendError }          from 'logic-core';\nimport { Type }                 from 'logic-core';\nimport { Util }                 from 'logic-core';\nimport { EventEmitter }         from 'logic-core';\nimport { MetaObject }           from 'logic-core';\nimport { IList }                from 'logic-core';\nimport { MetaRegistry }         from 'logic-core';\n\nvar MetaRow  = (function (_super) {\n    /**\n     * 메타 로우\n     * \n     * @constructs MetaRow\n     * @extends MetaObject\n     * @param {BaseEntity} p_entity 소유하는 엔티티\n     */\n    function MetaRow(p_entity) {\n        _super.call(this);\n        \n        // private\n        var $event  = new EventEmitter(this);\n        var $elements = [];\n        var $keys = [];\n\n        // protected\n        // var _this   = this;\n        var _entity  = null;\n\n        /**\n         * 내부 변수 접근\n         * \n         * @member {Array<string>} MetaRow#$elements\n         * @readonly\n         * @private\n         */\n        Object.defineProperty(this, '$elements', {\n            get: function() { return $elements; },\n            set: function(nVal) { $elements = nVal; },\n            configurable: false,\n            enumerable: false,\n        });\n\n\n        /** \n         * 이벤트 객체\n         * \n         * @private \n         * @member {EventEmitter} MetaRow#$event  \n         */\n        Object.defineProperty(this, '$event', {\n            get: function() { return $event; },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * 요소 키\n         * \n         * @readonly\n         * @member {Array<string>} MetaRow#$keys  \n         */\n        Object.defineProperty(this, '$keys', {\n            get: function() {\n                // var arr = [];\n                // for (var i = 0; i < $keys.length; i++) arr.push($keys[i]);\n                // return arr;\n                return $keys;\n            },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * 로우의 소유 엔티티\n         * \n         * @readonly\n         * @member {BaseEntity} MetaRow#_entity\n         */\n        Object.defineProperty(this, '_entity', {\n            get: function() { return _entity; },\n            configurable: false,\n            enumerable: false\n        });\n\n        /**\n         * 컬렉션 목록 \n         * \n         * @readonly\n         * @member {Array<any>}  MetaRow#_list  \n         */\n        Object.defineProperty(this, '_list', {\n            get: function() {\n                var arr = [];\n                for (var i = 0; i < $elements.length; i++) arr.push($elements[i]);\n                return arr;\n            },\n            configurable: false,\n            enumerable: false,\n        });            \n        \n        /**\n         * 컬랙션 갯수 \n         * \n         * @readonly\n         * @member {Number} MetaRow#count \n         */\n        Object.defineProperty(this, 'count', {\n            get: function() { return $elements.length; },\n            configurable: false,\n            enumerable: false\n        });\n\n        /**\n         * 변경전 이벤트 \n         * \n         * @event MetaRow#onChanged \n         * @param {function}    p_callback\n         * @param {number}      p_callback.p_idx  index\n         * @param {any}         p_callback.p_nValue 신규 값\n         * @param {any}         p_callback.p_oValue 기존 값\n         * @param {this}        p_callback.p_this 로우 객체\n         */\n        Object.defineProperty(this, 'onChanging', {\n            set: function(fun) { this.$event.on('onChanging', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n        \n        /**\n         * 변경후 이벤트 \n         * \n         * @event MetaRow#onChanged \n         * @param {function}    p_callback\n         * @param {number}      p_callback.p_idx  index\n         * @param {any}         p_callback.p_nValue 신규 값\n         * @param {any}         p_callback.p_oValue 기존 값\n         * @param {this}        p_callback.p_this 로우 객체\n         */\n        Object.defineProperty(this, 'onChanged', {\n            set: function(fun) { this.$event.on('onChanged', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        // inner variable access\n        // this.__GET$elements = function(call) {\n        //     if (call instanceof MetaRow) return $elements;\n        // }\n        // this.__GET$_keys = function(call) {\n        //     if (call instanceof MetaRow) return _keys;\n        // };\n        // this.__SET$elements = function(val, call) {\n        //     if (call instanceof MetaRow) $elements = val;\n        // }\n        // this.__SET$_keys = function(val, call) {\n        //     if (call instanceof MetaRow) _keys = val;\n        // };\n        // this.__SET$_entity = function(val, call) {\n        //     if (call instanceof MetaRow) _entity = val;\n        // };\n        \n        // BaseEntity 등록 & order(순서) 값 계산\n        if (!(p_entity instanceof MetaObject && p_entity.instanceOf('BaseEntity'))) {\n            throw new ExtendError(/EL05211/, null, []);\n        }\n        \n        // 설정\n        _entity = p_entity;\n\n        for (var i = 0; i < _entity.columns.count; i++) {\n            var idx = $elements.length;\n            var alias = _entity.columns[i].alias;\n            $elements.push(_entity.columns[i].default);  // 기본값 등록\n            $keys.push(alias);\n            Object.defineProperty(this, [i], this._getPropDescriptor(idx, false));\n            Object.defineProperty(this, alias, this._getPropDescriptor(idx));\n        }\n\n        \n\n        Util.implements(MetaRow, this);         // strip:\n    }\n    Util.inherits(MetaRow, _super);\n    \n    MetaRow._UNION = [IList];\n    MetaRow._NS = 'Meta.Entity';\n    MetaRow._PARAMS = ['_entity'];\n\n    // local function\n    function _isString(obj) {    // 공백아닌 문자 여부\n        if (typeof obj === 'string' && obj.length > 0) return true;\n        return false;\n    }\n    \n    /**\n     * TODO:\n     * \n     * @param {*} p_idx \n     * @param {*} p_enum \n     * @returns \n     */\n    MetaRow.prototype._getPropDescriptor = function(p_idx, p_enum) {\n        if (typeof p_enum !== 'boolean') p_enum = true;\n        return {\n            get: function() { return this.$elements[p_idx]; },\n            set: function(nVal) {\n                var oldValue = this.$elements[p_idx];\n                var column;\n                // 엔티티 항상 존재함\n                column = this._entity.columns[p_idx];\n                if (column && column._valueTypes.length > 0) Type.matchType([column._valueTypes], nVal);\n                // 트렌젹션 처리 => 함수로 추출 검토\n                if (this._entity && !this._entity.rows.autoChanges) {\n                    var etc = 'idx:'+ p_idx +', new:' + nVal + ', old:'+ oldValue;\n                    var pos = this._entity.rows.indexOf(this);\n                    if (pos > -1) {     // 컬력션에 포힘때 : 변경시점에 큐에 추가\n                        this._entity.rows._transQueue.update(pos, this, this.clone(), etc);\n                    }\n                }\n                // 이벤트 및 처리\n                this._onChanging(p_idx, nVal, oldValue);\n                this.$elements[p_idx] = nVal;\n                this._onChanged(p_idx, nVal, oldValue);\n\n            },\n            configurable: true,\n            enumerable: p_enum\n        };\n    };\n    Object.defineProperty(MetaRow.prototype, '_getPropDescriptor', {\n        enumerable: false\n    });\n\n    /**\n     * 속성명 변경\n     * \n     * @param {string} [p_entity] 대상의 엔티티 기준으로 생성\n     * @returns {MetaRow}\n     */\n    MetaRow.prototype._changeKey  = function(p_oldKey, p_newKey) {\n        var idx;\n\n        // 타입 검사\n        if (!_isString(p_oldKey)) throw new ExtendError(/EL05214/, null, ['oldKey']);\n        if (!_isString(p_newKey)) throw new ExtendError(/EL05214/, null, ['newKey']);\n\n        \n        // 새로운 키 중복 검사\n        if (this.$keys.indexOf(p_oldKey) < 0) throw new ExtendError(/EL05215/, null, [p_oldKey]);  // 기존에 키가 존재하지 않습니다. TODO:\n        if (this.$keys.indexOf(p_newKey) > -1) throw new ExtendError(/EL05216/, null, [p_newKey]); // 교체할 키가 기존 키와 중복됩니다. TODO:\n\n        // 기존 idx 조회\n        idx = this.$keys.indexOf(p_oldKey);\n\n        // 기존 제거 및 설정\n        delete this[p_oldKey];\n        Object.defineProperty(this, p_newKey, this._getPropDescriptor(idx));\n\n        // $keys 값 교체\n        this.$keys.splice(idx, 1, p_newKey); \n    };\n    Object.defineProperty(MetaRow.prototype, '_changeKey', {\n        enumerable: false\n    });\n\n\n    // function $getPropDescriptor(p_idx, p_enum) {\n    //     if (typeof p_enum !== 'boolean') p_enum = true;\n    //     return {\n    //         get: function() { return this.$elements[p_idx]; },\n    //         set: function(nVal) {\n    //             var oldValue = this.$elements[p_idx];\n    //             var column;\n    //             // 엔티티 항상 존재함\n    //             column = this._entity.columns[p_idx];\n    //             if (column && column._valueTypes.length > 0) Type.matchType([column._valueTypes], nVal);\n    //             // 트렌젹션 처리 => 함수로 추출 검토\n    //             if (this._entity && !this._entity.rows.autoChanges) {\n    //                 var etc = 'idx:'+ p_idx +', new:' + nVal + ', old:'+ oldValue;\n    //                 var pos = this._entity.rows.indexOf(this);\n    //                 if (pos > -1) {     // 컬력션에 포힘때 : 변경시점에 큐에 추가\n    //                     this._entity.rows._transQueue.update(pos, this, this.clone(), etc);\n    //                 }\n    //             }\n    //             // 이벤트 및 처리\n    //             this._onChanging(p_idx, nVal, oldValue);\n    //             this.$elements[p_idx] = nVal;\n    //             this._onChanged(p_idx, nVal, oldValue);\n\n    //         },\n    //         configurable: false,\n    //         enumerable: p_enum\n    //     };\n    // }\n    \n    /**\n     * 로우 요소 변경전 이벤트\n     * \n     * @param {*} p_idx 인덱스\n     * @param {*} p_nValue 변경 값\n     * @param {*} p_oValue 기존 값\n     * @listens MetaColumn#_onChanged\n     */\n    MetaRow.prototype._onChanging = function(p_idx, p_nValue, p_oValue) {\n        this.$event.emit('onChanging', p_idx, p_nValue, p_oValue, this);\n    };\n    Object.defineProperty(MetaRow.prototype, '_onChanging', {\n        enumerable: false\n    });\n\n    /**\n     * 로우 요소 변경후 이벤트\n     * \n     * @param {*} p_idx 인덱스\n     * @param {*} p_nValue 변경 값\n     * @param {*} p_oValue 기존 값\n     * @listens MetaColumn#_onChanged\n     */\n    MetaRow.prototype._onChanged = function(p_idx, p_nValue, p_oValue) {\n        this.$event.emit('onChanged', p_idx, p_nValue, p_oValue, this);\n    };\n    Object.defineProperty(MetaRow.prototype, '_onChanged', {\n        enumerable: false\n    });\n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.\n     * @param {number} p_vOpt 가져오기 옵션\n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)   \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)   \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    MetaRow.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        if (!Type.deepEqual(this.$event.$storage, {})) {\n            obj['$storage'] = this.$event.$storage;\n        }\n        if (vOpt < 2 && vOpt > -1 && this._entity) {\n            obj['_entity'] = MetaRegistry.createReferObject(this._entity);\n        }\n        obj['_elem'] = [];\n        for (var i = 0; i < this._list.length; i++) {\n            var elem = this._list[i];\n            if (elem instanceof MetaObject) {\n                if (MetaRegistry.hasGuidObject(elem, owned)) {\n                    obj['_elem'].push(MetaRegistry.createReferObject(elem));\n                } else obj['_elem'].push(elem.getObject(vOpt, owned));\n            } else obj['_elem'].push(elem);\n        }\n        obj['_key'] = [];\n        for (var k = 0; k < this.$keys.length; k++) {\n            var key = this.$keys[k];\n            obj['_key'].push(key);\n        }\n        return obj;                        \n    };\n    Object.defineProperty(MetaRow.prototype, 'getObject', {\n        enumerable: false\n    });\n\n    /**\n     * 현재 객체를 초기화 후, 지정한 guid 타입의 객체를 사용하여 설정합니다.   \n     * \n     * @param {object} p_oGuid guid 타입의 객체\n     * @param {object} [p_origin] 현재 객체를 설정하는 원본 guid 객체  \n     * 기본값은 p_oGuid 객체와 동일\n     */\n    MetaRow.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        \n        var origin = p_origin ? p_origin : p_oGuid;\n        // var entity;\n        \n        if (p_oGuid['_elem'].length !== p_oGuid['_key'].length) throw new ExtendError(/EL05212/, null, [p_oGuid['_elem'].length, p_oGuid['_key'].length]);\n\n        if (p_oGuid['$storage']) {\n            this.$event.$storage = p_oGuid['$storage'];\n        }\n        for(var i = 0; i < p_oGuid['_elem'].length; i++) {\n            var elem = p_oGuid['_elem'][i];\n            if (MetaRegistry.isGuidObject(elem)) {\n                var obj = MetaRegistry.createMetaObject(elem, origin);\n                obj.setObject(elem, origin);\n                this.$elements[i] = obj;\n            } else if (elem['$ref']) {\n                var meta = MetaRegistry.findSetObject(elem['$ref'], origin);\n                if (!meta) throw new ExtendError(/EL05213/, null, [i, elem['$ref']]);\n                this.$elements[i] = meta;   \n            } else this.$elements[i] = elem;   \n        }\n    };\n    Object.defineProperty(MetaRow.prototype, 'setObject', {\n        enumerable: false\n    });\n\n    /**\n     * 객체 복제\n     * \n     * @param {BaseEntity} [p_entity] 대상의 엔티티 기준으로 생성\n     * @returns {MetaRow}\n     */\n    MetaRow.prototype.clone  = function(p_entity) {\n        var entity = p_entity || this._entity;\n        var clone = new MetaRow(entity);\n        var obj = this.getObject();\n\n        if (obj.$storage) {\n            clone.$event.$storage = obj.$storage;\n        }\n        clone.$elements = Util.deepCopy(obj._elem);\n        return clone;\n    };\n    Object.defineProperty(MetaRow.prototype, 'clone', {\n        enumerable: false\n    });\n    \n    return MetaRow;\n\n}(MetaObject));\n\nexport default MetaRow;\nexport { MetaRow };","/**** collection-meta-row.js | MetaTableCollection ****/\n//==============================================================\nimport { ExtendError }              from 'logic-core';\nimport { Type }                     from 'logic-core';\nimport { Util }                     from 'logic-core';\nimport { TransactionCollection }    from './collection-transaction.js';\nimport { MetaRow }                  from './meta-row.js';\n\nvar MetaRowCollection  = (function (_super) {\n    /**\n     * 로우 컬렉션\n     * \n     * @constructs MetaRowCollection\n     * @extends TransactionCollection\n     * @param {object} [p_owner] 소유자 \n     */\n    function MetaRowCollection(p_owner) {\n        _super.call(this, p_owner);\n\n        this._elemTypes = MetaRow;   // 컬렉션타입 설정\n        this.autoChanges = true;    // 트랜젝션 기본 해제 해제입니다.\n    }\n    Util.inherits(MetaRowCollection, _super);\n\n    MetaRowCollection._NS = 'Meta.Entity';    // namespace\n    MetaRowCollection._PARAMS = ['_owner'];  // creator parameter\n\n    /**\n     * 프로퍼티 기술자 설정\n     * \n     * @protected\n     * @param {number} p_idx 인덱스\n     */\n    MetaRowCollection.prototype._getPropDescriptor = function(p_idx) {\n        return {\n            get: function() { return this.$elements[p_idx]; },\n            set: function(nVal) {\n                if (this._elemTypes.length > 0) Type.matchType([this._elemTypes], nVal);\n                if (nVal._entity !== this._owner) throw new ExtendError(/EL05221/, null, [this.constructor.name]);\n                this._transQueue.update(p_idx, nVal, this.$elements[p_idx]); \n                this.$elements[p_idx] = nVal;\n            },\n            configurable: true,\n            enumerable: true,\n        };\n    };\n    Object.defineProperty(MetaRowCollection.prototype, '_getPropDescriptor', {\n        enumerable: false\n    });\n\n    /**\n     * MetaRow 추가 idx 를 기준으로 검사한다.\n     * \n     * @param {MetaRow} p_row 추가할 MetaRow\n     * @param {boolean} [p_isCheck] 유효성 검사 여부 (기본값 = false)\n     * @returns {number}\n     */\n    MetaRowCollection.prototype.add  = function(p_row, p_isCheck) {\n        var pos = this.$elements.length;\n        this.insertAt(pos, p_row, p_isCheck);  // TODO: try 문으로 묶음 필요\n        return pos;\n    };\n    Object.defineProperty(MetaRowCollection.prototype, 'add', {\n        enumerable: false\n    });\n\n    /**\n     * pos 위치에 추가\n     * \n     * @param {number} p_pos 추가할 위치 인덱스\n     * @param {MetaRow} p_row 추가할 MetaRow\n     * @param {boolean} [p_isCheck] 유효성 검사 여부 (기본값 = false)\n     * @returns {boolean}\n     */\n    MetaRowCollection.prototype.insertAt  = function(p_pos, p_row, p_isCheck) {\n        var isCheck = p_isCheck || false;\n        var result;\n        var entity = p_row._entity;\n\n        if (!(p_row instanceof MetaRow )) throw new ExtendError(/EL05222/, null, []);\n        if (entity._guid !== this._owner._guid) throw new ExtendError(/EL05223/, null, [this.constructor.name]);\n        \n        // valid 검사\n        if (isCheck === true) {\n            for (let i = 0; i < p_row.count; i++) {\n                result = entity.columns[i].valid(p_row[i]);     // TODO: try 조건으로 변경 하면 하위 메세지 호출함\n                if(result) {\n                    throw new ExtendError(/EL05224/, null, [i, result.msg]);\n                }\n            }\n        }\n        return _super.prototype.insertAt.call(this, p_pos, p_row);\n    };\n    Object.defineProperty(MetaRowCollection.prototype, 'insertAt', {\n        enumerable: false\n    });\n\n    return MetaRowCollection;\n    \n}(TransactionCollection));\n\nexport default MetaRowCollection;\nexport { MetaRowCollection };","/**** base-column.js | BaseColumn ****/\n//==============================================================\nimport { ExtendError }      from 'logic-core';\nimport { Type }             from 'logic-core';\nimport { Util }             from 'logic-core';\nimport { MetaElement }      from 'logic-core';\nimport { MetaRegistry }     from 'logic-core';\n\nvar BaseColumn  = (function (_super) {\n    /**\n     * 컬럼 (최상위)\n     * @abstract\n     * @constructs BaseColumn\n     * @extends MetaElement\n     * @param {string} p_name 아이템명\n     * @param {BaseEntity} [p_entity] 소유 BaseEntity\n     */\n    function BaseColumn(p_name, p_entity) {\n        _super.call(this, p_name);\n\n        var $key            = p_name;\n        var $value          = null;\n        var $alias          = null;\n        var _entity         = null;\n        var _valueTypes     = this._type._VALUE_TYPE || [];\n        var _default        = '';\n        var caption         = '';\n        /**\n         * 컬럼 컬렉션의 키\n         * @member {string} BaseColumn#$key\n         * @readonly\n         * @private\n         */\n        Object.defineProperty(this, '$key', {\n            get: function() { return $key; },\n            set: function(nVal) { \n                if (_isString(nVal)) $key = nVal;\n            },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * 별칭 내부값\n         * @member {string | number | boolean} BaseColumn#$value\n         * @readonly\n         * @private\n         */\n        Object.defineProperty(this, '$value', {\n            get: function() { return $value; },\n            set: function(nVal) { $value = nVal; },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * 별칭 내부값\n         * @member {string} BaseColumn#$alias\n         * @readonly\n         * @private\n         */\n        Object.defineProperty(this, '$alias', {\n            get: function() { return $alias; },\n            set: function(nVal) { \n                if (_isString(nVal)) $alias = nVal;\n            },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * 컬럼 소유 엔티티\n         * @member {BaseEntity} BaseColumn#_entity\n         * @protected\n         */\n        Object.defineProperty(this, '_entity', {\n            get: function() { return _entity; },\n            set: function(nVal) { \n                if (typeof nVal !== 'undefined' && !(nVal instanceof MetaElement && nVal.instanceOf('BaseEntity'))) {\n                    throw new ExtendError(/EL05111/, null, [this.constructor.name]);\n                }\n                _entity = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * value 타입 설정\n         * @member {any} BaseColumn#_valueTypes\n         * @protected\n         */\n        Object.defineProperty(this, '_valueTypes', {\n            get: function() { return _valueTypes; },\n            set: function(nVal) { \n                var arr = [];\n                if (!Array.isArray(nVal)) arr.push(nVal);\n                else arr = nVal;\n                _valueTypes = arr;  \n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 컬럼명, _name 과 동일\n         * @member {string} BaseColumn#columnName\n         */\n        Object.defineProperty(this, 'columnName', {\n            get: function() { return this._name; },\n            set: function(nVal) { \n                if (nVal === this.columnName) return;\n                if (typeof nVal !== 'string') throw new ExtendError(/EL05112/, null, [this.constructor.name, typeof nVal]); \n                if (_entity && _entity.columns.existColumnName(nVal)) throw new ExtendError(/EL05113/, null, [this.constructor.name, nVal]);\n                if (_entity && _entity.columns.existAlias(nVal)) throw new ExtendError(/EL05114/, null, [this.constructor.name, nVal]);\n                this._name = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 아이템 별칭 (bind전송시, 데이터 수신후 설정시 활용함)  \n         * 사용처 (기본값 = columnName )\n         * - Bind-command-ajax._execBind() : 데이터 전송시  \n         * - BaseBind.setValue(row) : 로우값 을 엔티티에 설정시  \n         * - getValue() : row 에 활용함  \n         * @member {string} BaseColumn#alias\n         */\n        Object.defineProperty(this, 'alias', {\n            get: function() { return typeof $alias === 'string' ? $alias : this.columnName; },\n            set: function(nVal) { \n                var entity = this._entity;\n                var oldKey = this.$alias || this.columnName;\n\n                if(typeof nVal !== 'string') throw new ExtendError(/EL05115/, null, [this.constructor.name, typeof nVal]); \n                if (entity && entity.columns.existAlias(nVal)) throw new ExtendError(/EL05116/, null, [this.constructor.name, nVal]);\n                \n                // 기존에 rows 에 기존 명칭이 존재하면 MetaRow 변경\n                if (this._entity) {\n                    for (var i = 0; i < this._entity.rows.count; i++) {\n                        var row = this._entity.rows[i];\n                        row._changeKey(oldKey, nVal);\n                    }\n                }\n                $alias = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        }); \n\n        /**\n         * 컬럼 value 의 기본값 (내부속성)\n         * @member {string | number | boolean} BaseColumn#default\n         */\n        Object.defineProperty(this, 'default', {\n            get: function() { return _default; },\n            set: function(nVal) { \n                if (this._valueTypes.length > 0) Type.matchType([this._valueTypes], nVal);\n                _default = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 컬럼 설명\n         * @member {string} BaseColumn#caption\n         */\n        Object.defineProperty(this, 'caption', {\n            get: function() { return caption; },\n            set: function(nVal) { \n                if(typeof nVal !== 'string') throw new ExtendError(/EL05117/, null, [this.constructor.name, typeof nVal]); \n                caption = nVal; \n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 컬럼 값\n         * @member {any} BaseColumn#value\n         */\n        Object.defineProperty(this, 'value', {\n            get: function() { \n                return $value === null ? this.default : $value; \n            },\n            set: function(nVal) {\n                if (this._valueTypes.length > 0) Type.matchType([this._valueTypes], nVal);\n                $value = nVal;\n            },\n            configurable: true,\n            enumerable: true\n        });\n\n        /**\n         * value 별칭\n         * this.value\n         * @member {object} BaseColumn#val\n         */\n        Object.defineProperty(this, 'val', {\n            get: function() { return this.value; },\n            set: function(nVal) { this.value = nVal;},\n            configurable: true,\n            enumerable: false\n        });\n\n        if (p_entity) _entity = p_entity;\n    }\n    Util.inherits(BaseColumn, _super);\n\n    BaseColumn._NS = 'Meta.Entity';     // namespace\n    BaseColumn._PARAMS = ['columnName', '_entity'];    // creator parameter\n    BaseColumn._KIND = 'abstract';\n    BaseColumn._VALUE_TYPE = [];\n\n    // local funciton\n    // function _isObject(obj) {    // 객체 여부\n    //     if (typeof obj === 'object' && obj !== null) return true;\n    //     return false;\n    // }\n    function _isString(obj) {    // 공백아닌 문자 여부\n        if (typeof obj === 'string' && obj.length > 0) return true;\n        return false;\n    }\n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.  \n     * \n     * @param {number} p_vOpt 가져오기 옵션  \n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)  \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)   \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    BaseColumn.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        // var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        if (vOpt < 2 && vOpt > -1 && this._entity) {\n            obj['_entity'] = MetaRegistry.createReferObject(this._entity);\n        }\n        obj['columnName'] = this.columnName;\n        if (this.default !== '') obj['default'] = this.default;\n        if (this.caption !== '') obj['caption'] = this.caption;            \n        if (this.$alias !== null) obj['$alias'] = this.$alias;\n        // if (this.__GET$alias(this) !== null) obj['alias'] = this.__GET$alias(this);\n        if (this.$value !== null) obj['$value'] = this.$value;\n        return obj;                        \n    };\n\n    /**\n     * 현재 객체를 초기화 후, 지정한 guid 타입의 객체를 사용하여 설정합니다.  \n     * \n     * @param {object} p_oGuid guid 타입의 객체\n     * @param {object} [p_origin] 현재 객체를 설정하는 원본 guid 객체\n     * 기본값은 p_oGuid 객체와 동일\n     */\n    BaseColumn.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        \n        var origin = p_origin ? p_origin : p_oGuid;\n        var entity;\n\n        if (p_oGuid['_entity']) {\n            entity = MetaRegistry.findSetObject(p_oGuid['_entity']['$ref'], origin);\n            if (!entity) throw new ExtendError(/EL05118/, null, [p_oGuid['name'], p_oGuid['_entity']['$ref']]);\n            this._entity = entity;\n        } \n        this.columnName = p_oGuid['columnName'];\n        if (p_oGuid['default']) this.default = p_oGuid['default'];\n        if (p_oGuid['caption']) this.caption = p_oGuid['caption'];\n        if (p_oGuid['$alias']) this.$alias = p_oGuid['$alias'];\n        if (p_oGuid['$value']) this.$value = p_oGuid['$value'];\n    };\n\n    /** \n     * 컬럼 복제\n     * \n     * @abstract \n     */\n    BaseColumn.prototype.clone = function() {\n        throw new ExtendError(/EL05119/, null, []);\n    };\n\n    return BaseColumn;\n\n}(MetaElement));\n\nexport default BaseColumn;\nexport { BaseColumn };","/**** meta-column.js | MetaColumn ****/\n//==============================================================\nimport { ExtendError }          from 'logic-core';\nimport { Type }                 from 'logic-core';\nimport { Util }                 from 'logic-core';\nimport { EventEmitter }         from 'logic-core';\nimport { BaseColumn }           from './base-column.js';\nimport { Message }              from './message-wrap.js';\n\nvar MetaColumn  = (function (_super) {\n    /**\n     * 메타 컬럼\n     * \n     * @constructs MetaColumn\n     * @extends BaseColumn\n     * @param {string} p_name 컬럼명\n     * @param {BaseEntity} [p_entity] 소유 BaseEntity\n     * @param {object} [p_property] \n     * @param {object} p_property.default 기본값\n     * @param {boolean} p_property.required 필수 유무\n     * @param {array<object.function>} p_property.constraints 제약조건\n     * @param {string | number | boolean} p_property.value value 값\n     * @param {function} p_property.getter 겟터\n     * @param {function} p_property.setter 셋터\n     * @param {string} p_property.alias 별칭\n     * @param {function} p_property.onChanged value 변경 후 이벤트\n     */\n    function MetaColumn(p_name, p_entity, p_property) {\n        _super.call(this, p_name, p_entity);\n\n        var $event          = new EventEmitter(this);\n        var required       = false;\n        // var optional      = false;\n        var constraints     = [];\n        var getter          = null;\n        var setter          = null;\n\n        /** \n         * 이벤트 객체\n         * @private\n         * @member {EventEmitter} MetaColumn#$event  \n         */\n        Object.defineProperty(this, '$event', {\n            get: function() { return $event; },\n            configurable: false,\n            enumerable: false,\n        });        \n\n        /**\n         * 컬럼 value의 필수 여부\n         * @member {boolean} MetaColumn#required\n         */\n        Object.defineProperty(this, 'required', {\n            get: function() { return required; },\n            set: function(nVal) { \n                if(typeof nVal !== 'boolean') throw new ExtendError(/EL05131/, null, [this.constructor.name, typeof nVal]);\n                required = nVal; \n            },\n            configurable: false,\n            enumerable: true\n        });\n        \n        /**\n         * 컬럼 제약 조건 \n         * \n         * @member {array<object | function>} MetaColumn#constraints\n         * \n         * @example\n         * var c = {\n         *  regex: /aa/,\n         *  msg: '매칭메세지',  // return이 true면 성공시 메세지, false 실패시 메세지\n         *  condition: ture     // 매칭시 성공\n         * };\n         */\n        Object.defineProperty(this, 'constraints', {\n            get: function() { return constraints; },\n            set: function(nVal) { \n                var list = [];\n                constraints = [];\n                if (Array.isArray(nVal))  list = nVal;\n                else list.push(nVal);\n                for(var i = 0; list.length > i; i++) {\n                    if (!(typeof list[i] === 'function' || (typeof list[i].regex === 'object' && typeof list[i].msg === 'string'))) {\n                        throw new ExtendError(/EL05133/, null, [this.constructor.name, i, typeof nVal.regex, typeof nVal.msg]);\n                    }\n                }\n                constraints = list;\n            },\n            configurable: false,\n            enumerable: true\n        });\n        \n        /**\n         * 컬럼 value  \n         * get 우선순위 : 1. getter 있는 경우, 2. 내부값 $value  \n         * set 우선순위 : 1. setter 있는 경우, 2. setter 리턴값이 없는 경우  \n         * REVIEW: 정리표 보고 수정 필요!!\n         * \n         * @member {string | number | boolean} MetaColumn#value\n         */\n        Object.defineProperty(this, 'value', {\n            get: function() { \n                var __val;\n                // 우선순위 : 1\n                if (typeof getter === 'function' ) {\n                    __val = getter.call(this);\n                    if (this.$value !== null && this.$value !== __val) {\n                        this._onChanged(__val, this.$value);    // 검사 및 이벤트 발생\n                        this.$value = __val;   // 내부에 저장\n                    }\n                // 우선순위 : 2\n                } else __val = this.$value;\n                /**\n                 * 분기 처리값 '__val' 없는경우 (null, undefined)\n                 *  - this.$value 초기화 되지 않은 경우\n                 *  - getter 리턴이 없는 경우\n                 */\n                // if (typeof __val === 'undefined' || __val === null) __val = this.$value || this.default;  REVIEW: 제거 대상\n                // if (typeof __val === 'undefined' || __val === null) __val = this.$value;  \n                if (typeof __val === 'undefined' || __val === null) __val = this.default;\n\n                return __val; \n            },\n            set:  function(val) { \n                var __val, _val;\n                var _oldVal = this.$value;\n                if (typeof setter === 'function' ) _val = setter.call(this, val);\n                // settter 의 리턴이 여부\n                __val = typeof _val !== 'undefined' ? _val : val;\n                __val = __val === null ? '' : __val;  // null 등록 오류 처리\n                if (this._valueTypes.length > 0) Type.matchType([this._valueTypes], __val);\n                this.$value = __val;\n                if (_oldVal !== __val && __val) this._onChanged(__val, _oldVal);    // 검사 및 이벤트 발생\n            },\n            configurable: true, // 재정의 허용\n            enumerable: true\n        });\n\n        /**\n         * 컬럼의 value 의 getter\n         * \n         * @member {Function} MetaColumn#getter\n         */\n        Object.defineProperty(this, 'getter', {\n            get: function() { return getter; },\n            set: function(val) { \n                if(typeof val !== 'function') throw new ExtendError(/EL05134/, null, [this.constructor.name, typeof val]);\n                getter = val;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 컬럼의 value 의 setter\n         * \n         * @member {Function} MetaColumn#setter\n         */\n        Object.defineProperty(this, 'setter', {\n            get: function() { return setter; },\n            set: function(val) { \n                if(typeof val !== 'function') throw new ExtendError(/EL05135/, null, [this.constructor.name, typeof val]);\n                setter = val;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 변경 이벤트 \n         * \n         * @event MetaColumn#onChanged \n         * @param {function}    p_callback\n         * @param {any}         p_callback.p_nValue 신규 value 값\n         * @param {any}         p_callback.p_oValue 기존 value 값\n         * @param {MetaColumn}  p_callback.p_this this(컬럼객체)\n         */\n        Object.defineProperty(this, 'onChanged', {\n            set: function(fun) {\n                this.$event.on('onChanged', fun);\n            },\n            configurable: false,\n            enumerable: false,\n        });\n        \n        if (p_property) this._load(p_property);\n    }\n    Util.inherits(MetaColumn, _super);\n\n    MetaColumn._NS = 'Meta.Entity';                                 // namespace\n    MetaColumn._PARAMS = ['columnName', '_entity'];    // creator parameter    // \n    MetaColumn._VALUE_TYPE = [String, Number, Boolean];\n\n    /**\n     * onChanged 이벤트를 발생합니다.\n     * \n     * @param {*} p_nValue 변경 값\n     * @param {*} p_oValue 기존 값\n     * @listens MetaColumn#_onChanged\n     */\n    MetaColumn.prototype._onChanged = function(p_nValue, p_oValue) {\n        p_oValue = p_oValue || this.$value;\n        this.$event.emit('onChanged', p_nValue, p_oValue, this);\n    };\n\n    /**\n     * 프로퍼티 객체로 속성 로드\n     * \n     * @param {object} p_property \n     */\n    MetaColumn.prototype._load = function(p_property) {\n        if (typeof p_property === 'object' ) {\n            for(var prop in p_property) {\n                // if (p_property.hasOwnProperty(prop) &&\n                if (Object.prototype.hasOwnProperty.call(p_property, prop) &&\n                ['_valueTypes', 'alias', 'default', 'caption', 'value', \n                    'required', 'constraints', 'getter', 'setter'].indexOf(prop) > -1) {\n                    this[prop] = p_property[prop];\n                }\n            }\n        }\n        if (['number', 'string', 'boolean'].indexOf(typeof p_property) > -1) {  \n            this['value'] = p_property; \n        }\n    };\n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.  \n     * \n     * @param {number} p_vOpt 가져오기 옵션  \n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)  \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)  \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    MetaColumn.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        // var vOpt = p_vOpt || 0;\n        // var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        if (!Type.deepEqual(this.$event.$storage, {})) {\n            obj['$storage'] = this.$event.$storage;\n        }\n        if (this.required !== false) obj['required'] = this.required;\n        // if (this.optional !== false) obj['optional'] = this.optional;\n        if (this.constraints.length > 0) obj['constraints'] = Util.deepCopy(this.constraints);\n        if (this.getter !== null) obj['getter'] = this.getter;\n        if (this.setter !== null) obj['setter'] = this.setter;\n        // if (this.value !== null) obj['value'] = this.value;    // 오버라이딩\n        return obj;                        \n    };\n\n    /**\n     * 현재 객체를 초기화 후, 지정한 guid 타입의 객체를 사용하여 설정합니다.  \n     * \n     * @param {object} p_oGuid guid 타입의 객체\n     * @param {object} [p_origin] 현재 객체를 설정하는 원본 guid 객체  \n     * 기본값은 p_oGuid 객체와 동일\n     */\n    MetaColumn.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        \n        // var origin = p_origin ? p_origin : p_oGuid;\n        // var entity;\n\n        if (p_oGuid['$storage']) {\n            this.$event.$storage = p_oGuid['$storage'];\n        }\n        if (p_oGuid['required']) this.required = p_oGuid['required'];\n        // if (p_oGuid['optional']) this.optional = p_oGuid['optional'];\n        if (p_oGuid['constraints']) this.constraints = p_oGuid['constraints'];\n        if (p_oGuid['getter']) this.getter = p_oGuid['getter'];\n        if (p_oGuid['setter']) this.setter = p_oGuid['setter'];\n        // if (p_oGuid['value']) this.value = p_oGuid['value'];\n    };\n\n    /**\n     * 컬럼 복제\n     * \n     * @param {BaseEntity} [p_entity] 지정한 엔티티로 복제\n     * @returns {MetaColumn}\n     */\n    MetaColumn.prototype.clone = function(p_entity) {\n        var clone;\n        // var rObj = this.getObject();\n        var entity = p_entity ? p_entity : this._entity;\n        \n        clone = new MetaColumn(this.columnName, entity);\n        \n        // BaseColumn\n        if (this['default'] !== '') clone.default = this['default'];\n        if (this['caption'] !== '') clone.caption = this['caption'];\n        if (this['$alias'] !== null) clone.$alias = this['$alias'];\n        if (this['$value'] !== null) clone.$value = this['$value'];\n        \n        // MetaColumn\n        if (this['required']) clone.required = this['required'];\n        // REVIEW: 배열 깊은 복제 해야 하는지 확인 필요\n        if (this['constraints']) clone.constraints = this['constraints'];\n        // REVIEW: 함수 깊은 복사 확인 필요\n        if (this['getter']) clone.getter = this['getter'];\n        if (this['setter']) clone.setter = this['setter'];\n        \n        return clone;\n    };\n\n    /**\n     * 제약조건을 추가  \n     * REVIEW: 정규식으로 반대 조건을 모두 나열 할수 있으므로, 항상 실패조건을 하는게 맞을지? 검토  \n     * \n     * @param {Regexp} p_regex 정규표현식\n     * @param {string} p_msg  regexp 입력시\n     * @param {string} [p_code] regexp 입력시\n     * @param {boolean} [p_condition] <기본값 false> 성공/실패 조건\n     * @param {boolean} p_condition.false 실패조건이며<기본값>, 정규식이 매칭이 안되야 한다.\n     * @param {boolean} p_condition.true 성공조건이며 정규식이 매칭이되어야 성공(통화)  \n     */\n    MetaColumn.prototype.addConstraint = function(p_regex, p_msg, p_code, p_condition) {\n        p_condition = typeof p_condition === 'boolean' ? p_condition : true;\n\n        var constraint = {};\n        if (typeof p_regex === 'function') {\n            this.constraints.push(p_regex);\n            return;\n        }\n        if (!(p_regex instanceof RegExp)) throw new ExtendError(/EL05136/, null, []);\n        if (!(typeof p_msg === 'string')) throw new ExtendError(/EL05137/, null, [typeof p_msg]);    \n\n        constraint.regex = p_regex;\n        constraint.msg = p_msg;\n        constraint.code = p_code;\n        constraint.condition = p_condition;\n        \n        this.constraints.push(constraint);\n    };\n    \n    /**\n     * 속성의 value에 유효성을 검사한다. (isNotnull, optional, constraints 기준)  \n     * TODO: number, boolean 형이 입력될경우, 기본 제약 조건 valueTypes 검사여부 검토?, 예외가 아니고 메세지로 표현?  \n     * \n     * @param {string | number | boolean} p_value 검사할 값\n     * @param {object} result 메세지는 참조(객체)형 으로 전달\n     * @param {number} p_option 1. required 참조 | 2: null검사 진행   |  3: null검사 무시\n     * @returns {object | undefined} 리턴값이 없으면 검사 성공\n     */\n    MetaColumn.prototype.valid = function(p_value) {\n        var result = {};\n        var match;\n        var value = null;\n        \n        result.value = p_value;\n        result.msg = '';\n        result.code = '';\n        p_value = p_value || '';\n\n        value = typeof p_value === 'number' ? String(p_value) : p_value;  // number 형 변환\n\n        // 1. 기본값 얻기 문자열로 변경\n        value = value.trim();\n\n        // 2. 통과조건 검사\n        if (this.required === false /* && this.optional === true */ && value.length === 0) return undefined;\n        if (this.required === false && this.constraints.length === 0 ) return undefined;\n        if (this.required === true && this.constraints.length === 0 && value.length > 0) return undefined;\n        \n        // 3. 실패조건 검사\n        if (this.required === true && this.constraints.length === 0 && value.length === 0) {\n            result.msg   = Message.get('EL05138', [this.name]);\n            result.code  = 0;\n            return result;\n        }\n\n        // 4. 제약조건 검사\n        for(var i = 0; this.constraints.length > i; i++) {\n            if (typeof this.constraints[i] === 'function') {\n                // return this.constraints[i].call(this, this, value);     // 함수형 제약조건 REVIEW: 제거대상 \n\n                // 함수는 false 또는 object 타입의 경우 실패로 처리\n                var funReturn = this.constraints[i].call(this, value, this);     // 함수형 제약조건\n                if (funReturn === true || typeof funReturn === 'undefined') continue;\n                \n                if (typeof funReturn === 'object' && typeof funReturn.msg === 'string') {\n                    result.msg   = funReturn.msg;\n                    result.code  = funReturn.code;\n                } else {\n                    result.msg = Message.get('EL05139', [this.name]);\n                }\n                return result;\n\n            } else {\n                match = value.match(this.constraints[i].regex);\n                if ((this.constraints[i].condition === false && match !== null) ||    // 실패 조건\n                    (this.constraints[i].condition === true && match === null)) {     // 성공 조건\n                    result.msg   = Message.get('EL0513A', [this.name, this.constraints[i].msg]);\n                    result.code  = this.constraints[i].code;\n                    return result;\n                }\n            }\n        }            \n        return undefined;\n    };\n\n    return MetaColumn;\n\n}(BaseColumn));\n\nexport default MetaColumn;\nexport { MetaColumn };","/**** object-column.js | ObjectColumn ****/\n//==============================================================\nimport { ExtendError }              from 'logic-core';\nimport { Util }                     from 'logic-core';\nimport { MetaRegistry }             from 'logic-core';\nimport { MetaObject }               from 'logic-core';\nimport { BaseColumn }               from './base-column.js';\n\nvar ObjectColumn  = (function (_super) {\n    /**\n     * 객체 컬럼\n     * \n     * @constructs ObjectColumn\n     * @extends BaseColumn\n     * @param {string} p_name 객체컬럼명\n     * @param {BaseEntity} [p_entity] 소유 BaseEntity\n     * @param {object} [p_property] \n     * @param {object} p_property.default 기본값\n     * @param {string} p_property.caption 설명\n     * @param {object} p_property.value value 값\n     * @param {string} p_property.alias 별칭\n     */\n    function ObjectColumn(p_name, p_entity, p_property) {\n        _super.call(this, p_name, p_entity);\n\n        if (p_property) this._load(p_property);\n    }\n    Util.inherits(ObjectColumn, _super);\n\n    ObjectColumn._NS = 'Meta.Entity';     // namespace\n    ObjectColumn._PARAMS = ['columnName', '_entity', '_property'];    // creator parameter\n    ObjectColumn._VALUE_TYPE = [{}];    // union type\n\n\n    /**\n     *  프로퍼티 객체로 속성 로드\n     * \n     * @param {object} p_prop 속성\n     */\n    ObjectColumn.prototype._load = function(p_prop) {\n        if (typeof p_prop === 'object' ) {\n            for(var prop in p_prop) {\n                // if (p_property.hasOwnProperty(prop) &&\n                if (Object.prototype.hasOwnProperty.call(p_prop, prop) &&\n                    ['default', 'caption', 'value', 'alias'].indexOf(prop) > -1) {\n                    this[prop] = p_prop[prop];\n                }\n            }\n        } else throw new ExtendError(/EL05121/, null, ['p_prop', 'object']);\n    };\n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.  \n     * \n     * @param {number} p_vOpt 가져오기 옵션  \n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)  \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)  \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    ObjectColumn.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n        var defValue = this.default;\n        var $value = this.$value;\n\n        if (defValue instanceof MetaObject) {\n            if (MetaRegistry.hasGuidObject(defValue, owned)) {\n                obj['default'] = MetaRegistry.createReferObject(defValue);\n            } else obj['default'] = defValue.getObject(vOpt, owned);\n        }\n\n        // $value 재정의\n        if ($value instanceof MetaObject) {\n            if (MetaRegistry.hasGuidObject($value, owned)) {\n                obj['$value'] = MetaRegistry.createReferObject($value);\n            } else obj['$value'] = $value.getObject(vOpt, owned);\n        }\n        return obj;                        \n    };\n\n    /**\n     * 현재 객체를 guid 객체로 설정한다.  \n     * override  \n     * \n     * @param {object} p_oGuid 레벨 옵션\n     * @param {object} p_origin 설정 원본 객체\n     */\n    ObjectColumn.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        \n        var origin = p_origin ? p_origin : p_oGuid;\n        var elem;\n\n        // 주의! defuault 설정후 value 설정 :getObject() 와 동일\n        elem = p_oGuid['default'];\n        if (typeof elem === 'object' && elem !== null) {\n            if (MetaRegistry.isGuidObject(elem)) {\n                var obj = MetaRegistry.createMetaObject(elem, origin);\n                obj.setObject(elem, origin);\n                this['default'] = obj;\n            \n            } else if (elem['$ref']) {\n                var meta = MetaRegistry.findSetObject(elem['$ref'], origin);\n                if (!meta) throw new ExtendError(/EL05122/, null, [elem['$ref']]);\n                this['default'] = meta;\n            }\n        }\n\n        elem = p_oGuid['$value'];\n        if (typeof elem === 'object' && elem !== null) {\n            if (MetaRegistry.isGuidObject(elem)) {\n                var obj2 = MetaRegistry.createMetaObject(elem, origin);\n                obj2.setObject(elem, origin);\n                this.$value = obj2;\n            \n            } else if (elem['$ref']) {\n                var meta2 = MetaRegistry.findSetObject(elem['$ref'], origin);\n                if (!meta2) throw new ExtendError(/EL05123/, null, [elem['$ref']]);\n                this.$value = meta2;\n            }\n        }\n    };\n\n    /**\n     * 객체 복제  \n     * override  \n     * \n     * @param {BaseEntity} [p_entity] 지정한 엔티티로 복제\n     * @returns {ObjectColumn}\n     */\n    ObjectColumn.prototype.clone = function(p_entity) {\n        var clone;\n        var entity = p_entity ? p_entity : this._entity;\n        \n        clone = new ObjectColumn(this.columnName, entity);\n\n        if (this['$value']) clone.$value = this.$value;\n        if (this['$alias']) clone.$alias = this['$alias'];\n        if (this['default']) clone.default = this['default'];\n        if (this['caption']) clone.caption = this['caption'];\n\n        return clone;\n    };\n\n    return ObjectColumn;\n\n}(BaseColumn));\n\nexport default ObjectColumn;\nexport { ObjectColumn };","/**** base-column-collection.js | BaseColumnCollection ****/\n//==============================================================\nimport { ExtendError }          from 'logic-core';\nimport { Type }                 from 'logic-core';\nimport { Util }                 from 'logic-core';\nimport { MetaElement }          from 'logic-core';\nimport { PropertyCollection }   from 'logic-core';\nimport { BaseColumn }           from './base-column.js';\n\nvar BaseColumnCollection  = (function (_super) {\n    /**\n     * 컬럼 컬렉션 (최상위)\n     * @abstract\n     * @constructs BaseColumnCollection\n     * @extends PropertyCollection\n     * @param {object} p_owner 소유자 \n     * @param {BaseColumn} [p_baseType] 기본 컬럼 타입\n     */\n    function BaseColumnCollection(p_owner, p_baseType) {\n        _super.call(this, p_owner);\n        \n        var _baseType;\n\n        /**\n         * 기본 컬럼 타입\n         * @member {BaseColumn} _L.Meta.Entity.BaseColumnCollection#_baseType\n         */\n        Object.defineProperty(this, '_baseType', {\n            get: function() { return _baseType; },\n            set: function(nVal) { \n                if (!(typeof nVal === 'function')) throw new ExtendError(/EL05141/, null, [this.constructor.name, typeof nVal]);\n                // if (!(new nVal('temp') instanceof BaseColumn)) throw new ExtendError('ES032', ['_baseType', 'BaseColumn']);\n                if (!(Type.isProtoChain(nVal, BaseColumn))) throw new ExtendError(/EL05142/, null, [this.constructor.name]);\n                _baseType = nVal;\n            },\n            enumerable: false,\n            configurable: false,\n        });\n\n        /**\n         * @member {BaseColumn} BaseColumnCollection#baseType\n         */\n       this._baseType = p_baseType;\n       // this._baseType = p_baseType || MetaColumn;\n\n        // 예약어 등록 \n        this.$KEYWORD = ['_baseType', '_ownerIsEntity', 'initValue', 'existAlias'];\n        this.$KEYWORD = ['existColumnName', 'alias', 'addValue'];\n    }\n    Util.inherits(BaseColumnCollection, _super);\n    \n    BaseColumnCollection._NS = 'Meta.Entity';                   // namespace\n    BaseColumnCollection._PARAMS = ['_owner', '_baseType'];     // creator parameter\n    BaseColumnCollection._KIND = 'abstract';\n\n\n    /**\n     * this._onwer 이 엔티티 여부를 확인합니다.\n     * @returns {boolean}\n     */\n    BaseColumnCollection.prototype._ownerIsEntity = function() {\n        return this._owner instanceof MetaElement && this._owner.instanceOf('BaseEntity');\n    };\n    Object.defineProperty(BaseColumnCollection.prototype, '_ownerIsEntity', {\n        enumerable: false\n    });\n\n\n    /**\n     * 컬렉션에 요소를 추가할 때 설정되는 기본 기술자입니다.\n     * @protected\n     * @param {number} p_idx 인덱스 번호\n     */\n    BaseColumnCollection.prototype._getPropDescriptor = function(p_idx, p_enum) {\n        if (typeof p_enum !== 'boolean') p_enum = true;\n        return {\n            get: function() { return this.$elements[p_idx]; },\n            set: function() {\n                throw new ExtendError(/EL05148/, null, []);\n                // var oVal = this.$elements[p_idx];\n                // if (this._elemTypes.length > 0) Type.matchType([this._elemTypes], nVal);\n                // this._onChanging(p_idx, nVal, oVal);  // before event\n                // this.$elements[p_idx] = nVal;\n                // this._onChanged(p_idx, nVal, oVal);   // after event\n            },\n            configurable: true,\n            enumerable: p_enum,\n        };\n    };\n    Object.defineProperty(BaseColumnCollection.prototype, '_getPropDescriptor', {\n        enumerable: false\n    });\n\n    /**\n     * 컬럼을 컬렉션에 추가\n     * @param {string} p_name 컬럼명\n     * @param {any} p_value 컬럼객체\n     * @returns {number} 추가한 index \n     */\n    BaseColumnCollection.prototype.add = function(p_name, p_value) {\n        \n        if (this._ownerIsEntity() && this._owner.rows.count > 0) throw new ExtendError(/EL05143/, null, [this._owner.rows.count]);\n        if (this.existColumnName(p_name)) throw new ExtendError(/EL05144/, null, [this.constructor.name, p_name]);\n        if (this.existAlias(p_name)) throw new ExtendError(/EL05145/, null, [this.constructor.name, p_name]); \n        \n        return _super.prototype.add.call(this, p_name, p_value);\n    };\n    Object.defineProperty(BaseColumnCollection.prototype, 'add', {\n        enumerable: false\n    });\n\n    /**\n     * 컬럼을 컬렉션에서 삭제\n     * @param {number} p_idx \n     * @returns {boolean}\n     */\n    BaseColumnCollection.prototype.removeAt = function(p_idx) {\n        if (this._owner.rows.count > 0) throw new ExtendError(/EL05146/, null, [this._owner.rows.count]);\n        return _super.prototype.removeAt.call(this, p_idx); \n    };\n    Object.defineProperty(BaseColumnCollection.prototype, 'removeAt', {\n        enumerable: false\n    });\n\n    /**\n     * 컬렉에 모든 value 값을 default 값으로 초기화\n     */\n    BaseColumnCollection.prototype.initValue  = function() {\n        for (var i = 0; this.count > i; i++) {\n            this[i].value = this[i].default;\n        }\n    };\n    Object.defineProperty(BaseColumnCollection.prototype, 'initValue', {\n        enumerable: false\n    });\n\n    /**\n     * 컬렉션에 별칭 이름(키)가 존재하는지 검사\n     * @param {string} p_key 이름\n     * @returns {boolean}\n     */\n    BaseColumnCollection.prototype.existAlias  = function(p_key) {\n        for (var i = 0; this.count > i; i++) {\n            if (this[i].alias === p_key) return true;\n        }\n        return false;\n    };\n    Object.defineProperty(BaseColumnCollection.prototype, 'existAlias', {\n        enumerable: false\n    });\n\n    /**\n     * 컬렉션에 컬럼 이름(키)이 존재하는지 검사\n     * @param {string} p_key 이름\n     * @returns {boolean}\n     */\n    BaseColumnCollection.prototype.existColumnName  = function(p_key) {\n        for (var i = 0; this.count > i; i++) {\n            if (this[i].columnName === p_key) return true;\n        }\n        return false;\n    };\n    Object.defineProperty(BaseColumnCollection.prototype, 'existColumnName', {\n        enumerable: false\n    });\n\n    /**\n     * 별칭에 대한 컬럼 객체 얻기\n     * @param {string} p_key 키\n     * @returns {BaseColumn | undefined}\n     */\n    BaseColumnCollection.prototype.alias  = function(p_key) {\n        for (var i = 0; this.count > i; i++) {\n            if (this[i].alias === p_key) return this[i];\n        }\n        return undefined;\n    };\n    Object.defineProperty(BaseColumnCollection.prototype, 'alias', {\n        enumerable: false\n    });\n\n    /** @abstract */\n    BaseColumnCollection.prototype.addValue = function() {\n        throw new ExtendError(/EL05147/, null, []);\n    };\n    Object.defineProperty(BaseColumnCollection.prototype, 'addValue', {\n        enumerable: false\n    });\n\n    return BaseColumnCollection;\n\n}(PropertyCollection));\n\nexport default BaseColumnCollection;\nexport { BaseColumnCollection };","/**** collection-meta-view-column.js | MetaViewColumnCollection ****/\n//==============================================================\nimport { ExtendError }              from 'logic-core';\nimport { Type }                     from 'logic-core';\nimport { Util }                     from 'logic-core';\nimport { MetaElement }              from 'logic-core';\nimport { BaseColumn }               from './base-column.js';\nimport { MetaRegistry }             from 'logic-core';\nimport { MetaColumn }               from './meta-column.js';\nimport { BaseColumnCollection }     from './base-column-collection.js';\n\nvar MetaViewColumnCollection  = (function (_super) {\n    /**\n     * 메타 뷰 컬럼 컬렉션\n     * \n     * @constructs MetaViewColumnCollection\n     * @extends BaseColumnCollection\n     * @param {object} p_owner 소유자\n     */\n    function MetaViewColumnCollection(p_owner) {\n        _super.call(this, p_owner, MetaColumn);\n\n        /** \n         * 참조하는 엔티티 목록\n         * \n         * @readonly\n         * @member {array<BaseEntity>} MetaViewColumnCollection#_refEntities\n         */\n        Object.defineProperty(this, '_refEntities', {\n            get: function() { \n                var arr = [];\n                for (var i = 0; i < this.count; i++) {\n                    var column = this[i];\n                    if (this._owner !== column._entity && arr.indexOf(column._entity) < 0) {\n                        arr.push(column._entity);\n                    }\n                }\n                return arr; \n            },\n            configurable: false,\n            enumerable: false\n        });\n\n        // 예약어 등록 \n        this.$KEYWORD = ['_refEntities', 'addValue', 'addEntity'];\n    }\n    Util.inherits(MetaViewColumnCollection, _super);\n\n    MetaViewColumnCollection._NS = 'Meta.Entity';                       // namespace\n    MetaViewColumnCollection._PARAMS = ['_owner', '_baseCollection'];   // creator parameter\n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.  \n     * \n     * @param {number} p_vOpt 가져오기 옵션  \n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)  \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)  \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    MetaViewColumnCollection.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        \n        if (vOpt === 0) {   // 참조로 바꿈\n            for (var i = 0; i < obj['_elem'].length; i++) {\n                var elem = obj['_elem'][i];\n                if (vOpt < 2 && vOpt > -1 && elem['_entity'] && elem['_entity']['$ref'] !== this._owner._guid) {\n                    var rObj = MetaRegistry.createReferObject(elem); // 소유자가 아니면 참조 리턴\n                    obj['_elem'][i] = rObj;\n                }\n            }\n        }\n        return obj;                  \n    };\n    Object.defineProperty(MetaViewColumnCollection.prototype, 'getObject', {\n        enumerable: false\n    });\n\n    /**\n     * 뷰컬렉션에 컬럼을 추가(등록/설정)한다.  \n     * - entity가 있는 컬럼을 추가할 경우 : 참조가 추가되는 것이다.  \n     *      + collection 존재할 경우 최상위 컬렉션에도 참조가 등록된다.  \n     * - entity가 없는 컬럼을 추가할 경우 : 자신을 소유자로 등록한다.  \n     * - collection에 컬럼이 존재할 경우 : columns 객체는 무시되고, 리턴한 객체의 참조를 등록한다.  \n     * - collection에 컬럼이 없을 경우 : 컬렉션에 entity를 설정한다.(참조 재귀호출시 최상위만 등록됨)  \n     *      + collection 존재할 경우 entity 항상 존재한다.  \n     * - entity가 있는 컬럼을 추가할 경우 : 참조가 추가되는 것이다.  \n     * - entity가 없는 컬럼을 추가할 경우 : 자신을 소유자로 등록한다.  \n     * - collection에 컬럼이 존재할 경우 : columns 객체는 무시되고, 리턴한 객체의 참조를 등록한다.  \n     * - collection에 컬럼이 없을 경우 : 컬렉션에 entity를 설정한다.(참조 재귀호출시 최상위만 등록됨)  \n     * \n     * @param {string | MetaColumn} p_column 컬럼\n     * @param {BaseColumnCollection} [p_refCollection] 참조컬렉션\n     */\n    MetaViewColumnCollection.prototype.add  = function(p_column, p_refCollection) {\n        var collection;\n        var key;\n        var column;\n\n        if (p_refCollection && !(p_refCollection instanceof BaseColumnCollection)) {\n            throw new ExtendError(/EL05161/, null, []);\n        }\n\n        if (p_column instanceof BaseColumn) {\n            key = p_column.columnName;\n            column = p_column;\n        } else if (typeof p_column === 'string') {\n            key = p_column;\n            column = new this._baseType(key, this._owner);\n        } else throw new ExtendError(/EL05162/, null, [typeof p_column]);\n\n        // baseCollection & refCollection 존재하는 경우\n        if (p_refCollection instanceof BaseColumnCollection) {                                  \n            collection = p_refCollection;\n        } else if (this._owner && this._owner._baseEntity && this._owner._baseEntity.columns) { \n            collection = this._owner._baseEntity.columns;\n        }\n        \n        // 컬렉션이 있는 경우 : _entity 항상 존재\n        if (collection) {\n            if (collection.contains(collection[key])) {\n                column = collection[key];   // 기존에 존재하면 참조 가져옴\n            } else {                                                \n                collection.add(p_column);      // 없으면 컬렉션에 추가(owner 설정됨)\n                column = collection[key];\n            }\n        }\n        if (!column._entity && this._ownerIsEntity()) column._entity = this._owner;\n        // if (!column._entity) column._entity = this._owner;\n\n        return _super.prototype.add.call(this, key, column);\n    };\n    Object.defineProperty(MetaViewColumnCollection.prototype, 'add', {\n        enumerable: false\n    });\n\n    /**\n     *  이름과 값으로 컬럼 생성하여 컬렉션에 추가\n     * \n     * @param {string} p_name 컬럼명\n     * @param {string | number | boolean} p_value 값\n     * @param {BaseColumnCollection} [p_refCollection]\n     * @returns {MetaColumn}\n     */\n    MetaViewColumnCollection.prototype.addValue  = function(p_name, p_value, p_refCollection) {\n        var item;\n        var property = {};\n        var _valueTypes = this._baseType._VALUE_TYPE;\n\n        if (typeof p_name !== 'string') throw new ExtendError(/EL05163/, null, [typeof p_name]);\n        if (_valueTypes.length > 0) Type.matchType([_valueTypes], p_value);\n        \n        property = { value: p_value };\n        item = new this._baseType(p_name, null, property);\n\n        return this[this.add(item, p_refCollection)];\n    };\n    Object.defineProperty(MetaViewColumnCollection.prototype, 'addValue', {\n        enumerable: false\n    });\n\n    /**\n     * 엔티티의 모든 컬럼을 추가\n     * \n     * @param {BaseEntity} p_entity \n     */\n    MetaViewColumnCollection.prototype.addEntity  = function(p_entity) {\n        if (typeof p_entity !== 'undefined' && !(p_entity instanceof MetaElement && p_entity.instanceOf('BaseEntity'))) {\n            throw new ExtendError(/EL05164/, null, []);\n        }\n\n        for (var i = 0; p_entity.columns.count > i; i++) {\n            this.add(p_entity.columns[i]);\n        }\n    };\n    Object.defineProperty(MetaViewColumnCollection.prototype, 'addEntity', {\n        enumerable: false\n    });\n    \n    return MetaViewColumnCollection;\n\n}(BaseColumnCollection));\n\nexport default MetaViewColumnCollection;\nexport { MetaViewColumnCollection };","/**** collection-meta-table-column.js | MetaTableColumnCollection ****/\n//==============================================================\nimport { ExtendError }              from 'logic-core';\nimport { Type }                     from 'logic-core';\nimport { Util }                     from 'logic-core';\nimport { BaseColumn }               from './base-column.js';\nimport { MetaColumn }               from './meta-column.js';\nimport { BaseColumnCollection }     from './base-column-collection.js';\n\nvar MetaTableColumnCollection  = (function (_super) {\n    /**\n     * 테이블 컬럼 컬렉션    \n     * 참조 컬럼은 독립적으로 가진다 (참조 금지)  \n     * \n     * @constructs MetaTableColumnCollection\n     * @extends BaseColumnCollection\n     * @param {object} p_owner 소유자\n     */\n    function MetaTableColumnCollection(p_owner) {\n        _super.call(this, p_owner, MetaColumn);\n\n        // 예약어 등록 \n        this.$KEYWORD = ['addValue'];\n    }\n    Util.inherits(MetaTableColumnCollection, _super);\n\n    MetaTableColumnCollection._NS = 'Meta.Entity';          // namespace\n    MetaTableColumnCollection._PARAMS = ['_owner'];         // creator parameter\n\n    /**\n     * 테이블 컬렉션에 컬럼 추가\n     * \n     * @param {string | BaseColumn} p_column 컬럼명, 매타컬럼\n     * @returns {number} 등록한 index\n     */\n    MetaTableColumnCollection.prototype.add  = function(p_column) {\n        var column;\n        var key;\n\n        if (typeof p_column === 'string') {      \n            key  = p_column;\n            if (this._ownerIsEntity()) column = new this._baseType(key, this._owner);\n            else column = new this._baseType(key);\n            \n        } else if (p_column instanceof BaseColumn) {\n            key  = p_column.columnName;\n            if (this._ownerIsEntity() && p_column._owner !== this._owner) {\n                column = p_column.clone(this._owner);\n            } else column = p_column;\n            // if (this._ownerIsEntity()) column = p_column.clone(this._owner);\n            // else column = p_column.clone();\n            \n        } else {\n            throw new ExtendError(/EL05151/, null, [typeof p_column]); \n        }\n\n        return _super.prototype.add.call(this, key, column);\n    };\n    Object.defineProperty(MetaTableColumnCollection.prototype, 'add', {\n        enumerable: false\n    });\n\n    /**\n     * 이름과 값으로 컬렉션에 추가 (내부에서 생성)\n     * \n     * @param {string} p_name 컬럼명\n     * @param {string | number | boolean} p_value 값\n     * @returns {BaseColumn} 추가한 컬럼 객체\n     */\n    MetaTableColumnCollection.prototype.addValue  = function(p_name, p_value) {\n        var item;\n        var property = {};\n        var _valueTypes = this._baseType._VALUE_TYPE;\n\n        if (typeof p_name !== 'string') throw new ExtendError(/EL05152/, null, [typeof p_name]);\n        if (_valueTypes.length > 0) Type.matchType([_valueTypes], p_value);\n        \n        property = { value: p_value };\n        item = new this._baseType(p_name, this._owner, property);\n\n        return this[this.add(item)];\n    };\n    Object.defineProperty(MetaTableColumnCollection.prototype, 'addValue', {\n        enumerable: false\n    });\n\n    return MetaTableColumnCollection;\n\n}(BaseColumnCollection));\n\n\nexport default MetaTableColumnCollection;\nexport { MetaTableColumnCollection };","/**** base-entity.js | BaseEntity ****/\n//==============================================================\nimport { ExtendError }          from 'logic-core';\nimport { Util }                 from 'logic-core';\nimport { MetaElement }          from 'logic-core';\nimport { MetaRegistry }         from 'logic-core';\nimport { ISerialize }           from 'logic-core';\nimport { IGroupControl }        from './i-control-group.js';\nimport { ISchemaControl }       from './i-control-schema.js';\nimport { IImportControl }       from './i-control-import.js';\nimport { IExportControl }       from './i-control-export.js';\nimport { MetaRowCollection }    from './collection-meta-row.js';\nimport { MetaRow }              from './meta-row.js';\nimport { MetaColumn }           from './meta-column.js';\n\nvar BaseEntity  = (function (_super) {\n    /**\n     * 기본 엔티티 (최상위)\n     * \n     * @abstract\n     * @constructs BaseEntity\n     * @extends MetaElement\n     * @implements {IGroupControl}\n     * @implements {ISchemaControl}\n     * @implements {IImportControl}\n     * @implements {IExportControl}\n     * @implements {ISerialize}\n     * @param {string} p_name \n     */\n    function BaseEntity(p_name) {\n        _super.call(this, p_name);\n\n        var _metaSet    = null;\n        var rows        = new MetaRowCollection(this);\n\n        /**\n         * 엔티티의 아이템(속성) 컬렉션\n         * \n         * @member {MetaSet} BaseEntity#_metaSet\n         */\n        Object.defineProperty(this, '_metaSet', {\n            get: function() { return _metaSet; },\n            set: function(nVal) { \n                if (!(nVal instanceof MetaElement && nVal.instanceOf('MetaSet'))) {\n                    throw new ExtendError(/EL05311/, null, [this.constructor.name]);\n                }\n                _metaSet = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 엔티티의 아이템(속성) 컬렉션\n         * \n         * @readonly\n         * @member {BaseColumnCollection} BaseEntity#columns\n         */\n        Object.defineProperty(this, 'columns', {\n            get: function() { \n                throw new ExtendError(/EL05312/, null, [this.constructor.name]);\n            },\n            configurable: true, // 하위에서 재정의 해야함\n            enumerable: true\n        });\n        \n        /**\n         * columns 별칭\n         * \n         * @member {object} BaseEntity#cols\n         */\n        Object.defineProperty(this, 'cols', {\n            get: function() { return this.columns; },\n            set: function(nVal) { this.columns = nVal;},\n            configurable: true,\n            enumerable: false\n        });\n\n        /**\n         * 엔티티의 데이터(로우) 컬렉션\n         * \n         * @readonly\n         * @member {MetaRowCollection} BaseEntity#rows\n         */\n        Object.defineProperty(this, 'rows', {\n            get: function() { return rows; },\n            configurable: false,\n            enumerable: true\n        });\n\n        Util.implements(BaseEntity, this);      // strip:\n    }\n    Util.inherits(BaseEntity, _super);\n    \n    BaseEntity._UNION = [IGroupControl, ISchemaControl, IImportControl, IExportControl, ISerialize];\n    BaseEntity._NS = 'Meta.Entity';         // namespace\n    BaseEntity._PARAMS = ['name'];          // creator parameter\n    BaseEntity._KIND = 'abstract';\n\n    \n    // local funciton\n    function _isObject(obj) {    // 객체 여부\n        if (typeof obj === 'object' && obj !== null) return true;\n        return false;\n    }\n    function _isString(obj) {    // 공백아닌 문자 여부\n        if (typeof obj === 'string' && obj.length > 0) return true;\n        return false;\n    }\n    function _isSchema(obj) {    // 객체 여부\n        if (!_isObject(obj)) return false;\n        if (_isObject(obj['columns']) || _isObject(obj['rows'])) return true;\n        return false;\n    }\n\n    \n    /**\n     * 엔티티 스카마 객체로 변환\n     * \n     * @param {object} p_oGuid getObject()로 얻은 객체\n     * @static\n     * @returns {object}\n     */\n    BaseEntity.transformSchema  = function(p_oGuid) {\n        var obj = {};\n        var oGuid = p_oGuid;\n\n        try {\n            if (!_isSchema(p_oGuid)) { \n                throw new ExtendError(/EL05331/, null, [p_oGuid.columns, p_oGuid.rows]);\n            }\n\n            if (oGuid['_guid']) obj['_guid'] = oGuid['_guid'];\n            if (oGuid['_baseEntity']) obj['_baseEntity'] = oGuid['_baseEntity'];\n            obj['columns'] = $transformColumn(oGuid['columns'], oGuid);\n            obj['rows'] = $transformRow(oGuid['rows'], oGuid);\n            \n        } catch (error) {\n            throw new ExtendError(/EL05332/, error, []);\n        }\n        \n        return obj;\n\n        // inner funciton\n        function $transformColumn(oGuid, origin) {\n            var obj = {};\n            for (var i = 0; i < oGuid['_elem'].length; i++) {\n                var column = oGuid['_elem'][i];\n                var key = oGuid['_key'][i];\n                obj[key] = {};\n                if (column['$ref']) obj[key] = column;\n                else {\n                    if (column['_entity'] && column['_entity']['$ref'] !== origin['_guid']) {\n                        obj[key]._entity = {};\n                        obj[key]._entity['$ref'] = column['_entity']['$ref'];\n                    } \n                    if (typeof column._guid !== 'undefined') obj[key]._guid = column['_guid'];\n                    if (typeof column.default !== 'undefined') obj[key].default = column['default'];\n                    if (typeof column.caption !== 'undefined') obj[key].caption = column['caption'];            \n                    if (typeof column.required !== 'undefined') obj[key].required = column['required'];\n                    // if (column.optional) obj[key].optional = column['optional'];\n                    if (Array.isArray(column.constraints)) {\n                        obj[key]['constraints'] = Util.deepCopy(column['constraints']);\n                    }\n                    if (typeof column.getter !== 'undefined') obj[key].getter = column['getter'];\n                    if (typeof column.setter !== 'undefined') obj[key].setter = column['setter'];\n                    if (typeof column.$alias !== 'undefined') obj[key].alias = column['$alias'];\n                    if (typeof column.$value !== 'undefined') obj[key].value = column['$value'];\n                }\n            }\n            obj['$key'] = oGuid['_key'];\n            return obj;\n        }\n        function $transformRow(oGuid) {\n            var arr = [];\n            for (var i = 0; i < oGuid['_elem'].length; i++) {\n                var rows = oGuid['_elem'][i];\n                var obj = {};\n                for (var ii = 0; ii < rows['_elem'].length; ii++) {\n                    var row = rows['_elem'][ii];\n                    var key = rows['_key'][ii];\n                    obj[key] = row;\n                }\n                arr.push(obj);\n            }\n            return arr;\n        }\n    };\n    \n    /**\n     * 엔티티 대상에 로우 만들기\n     * \n     * @protected\n     * @param {BaseEntity} p_entity 빌드 대상 엔티티\n     * @param {function} p_callback 로우 대상 조회 콜백\n     * @param {array<string>} p_items 선택할 로우명 , [] 또는 undefined 시 전체 선택    TODO: 필수 선택 여부 확인 필요\n     * @returns {BaseEntity}\n     */\n    BaseEntity.prototype._buildEntity = function(p_entity, p_callback, p_items) {\n        var orignal = this.clone();\n        var columnName;\n        var column;\n\n        try {\n            // columns 구성\n            if (p_items.length === 0) {\n                for (var i = 0; i < this.columns.count; i++) {\n                    p_entity.columns.add(this.columns[i]);  // 참조로 등록\n                }\n\n            } else {\n                for (var j = 0; j < p_items.length; j++) {\n                    columnName = p_items[j];\n                    if (!_isString(columnName)) throw new ExtendError(/EL05321/, null, [i, typeof columnName]);\n                    if (!this.columns.exists(columnName)) throw new ExtendError(/EL05322/, null, [columnName]);\n                    \n                    column = this.columns.alias(columnName);\n                    p_entity.columns.add(column);\n                }\n            }\n\n            // rows 등록\n            for (var k = 0; k < orignal.rows.count; k++) {  \n                if (!p_callback || (typeof p_callback === 'function' \n                    && p_callback.call(this, orignal.rows[k], k, p_entity))) {\n                    p_entity.rows.add($createRow(orignal.rows[k]));\n                } \n            }\n            return p_entity;\n            \n        } catch (error) {\n            throw new ExtendError(/EL05323/, error, []);\n        }\n\n        // inner function\n        function $createRow(row) {\n            var alias, newRow;\n            newRow = p_entity.newRow();\n            for (var m = 0; m < p_entity.columns.count; m++) {\n                alias = p_entity.columns[m].alias;\n                newRow[alias] = row[alias];\n            }\n            return newRow;\n        }\n    };\n\n    /**\n     * BaseEntity 읽기(로드)\n     * \n     * @protected\n     * @param {BaseEntity} p_object 대상 엔티티\n     * @param {number} p_option 옵션\n     */\n    BaseEntity.prototype._readEntity = function(p_entity, p_option) {\n        var opt = p_option || 3;\n        var _this = this;\n\n        try {\n            if (!(p_entity instanceof BaseEntity)) throw new ExtendError(/EL05324/, null, []);\n            if (typeof opt !== 'number') throw new ExtendError(/EL05325/, null, [typeof opt]);\n        \n            if (opt % 2 === 1) $loadColumn(); // opt: 1, 3\n            if (Math.floor(opt / 2) >= 1) $loadRow(); // opt: 2, 3\n            return;\n            \n        } catch (error) {\n            throw new ExtendError(/EL05326/, error, [opt]);\n        }\n\n        // inner function\n        function $loadColumn() {\n            if (_this.rows.count > 0 ) throw new ExtendError(/EL05327/, null, [opt]);\n            for (let i = 0; i < p_entity.columns.count; i++) {\n                var column = p_entity.columns[i].clone();\n                var key = p_entity.columns.indexToKey(i);\n                if (_this.columns.exists(key)) throw new ExtendError(/EL05328/, null, [key]);\n                _this.columns.add(column);\n            }\n        }\n        function $loadRow() {    // 컬럼 기준으로 로우를 가져온다.\n            for (let i = 0; i < p_entity.rows.count; i++) {\n                var row = _this.newRow(this);\n                for (let ii = 0; ii < _this.columns.count; ii++) {\n                    var key = _this.columns.indexToKey(ii);\n                    row[key] = p_entity.rows[i][key];\n                }\n                _this.rows.add(row);\n            }\n        }\n    };\n\n\n    /**\n     * 스키마 읽기\n     * \n     * @param {object} p_obj 대상 객체\n     * @param {boolean} [p_createRow=false] 기본값 = false, 컬럼이 없을경우 로우이름의 컬럼 생성 여부\n     * @param {object} [p_origin] 원본 객체\n     */\n    BaseEntity.prototype._readSchema  = function(p_obj, p_isCreateRow, p_origin) {\n        var _this = this;\n        var obj = p_obj;\n        var columns;\n        var rows = [];\n        var Column = this.columns._baseType;\n        var origin = p_origin ? p_origin : p_obj;\n        \n        try {\n\n            if (obj['_guid']) MetaRegistry.setMetaObject(obj, this); \n\n            if (obj._baseEntity && obj._baseEntity['$ref']) {\n                obj['_baseEntity'] = MetaRegistry.findSetObject(obj._baseEntity['$ref'], origin);\n                if (!obj['_baseEntity']) throw new ExtendError(/EL05329/, null, [obj._baseEntity['$ref']]);\n            }\n            columns = obj['columns'];\n            if (columns) {\n                // 1. $key 인덱스 기준으로 컬럼명 추출\n                if (columns['$key'] && Array.isArray(columns['$key'])) {\n                    for (var i = 0; i < columns['$key'].length; i++) {\n                        $addColumn(columns['$key'][i], columns);\n                    }\n                // 2. 무작위로 컬럼명 추출\n                } else for (var j in columns) $addColumn(j, columns);\n            }\n            // opt\n            if (p_isCreateRow === true && obj['rows']) {\n                // rows = obj['rows'];\n                if (Array.isArray(obj['rows'])) rows = obj['rows'];\n                else rows.push(obj['rows']);\n\n                if (Array.isArray(rows) && rows.length > 0 && typeof rows[0] === 'object') {\n                    for (var k in rows[0]) {    // rows[0] 기준\n                        if (Object.prototype.hasOwnProperty.call(rows[0], k) && !this.columns.existAlias(k)) {\n                            // var prop = rows[0][key];\n                            if (!this.columns.exists(k)) {\n                                var column = new Column(k, this);\n                                this.columns.add(column);\n                            }\n                        }\n                    }\n                }\n            }\n\n        } catch (error) {\n            throw new ExtendError(/EL0532A/, error, []);\n        }\n\n        // innner function\n        function $addColumn(key, columns) {\n            var column;\n            \n            if (!_isObject(columns[key])) columns[key] = { value: columns[key] }; \n            // REVIEW: 조건문 필요성 검토\n            if (_isObject(columns[key])) {\n                if (_this.rows.count > 0 ) throw new ExtendError(/EL0532B/, null, []);\n                var prop = columns[key];\n                var obj = {};\n                if (_isObject(prop) && prop['$ref']) {\n                    column = MetaRegistry.findSetObject(prop['$ref'], origin);\n                    if (!column) throw new ExtendError(/EL0532C/, null, [key, prop['$ref']]);\n                } else {\n                    if (_isObject(prop['_entity']) && prop['_entity']['$ref']) {\n                        prop['_entity'] = MetaRegistry.findSetObject(prop['_entity']['$ref'], origin);\n                        if (!prop['_entity']) throw new ExtendError(/EL0532D/, null, [key, '_entity']);\n                    }\n                    for (var p in prop) obj[p] = prop[p];\n\n                    column = new Column(key, null, obj);\n                }\n                if(prop['_guid']) MetaRegistry.setMetaObject(prop, column); \n                if (_this.columns.exists(key)) throw new ExtendError(/EL0532E/, null, [key]);\n                _this.columns.add(column);\n            }\n        }\n    \n    };\n    \n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.  \n     * \n     * @param {number} p_vOpt 가져오기 옵션  \n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)  \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)  \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    BaseEntity.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj;\n        var vOpt = p_vOpt || 0;\n        var owned;\n\n        obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        if (vOpt < 2 && vOpt > -1 && this._metaSet) {\n            obj['_metaSet'] = MetaRegistry.createReferObject(this._metaSet);\n        }\n        obj['columns'] = this.columns.getObject(vOpt, owned);\n        obj['rows'] = this.rows.getObject(vOpt, owned);\n        return obj;                        \n    };\n\n    /** \n     * rows(데이터) 초기화 한다\n     */\n    BaseEntity.prototype.clear = function() {\n        this.rows.clear();\n    };\n\n    /** \n     * columns, rows(데이터)를 초기화 한다\n     */\n    BaseEntity.prototype.reset = function() {\n        \n        this.rows.clear();\n        this.columns.clear();\n    };\n\n    /**\n     * 새로운 MetaRow 를 추가한다.  \n     * \n     * @returns {MetaRow} columns 구조의 row를 생성\n     */\n    BaseEntity.prototype.newRow  = function() {\n        return new MetaRow(this);\n    };\n\n    /**\n     * 컬럼의 value 값을 MetaRow 타입 객체로 얻기\n     * \n     * @returns {MetaRow}\n     */\n    BaseEntity.prototype.getValue  = function() {\n        var row = this.newRow();\n\n        for(var i = 0; this.columns.count > i; i++) {\n            var value = this.columns[i].value;    \n            row[i] = value === null ? this.columns[i].default : value;\n        }\n        return row;\n    };\n\n    /**\n     * MetaRow 의 값을 컬럼의 value에 설정한다.\n     * \n     * @param {MetaRow} p_row 로우\n     */\n    BaseEntity.prototype.setValue  = function(p_row) {\n        var alias = '';\n\n        try {\n            if (!(p_row instanceof MetaRow)) throw new ExtendError(/EL05333/, null, []);\n            for(var i = 0; this.columns.count > i; i++) {\n                alias = this.columns[i].alias;        // 별칭이 없을시 name 설정됨\n                this.columns[i].value = p_row[alias];\n            }\n            \n        } catch (error) {\n            throw new ExtendError(/EL05334/, error, []);\n        }\n    };\n\n    /**\n     * 엔티티(테이블/뷰)와 병합\n     * \n     * @param {BaseEntity} p_target 병할할 대상\n     * @param {object} p_option 옵션\n     * @param {object} p_option.0 로우(idx) 기준 병합, 초과 컬럼은 무시됨 <**>   \n     * @param {object} p_option.1 컬럼(key) 기준 병합, 초과 로우는 무시됨\n     * @param {object} p_option.2 로우(idx) 기준 병합, 초과 컬럼은 채워짐\n     * @param {object} p_option.3 컬럼(key) 기준 병합, 초과 로우는 채워짐 \n     * @param {boolean} [p_matchType] 로우 유효성 검사 유무 (기본:false)\n     */\n    BaseEntity.prototype.merge  = function(p_target, p_option, p_matchType) {\n        var _this = this;\n        var opt = p_option || 0;\n        var alias, newRow, tarRow, tarRows, tarColumns;\n        var tempRows = [], clone;\n        var target;\n\n        \n        try {\n            // 1. 유효성 검사\n            if (!(p_target instanceof BaseEntity)) throw new ExtendError(/EL05341/, null, []);\n            if (typeof p_option !== 'number') throw new ExtendError(/EL05342/, null, [typeof p_option]);\n\n            // 2. 타겟 복제본 만들기\n            target = p_target.clone();\n\n            // opt = 0\n            if (opt === 0) $mergeByRow();\n            // opt = 1\n            if (opt === 1) $mergeByColumn();\n            // opt = 2\n            if (opt === 2) $mergeByRowFill();\n            // opt = 3\n            if (opt === 3) $mergeByColumnFill();\n\n        } catch (error) {\n            throw new ExtendError(/EL05347/, error, [opt]);\n        }\n\n        // innner function\n        function $mergeByRow() {    // opt = 0\n            // 3-1. 로우 임시 저장 및 초기화 \n            for (var i = 0; i < _this.rows.count; i++) {\n                tempRows.push(_this.rows[i].clone());\n            }\n            _this.rows.clear();\n            // 3-2. 원본 row 추가\n            for (var j = 0; j < tempRows.length; j++) {\n                newRow = _this.newRow();\n                for (var k = 0; k < _this.columns.count; k++) {\n                    alias = _this.columns[k].alias;\n                    if (tempRows[j][alias]) newRow[alias] = tempRows[j][alias];\n                }\n                _this.rows.add(newRow, p_matchType);\n            }\n            // 3-3. 타겟 row 추가\n            tarRows = target.rows;\n            for (var m = 0; m < tarRows.count; m++) {\n                newRow = _this.newRow();\n                tarRow = tarRows[m];\n                for (var n = 0; n < _this.columns.count; n++) {\n                    alias = _this.columns[n].alias;\n                    if (tarRow[alias]) newRow[alias] = tarRow[alias];\n                }\n                _this.rows.add(newRow, p_matchType);\n            }\n        }\n        function $mergeByColumn() {     // opt = 1\n            tarColumns = target.columns;\n            tarRows = target.rows;\n            // 3-1. 컬럼 중복 검사\n            for (var i = 0; i < tarColumns.count; i++) {\n                alias = tarColumns[i].alias;\n                if (_this.columns.exists(alias)) throw new ExtendError(/EL05343/, null, [i, alias]);\n                if (_this.columns.existAlias(alias)) throw new ExtendError(/EL05344/, null, [i, alias]);\n            }\n            // 3-2. 로우 임시 저장 및 초기화 \n            for (var j = 0; j < _this.rows.count; j++) {\n                tempRows.push(_this.rows[j].clone());\n            }\n            _this.rows.clear();\n            // 3-3. 컬럼 추가\n            for (var k = 0; k < tarColumns.count; k++) {\n                clone = tarColumns[k].clone(_this);\n                var key = tarColumns[k].alias;\n                clone.columnName = key;\n                clone.$key = key;\n                // clone.__SET$$key(key, clone);\n                _this.columns.add(clone);\n            }\n            // 3-4. 로우 추가 (기준:idx)\n            for (var m = 0; m < tempRows.length; m++) {\n                newRow = _this.newRow();\n                for (var n = 0; n < _this.columns.count; n++) {\n                    alias = _this.columns[n].alias;\n                    if (tempRows[m][alias]) {                         // 원본 로우\n                        newRow[alias] = tempRows[m][alias];\n                        continue;\n                    } else if (tarRows[m] && tarRows[m][alias]) newRow[alias] = tarRows[m][alias]; // 타겟 로우\n                }\n                _this.rows.add(newRow, p_matchType);\n            }    \n        }\n        function $mergeByRowFill() {    // opt = 2\n            tarColumns = target.columns;\n            tarRows = target.rows;\n            // 3-1. 로우 임시 저장 및 초기화 \n            for (var i = 0; i < _this.rows.count; i++) {\n                tempRows.push(_this.rows[i].clone());\n            }\n            _this.rows.clear();\n            // 3-2. 컬럼 추가\n            for (var j = 0; j < tarColumns.count; j++) {\n                alias = tarColumns[j].alias;\n                if (!_this.columns.exists(alias)) {\n                    clone = tarColumns[j].clone(_this);\n                    clone.name = alias;\n                    _this.columns.add(clone);\n                }\n            }\n            // 3-3. 로우 추가 : 원본\n            for (var k = 0; k < tempRows.length; k++) {\n                newRow = _this.newRow();\n                for (var m = 0; m < _this.columns.count; m++) {\n                    alias = _this.columns[m].alias;\n                    if (tempRows[k][alias]) newRow[alias] = tempRows[k][alias];\n                }\n                _this.rows.add(newRow, p_matchType);\n            }\n            // 3-4. 로우 추가 : 타겟\n            for (var n = 0; n < tarRows.count; n++) {\n                newRow = _this.newRow();\n                for (var p = 0; p < _this.columns.count; p++) {\n                    alias = _this.columns[p].alias;\n                    if (tarRows[n][alias]) newRow[alias] = tarRows[n][alias];\n                }\n                _this.rows.add(newRow, p_matchType);\n            }\n        }\n        function $mergeByColumnFill() { // opt = 3\n            tarColumns = target.columns;\n            tarRows = target.rows;\n            // 3-1. 컬럼 중복 검사\n            for (var i = 0; i < tarColumns.count; i++) {\n                alias = tarColumns[i].alias;\n                if (_this.columns.exists(alias)) throw new ExtendError(/EL05345/, null, [i, alias]);\n                if (_this.columns.existAlias(alias)) throw new ExtendError(/EL05346/, null, [i, alias]);\n            }\n            // 3-2. 로우 임시 저장 및 초기화 \n            for (var j = 0; j < _this.rows.count; j++) {\n                tempRows.push(_this.rows[j].clone());\n            }\n            _this.rows.clear();\n            // 3-3. 컬럼 추가\n            for (var k = 0; k < tarColumns.count; k++) {\n                clone = tarColumns[k].clone(_this);\n                clone.columnName = tarColumns[k].alias;\n                _this.columns.add(clone);\n            }\n            // 3-4. 로우 추가 (idx)\n            for (var m = 0; m < tempRows.length; m++) {\n                newRow = _this.newRow();\n                for (var n = 0; n < _this.columns.count; n++) {\n                    alias = _this.columns[n].alias;\n                    if (tempRows[m][alias]) {                         // 원본 로우\n                        newRow[alias] = tempRows[m][alias];\n                        continue;\n                    }else newRow[alias] = tarRows[m][alias]; // 타겟 로우\n                }\n                _this.rows.add(newRow, p_matchType);\n            }     \n            // 3-5. 타겟 로우가 클 경우 로우 추가\n            if (tempRows.length < tarRows.count) {\n                for (var p = tempRows.length; p < tarRows.count; p++) {\n                    newRow = _this.newRow();\n                    for (var q = 0; q < _this.columns.count; q++) {\n                        alias = _this.columns[q].alias;\n                        if (tarRows[p][alias]) newRow[alias] = tarRows[p][alias];\n                    }\n                    _this.rows.add(newRow, p_matchType);\n                }\n            }\n        }\n    };\n\n    /**\n     * 엔티티의 지정한 컬럼과 조건의 row 를 조회\n     * \n     * @param {function | array<string>| arguments<string>} p_filter 필터\n     * @param {array<string> | arguments<string>} [p_args] filter 설정시 컬럼명\n     * @returns {MetaRow[]}\n     */\n    BaseEntity.prototype.select  = function(p_filter, p_args) {\n        var args = Array.prototype.slice.call(arguments);\n        var MetaView;\n        var columnNames = [];\n        var callback;\n        var view;\n        var selectList = [];\n\n        try {\n            args = Array.prototype.slice.call(arguments);\n            MetaView = MetaRegistry.namespace.find('Meta.Entity.MetaView');\n            \n            if (!MetaView) throw new ExtendError(/EL05335/, null, ['Meta.Entity.MetaView']);\n            \n            view = new MetaView('select');\n\n            // 매개변수 구성\n            if (typeof p_filter === 'function') {\n                callback = p_filter;\n                if (Array.isArray(p_args)) columnNames = p_args;\n                else if (args.length > 1) columnNames = args.splice(1);\n            } else if (Array.isArray(p_filter)) {\n                columnNames = p_filter;\n            } else {\n                columnNames = args.splice(0);\n            }\n            // 엔티티 빌드\n            // return this._buildEntity(view, callback, columnNames);\n\n            this._buildEntity(view, callback, columnNames);\n            \n            for (var i = 0; i < view.rows.count; i++) {\n                selectList.push(view.rows[i]);\n            }\n            return selectList;\n\n        } catch (error) {\n            throw new ExtendError(/EL05336/, error, []);\n        }\n\n    };\n    \n    /**\n     * 객체(직렬화) 로드  \n     * 불러오기/가져오기 (!! 병합용도가 아님)  \n     * 기존을 초기화 하고 불러오는 역활  \n     * \n     * @param {object | string} p_obj 불러오기 대상\n     * @param {function} [p_parse] 파서\n     */\n    BaseEntity.prototype.load = function(p_obj, p_parse) {\n        var obj = p_obj;\n        \n        \n        try {\n            if (p_obj instanceof BaseEntity) throw new ExtendError(/EL05351/, null, []);\n            if (typeof obj === 'string') {\n                if (typeof p_parse === 'function') obj = p_parse(obj);\n                else obj = JSON.parse(obj, null);\n            }    \n            if (!_isObject(obj)) throw new ExtendError(/EL05352/, null, [typeof obj]);\n            this.setObject(obj);\n            \n        } catch (error) {\n            throw new ExtendError(/EL05353/, error, []);\n        }\n    };\n\n    // BaseEntity.prototype.load._TYPE = { params: String };\n\n    /**\n     * 객체 출력(직렬화)\n     * \n     * @param {number} [p_vOpt] 옵션 (0, 1, 2)\n     * @param {function} [p_stringify] 파서출력 사용자 함수\n     * @param {string} [p_space] 공백\n     * @returns {string}\n     */\n    BaseEntity.prototype.output = function(p_vOpt, p_stringify, p_space) {\n        var rObj;\n        var str;\n\n        rObj = this.getObject(p_vOpt);\n        if (typeof p_stringify === 'function') str = p_stringify(rObj, { space: p_space } );\n        else str = JSON.stringify(rObj, null, p_space);\n        return str;\n    };\n\n    /**\n     * object 로 읽기   \n     * JSON 스키마 규칙   \n     * { table: { columns: {}, rows: {} }}   \n     * { columns: {...}, rows: {} }  \n     * \n     * @param {object} p_obj mObject 또는 rObject 또는 entity\n     * @param {number} [p_option] 기본값  = 3\n     * @param {number} p_option.1 컬럼(구조)만 가져온다. \n     * @param {number} p_option.2 로우(데이터)만 가져온다 (컬럼 참조)  \n     * @param {number} p_option.3 컬럼/로우를 가져온다. 로우만 존재하면 로우 이름의 빈 컬럼을 생성한다. \n     */\n    BaseEntity.prototype.read  = function(p_obj, p_option) {\n        var entity = null;\n        var opt = typeof p_option === 'undefined' ? 3 : p_option;\n\n        try {\n            if (!_isObject(p_obj)) throw new ExtendError(/EL05354/, null, [typeof p_obj]);\n            if (typeof opt !== 'number') throw new ExtendError(/EL05355/, null, [typeof opt]);\n            if (opt <= 0 || opt > 3) throw new ExtendError(/EL05356/, null, [opt]);\n\n            if (p_obj instanceof BaseEntity) {\n                this._readEntity(p_obj, p_option);\n            } else {    \n                // REVIEW: entity, table 필요성 검토\n                if (p_obj['entity']) entity = p_obj['entity'];\n                else if (p_obj['table']) entity = p_obj['table'];\n                else entity = p_obj;\n\n                // 스키마 및 데이터 읽기\n                if (opt % 2 === 1) this.readSchema(entity, opt === 3 ? true : false); // opt: 1, 3\n                if (Math.floor(opt / 2) >= 1) this.readData(entity); // opt: 2, 3\n            }\n            \n        } catch (error) {\n            throw new ExtendError(/EL05357/, error, []);\n        }\n    };\n    \n    /**\n     * 없으면 빈 컬럼을 생성해야 하는지?  \n     * 이경우에 대해서 명료하게 처리햐야함 !!  \n     * \n     * @param {object} p_obj object<Schema> | object<Guid>\n     * @param {boolean} [p_createRow] true 이면, row[0] 기준으로 컬럼을 추가함\n     */\n    BaseEntity.prototype.readSchema  = function(p_obj, p_createRow) {\n        var obj = p_obj;\n        \n        try {\n            if (!_isObject(p_obj)) throw new ExtendError(/EL05358/, null, [typeof p_obj]);\n            if (MetaRegistry.isGuidObject(p_obj)) {\n                if (MetaRegistry.hasRefer(p_obj)) obj = MetaRegistry.transformRefer(p_obj);\n                obj = BaseEntity.transformSchema(obj); // gObj >> sObj<요약>\n            }\n            if (!_isSchema(obj)) throw new ExtendError(/EL05359/, null, [obj.columns, obj.rows]);\n\n            if (obj.viewName) this.viewName = obj.viewName;\n            if (obj.tableName) this.tableName = obj.tableName;\n\n            this._readSchema(obj, p_createRow);\n            \n        } catch (error) {\n            throw new ExtendError(/EL0535A/, error, []);\n        }\n    };        \n\n    /**\n     * 존재하는 로우만 읽기  \n     * \n     * @param {object} p_obj 읽을 객체\n     */\n    BaseEntity.prototype.readData  = function(p_obj) {\n        var obj = p_obj;\n        var rows = [];\n\n        try {\n            if (!_isObject(p_obj)) throw new ExtendError(/EL0535B/, null, [typeof p_obj]);\n\n            if (MetaRegistry.isGuidObject(p_obj)) {\n                if (MetaRegistry.hasRefer(p_obj)) obj = MetaRegistry.transformRefer(p_obj);\n                obj = BaseEntity.transformSchema(p_obj);\n            }\n            if (!_isSchema(obj)) throw new ExtendError(/EL0535C/, null, [obj.columns, obj.rows]);\n            \n            if (Array.isArray(obj['rows'])) rows = obj['rows'];\n            else rows.push(obj['rows']);\n            \n            for (var i = 0; i < rows.length && this.columns.count > 0; i++) {\n                var row = this.newRow(this);\n                for (var key in rows[i]) {\n                    if (Object.prototype.hasOwnProperty.call(row, key)) row[key] = rows[i][key];\n                }\n                this.rows.add(row);\n            }\n            \n        } catch (error) {\n            throw new ExtendError(/EL0535D/, error, []);\n        }\n    };\n\n    /**\n     * 엔티티를 컬럼과 로우를 스키마 타입의 객체로 쓰기(내보내기)\n     * \n     * @param {number} p_vOpt 기본 = 0\n     * @returns {object} 스키마 타입\n     */\n    BaseEntity.prototype.write  = function(p_vOpt) {\n        var vOpt = p_vOpt || 0;\n        var oGuid;\n        \n        oGuid = this.getObject(vOpt);\n        return BaseEntity.transformSchema(oGuid);\n    };\n\n    /**\n     * 엔티티 스키마(컬럼)을 스키마 타입의 객체로 쓰기\n     * @param {number} [p_vOpt] 기본 = 0\n     * @returns {object} 스키마 타입\n     */\n    BaseEntity.prototype.writeSchema  = function(p_vOpt) {\n        var vOpt = p_vOpt || 0;\n        var schema;\n\n        schema = this.write(vOpt);\n        delete schema.rows;\n        return schema;                \n    };\n\n    /**\n     * 엔티티 데이터(로우)를 스키마 타입의 객체로 쓰기\n     * \n     * @param {number} p_vOpt 기본 = 0\n     * @returns {object} 스키마 타입\n     */\n    BaseEntity.prototype.writeData  = function(p_vOpt) {\n        var vOpt = p_vOpt || 0;\n        var schema;\n        \n        schema = this.write(vOpt);\n        delete schema.columns;\n\n        return schema;\n    };\n\n    /** \n     * columns 컬렉션에 포함된 MetaColumn의 유효성을 검사합니다. \n     * column.valid() 메서드는 required 속성과 constraints를 기준으로 value 값의 유효성을 확인합니다.\n     *  \n     * @returns {boolean} 모든 컬럼이 유효성 검사를 통과한 경우 true \n     */\n    BaseEntity.prototype.validate = function() {\n        // 컬럼 타입 검사\n        var typeCheck = this.columns.every(function(elem) {\n            if (elem instanceof MetaColumn) return true;\n            return false;\n        });\n\n        if (!typeCheck) throw new ExtendError(/EL05338/, null, []);\n        \n        if (this.columns.every(function(elem) {\n            if (typeof elem.valid(elem.value) === 'undefined') return true;\n            return false;\n        })) return true;\n        else return false;\n    };\n\n    /** \n     * 엔티티 복제\n     * \n     * @abstract \n     * @returns {BaseEntity} 복제한 객체\n     */\n    BaseEntity.prototype.clone = function() {\n        throw new ExtendError(/EL05337/, null, []);\n    };\n\n    /** \n     * 엔티티 복사\n     * \n     * @abstract \n     * @returns {BaseEntity} 복사한 뷰 객체\n     */\n    BaseEntity.prototype.copy = function() {\n        throw new ExtendError(/EL05348/, null, []);\n    };\n\n    return BaseEntity;\n\n}(MetaElement));\n\nexport default BaseEntity;\nexport { BaseEntity };","/**** meta-table.js | MetaTable ****/\n//==============================================================\nimport { ExtendError }                  from 'logic-core';\nimport { Util }                         from 'logic-core';\nimport { MetaRegistry }                 from 'logic-core';\nimport { ITransaction }                 from './i-transaction.js';\nimport { BaseEntity }                   from './base-entity.js';\nimport { MetaTableColumnCollection }    from './collection-meta-table-column.js';\n\nvar MetaTable  = (function (_super) {\n    /**\n     * 테이블 엔티티\n     * \n     * @constructs MetaTable\n     * @extends BaseEntity\n     * @param {string} p_name 테이블명\n     */\n    function MetaTable(p_name) {\n        _super.call(this, p_name);\n\n        var columns  = new MetaTableColumnCollection(this);\n\n        /**\n         * 테이블 이름\n         * \n         * @member {string} MetaTable#tableName\n         */\n        Object.defineProperty(this, 'tableName', {\n            get: function() { return this._name; },\n            set: function(nVal) { \n                if (nVal === this.tableName) return;\n                if (typeof nVal !== 'string') throw new ExtendError(/EL05411/, null, [typeof nVal]);\n                this._name = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 엔티티의 아이템(속성) 컬렉션\n         * \n         * @member {MetaTableColumnCollection} MetaTable#columns\n         */\n        Object.defineProperty(this, 'columns', {\n            get: function() { return columns; },\n            set: function(nVal) { \n                if (!(nVal instanceof MetaTableColumnCollection)) throw new ExtendError(/EL05412/, null, []);\n                if (this.rows.count > 0) throw new ExtendError(/EL05413/, null, [this.constructor.name, this.rows.count]);\n                columns = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n        \n        Util.implements(MetaTable, this);       // strip:\n    }\n    Util.inherits(MetaTable, _super);\n    \n    MetaTable._UNION = [ITransaction];\n    MetaTable._NS = 'Meta.Entity';      // namespace\n    MetaTable._PARAMS = ['name'];       // creator parameter\n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.  \n     * \n     * @param {number} p_vOpt 가져오기 옵션  \n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)  \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)  \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    MetaTable.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        // var vOpt = p_vOpt || 0;\n        // var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        obj['tableName'] = this.tableName;\n        return obj;                        \n    };\n\n    /**\n     * 현재 객체를 초기화 후, 지정한 guid 타입의 객체를 사용하여 설정합니다.   \n     * \n     * @param {object} p_oGuid guid 타입의 객체\n     * @param {object} [p_origin] 현재 객체를 설정하는 원본 guid 객체  \n     * 기본값은 p_oGuid 객체와 동일\n     */\n    MetaTable.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        \n        var origin = p_origin ? p_origin : p_oGuid;\n        var metaSet;\n\n        if(p_oGuid['_metaSet']) {\n            metaSet = MetaRegistry.findSetObject(p_oGuid['_metaSet']['$ref'], origin);\n            if (!metaSet) throw new ExtendError(/EL05414/, null, [p_oGuid['_metaSet']['$ref']]);\n            this._metaSet = metaSet;\n        }\n        this.columns.setObject(p_oGuid['columns'], origin);\n        this.rows.setObject(p_oGuid['rows'], origin);\n        this.tableName = p_oGuid['tableName'];\n    };\n\n    /**\n     * 객체 복제\n     * \n     * @returns {MetaTable}\n     */\n    MetaTable.prototype.clone  = function() {\n        var clone = new MetaTable(this.tableName);\n        \n        // columns 복제본 추가\n        for(var i = 0; i < this.columns.count; i++) {\n            clone.columns.add(this.columns[i].clone(clone));\n        }\n        \n        // rows 복제본 추가\n        for(var k = 0; k < this.rows.count; k++) {\n            clone.rows.add(this.rows[k].clone(clone));\n        }\n        return clone;\n    };\n\n\n    /**\n     * 엔티티를 복사한다. (조회 후 복제)\n     * \n     * @param {overload}            type1\n     * @param {function}            type1.p_filter 로우 필터 함수\n     * @param {arguments<string>}   type1.p_args 컬럼명\n     * @param {overload}            type2\n     * @param {string}              type2.p_columns 컬럼명\n     */\n    MetaTable.prototype.copy  = function(p_filter, p_args) {\n        var args = Array.prototype.slice.call(arguments);\n        var columnNames = [];\n        var callback = null;\n        var entity = new MetaTable(this.tableName, this);\n\n        // 매개변수 구성\n        if (typeof p_filter === 'function') {\n            callback = p_filter;\n            if (Array.isArray(p_args)) columnNames = p_args;\n            else if (args.length > 1) columnNames = args.splice(1);\n        } else if (Array.isArray(p_filter)) {\n            columnNames = p_filter;\n        } else {\n            columnNames = args.splice(0);\n        }\n\n        return this._buildEntity(entity, callback, columnNames);\n    };\n\n    /**\n     * 변경사항 허락 : commit\n     */\n    MetaTable.prototype.acceptChanges  = function() {\n        this.rows.commit();\n    };\n\n    /**\n     * 변경사항 취소 : rollback\n     */\n    MetaTable.prototype.rejectChanges  = function() {\n        this.rows.rollback();\n    };\n\n    /**\n     * 변경목록 얻기\n     * \n     * @returns {array<object>}\n     */\n    MetaTable.prototype.getChanges  = function() {\n        return this.rows._transQueue.select();\n    };\n\n    return MetaTable;\n\n}(BaseEntity));\n\nexport default MetaTable;\nexport { MetaTable };","/**** collection-meta-table.js | MetaTableCollection ****/\n//==============================================================\nimport { ExtendError }              from 'logic-core';\nimport { Util }                     from 'logic-core';\nimport { Type }                     from 'logic-core';\nimport { MetaObject }               from 'logic-core';\nimport { PropertyCollection }       from 'logic-core';\nimport { MetaTable }                from './meta-table.js';\n\nvar MetaTableCollection  = (function (_super) {\n    /**\n     * 메타 테이블 컬렉션\n     * \n     * @constructs MetaTableCollection\n     * @extends PropertyCollection\n     * @param {object} p_owner 소유자 \n     */\n    function MetaTableCollection(p_owner) {   // COVER:\n        _super.call(this, p_owner);\n\n        var _baseType = MetaTable;\n        /**\n         * 기본 생성 타입\n         * @member {BaseColumnCollection} MetaTableCollection#_baseType\n         */\n        Object.defineProperty(this, '_baseType', {\n            get: function() { return _baseType; },\n            set: function(nVal) { \n                if (!(typeof nVal === 'function')) throw new ExtendError(/EL05421/, null, [this.constructor.name, typeof nVal]);\n                // if (!(new nVal('temp') instanceof MetaTable)) throw new ExtendError('ES032', ['_baseType', 'MetaTable']);\n                if (!(Type.isProtoChain(nVal, MetaTable))) throw new ExtendError(/EL05422/, null, [this.constructor.name]);\n                _baseType = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        this._elemTypes = MetaTable;   // 컬렉션 타입 설정\n\n        // 예약어 등록 \n        this.$KEYWORD = ['_baseType', 'existTableName'];\n    }\n    Util.inherits(MetaTableCollection, _super);\n\n    MetaTableCollection._NS = 'Meta.Entity';    // namespace\n    MetaTableCollection._PARAMS = ['_owner'];  // creator parameter\n\n    /**\n     * 테이블 컬렉션에 엔티티 추가\n     * \n     * @param {string | MetaTable} p_table 추가할 메타테이블\n     * @returns {MetaTable} 등록한 아이템\n     */\n    MetaTableCollection.prototype.add  = function(p_table) { // COVER:\n        var table;\n        var key;\n\n        if (typeof p_table === 'string' && p_table.length > 0) {      \n            key  = p_table;\n            table = new this._baseType(key);\n            if (this._owner instanceof MetaObject && this._owner.instanceOf('MetaSet')) table._metaSet = this._owner;\n            // table._metaSet = this._owner;\n\n        } else if (p_table instanceof MetaTable) {\n            key  = p_table.tableName;\n            table = p_table;\n            if (this._owner instanceof MetaObject && this._owner.instanceOf('MetaSet')) p_table._metaSet = this._owner;\n            // p_table._metaSet = this._owner;\n        } else throw new ExtendError(/EL05423/, null, [typeof any]);\n\n        if (this.existTableName(key)) throw new ExtendError(/EL05424/, null, [key]);\n\n        return _super.prototype.add.call(this, key, table);\n    };\n\n    /**\n     * 테이블명 존재 유무\n     * \n     * @param {string} p_key 테이블명\n     * @returns {boolean}\n     */\n    MetaTableCollection.prototype.existTableName  = function(p_key) {\n        for (var i = 0; this.count > i; i++) {\n            if (this[i].tableName === p_key) return true;\n        }\n        return false;\n    };\n    \n    return MetaTableCollection;\n\n}(PropertyCollection));\n\nexport default MetaTableCollection;\nexport { MetaTableCollection };","/**** meta-view.js | MetaView ****/\n//==============================================================\nimport { ExtendError }                  from 'logic-core';\nimport { Util }                         from 'logic-core';\nimport { MetaRegistry }                 from 'logic-core';\nimport { BaseEntity }                   from './base-entity.js';\nimport { MetaViewColumnCollection }     from './collection-meta-view-column.js';\n\nvar MetaView  = (function (_super) {\n    /**\n     * 메타 뷰\n     * \n     * @constructs MetaView\n     * @extends BaseEntity\n     * @param {string} p_name 뷰이름\n     * @param {BaseEntity} [p_baseEntity] 기본 엔티티, 컬럼 추가시 기본엔티티에 추가 된다.\n     */\n    function MetaView(p_name, p_baseEntity) {\n        _super.call(this, p_name);\n\n        var _baseEntity;\n        var columns = new MetaViewColumnCollection(this);\n        /**\n         * 메타 뷰 이름\n         * \n         * @member {string} MetaView#viewName\n         */\n        Object.defineProperty(this, 'viewName', {\n            get: function() { return this._name; },\n            set: function(nVal) { \n                if (nVal === this.viewName) return;\n                if (typeof nVal !== 'string') throw new ExtendError(/EL05431/, null, [typeof nVal]);\n                this._name = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 뷰의 컬럼 컬렉션\n         * \n         * @member {MetaViewColumnCollection} MetaView#columns\n         */\n        Object.defineProperty(this, 'columns', {\n            get: function() { return columns; },\n            set: function(nVal) { \n                if (!(nVal instanceof MetaViewColumnCollection)) throw new ExtendError(/EL05432/, null, [this.constructor.name]);\n                if (this.rows.count > 0) throw new ExtendError(/EL05433/, null, [this.constructor.name, this.rows.count ]);\n                columns = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n        \n        /**\n         * 기본 엔티티  \n         * null 으로 undefined  \n         * \n         * @member {MetaViewColumnCollection} MetaView#_baseEntity\n         */\n        Object.defineProperty(this, '_baseEntity', {\n            get: function() { return _baseEntity; },\n            set: function(nVal) { \n                if (nVal === null || typeof nVal === 'undefined') {\n                    _baseEntity = undefined;    // init\n                    return;\n                }\n                if (!(nVal instanceof BaseEntity)) throw new ExtendError(/EL05434/, null, [this.constructor.name]);\n                _baseEntity = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        if (p_baseEntity) this._baseEntity = p_baseEntity;\n        \n    }\n    Util.inherits(MetaView, _super);\n\n    MetaView._NS = 'Meta.Entity';                   // namespace\n    MetaView._PARAMS = ['name', '_baseEntity'];     // creator parameter\n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.  \n     * \n     * @param {number} p_vOpt 가져오기 옵션  \n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)  \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)  \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    MetaView.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        // var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n        // var origin = p_origin ? p_origin : obj;\n\n        obj['viewName'] = this.viewName;\n        if (vOpt < 2 && vOpt > -1 && this._baseEntity) {\n            obj['_baseEntity'] = MetaRegistry.createReferObject(this._baseEntity);\n        }\n        return obj;                  \n    };\n\n    /**\n     * 현재 객체를 초기화 후, 지정한 guid 타입의 객체를 사용하여 설정합니다.  \n     * \n     * @param {object} p_oGuid guid 타입의 객체\n     * @param {object} [p_origin] 현재 객체를 설정하는 원본 guid 객체  \n     * 기본값은 p_oGuid 객체와 동일\n     */\n    MetaView.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        \n        var origin = p_origin ? p_origin : p_oGuid;\n        var metaSet;\n        var baseEntity;\n\n        if(p_oGuid['_metaSet']) {\n            metaSet = MetaRegistry.findSetObject(p_oGuid['_metaSet']['$ref'], origin);\n            if (!metaSet) throw new ExtendError(/EL05435/, null, [p_oGuid['_metaSet']['$ref']]);\n            this._metaSet = metaSet;\n        }\n        // this.metaSet = mObj.metaSet;\n        if (p_oGuid['_baseEntity']) {\n            baseEntity = MetaRegistry.findSetObject(p_oGuid['_baseEntity']['$ref'], origin);\n            if (!baseEntity) throw new ExtendError(/EL05436/, null, [p_oGuid['_baseEntity']['$ref']]);\n            // this.__SET$_baseEntity(baseEntity, this);\n            this._baseEntity = baseEntity;\n        } \n        this.columns.setObject(p_oGuid['columns'], origin);\n        this.rows.setObject(p_oGuid['rows'], origin);\n        this.viewName = p_oGuid['viewName'];\n    };\n    /**\n     * 객체 복제  \n     * override  \n     * \n     * @returns {MetaView}\n     */\n    MetaView.prototype.clone  = function() {\n        var clone = new MetaView(this.viewName, this._baseEntity);  // 뷰를 복제하면 참조타입 >> 엔티티타입으로 변경\n\n        for(var i = 0; i < this.columns.count; i++) {\n            if (this.columns[i]._entity === this) clone.columns.add(this.columns[i].clone(clone));\n            else clone.columns.add(this.columns[i].clone());\n        }\n\n        for(var k = 0; k < this.rows.count; k++) {\n            clone.rows.add(this.rows[k].clone(clone));\n        }\n        return clone;\n    };\n    \n    /**\n     * 엔티티를 복사한다. (조회 후 복제)  \n     * \n     * @param {overload}            type1\n     * @param {function}            type1.p_filter 로우 필터 함수\n     * @param {arguments<string>}   type1.p_args 컬럼명\n     * @param {overload}            type2\n     * @param {string}              type2.p_columns 컬럼명\n     */\n    MetaView.prototype.copy  = function(p_filter, p_args) {\n        var args = Array.prototype.slice.call(arguments);\n        // var _this = this;\n        var items = [];\n        var callback = null;\n        var entity = new MetaView(this.viewName, this);\n        // var orignal = this.clone();\n\n        // 매개변수 구성\n        if (typeof p_filter === 'function') {\n            callback = p_filter;\n            if (Array.isArray(p_args)) items = p_args;\n            else if (args.length > 1) items = args.splice(1);\n        } else if (Array.isArray(p_filter)) {\n            items = p_filter;\n        } else {\n            items = args.splice(0);\n        }\n\n        return this._buildEntity(entity, callback, items);\n    };\n    \n    return MetaView;\n\n}(BaseEntity));\n\nexport default MetaView;\nexport { MetaView };","/**** collection-meta-view.js | MetaViewCollection ****/\n//==============================================================\nimport { ExtendError }              from 'logic-core';\nimport { Util }                     from 'logic-core';\nimport { Type }                     from 'logic-core';\nimport { PropertyCollection }       from 'logic-core';\nimport { MetaObject }               from 'logic-core';\nimport { BaseEntity }               from './base-entity.js';\nimport { MetaView }                 from './meta-view.js';\n\nvar MetaViewCollection  = (function (_super) {\n    /**\n     * 뷰 엔티티 컬렉션\n     * \n     * @constructs MetaViewCollection\n     * @extends PropertyCollection\n     * @param {object} p_owner 소유자 \n     */\n    function MetaViewCollection(p_owner) {    // COVER:\n        _super.call(this, p_owner);\n\n        var _baseType = MetaView;\n\n        /**\n         * 기본 생성 타입\n         * \n         * @member {MetaView} MetaViewCollection#_baseType\n         */\n        Object.defineProperty(this, '_baseType', {\n            get: function() { return _baseType; },\n            set: function(nVal) { \n                if (!(typeof nVal === 'function')) throw new ExtendError(/EL05441/, null, [typeof nVal]);\n                // if (!(new nVal('temp') instanceof MetaView)) throw new ExtendError('ES032', ['_baseType', 'MetaView']);\n                if (!(Type.isProtoChain(nVal, MetaView))) throw new ExtendError(/EL05442/, null, [this.constructor.name]);\n                _baseType = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        this._elemTypes = MetaView;   // 컬렉션타입 설정\n\n        // 예약어 등록 \n        this.$KEYWORD = ['_baseType', 'existViewName'];\n    }\n    Util.inherits(MetaViewCollection, _super);\n\n    MetaViewCollection._NS = 'Meta.Entity';    // namespace\n    MetaViewCollection._PARAMS = ['_owner'];  // creator parameter\n\n    /**\n     * 뷰 컬렉션에 뷰 엔티티를 추가한다.\n     * \n     * @param {string | MetaView} p_view 추가할 뷰\n     * @param {BaseColumnCollection} [p_baseEntity] 기본 컬럼 컬렉션\n     * @returns {MetaView} 등록한 아이템\n     * \n     * @example\n     *  - string                    : 생성후   string      이름으로 등록 \n     *  - string, colltion          : 생성후   string      이름으로  등록 (collection보냄)\n     *  - entityView                :         entityView  이름으로 등록\n     *  - entityView, collection    :         entityView  이름으로 등록 (collection보냄) => 오류발생\n     */\n    MetaViewCollection.prototype.add  = function(p_view, p_baseEntity) {    // COVER:\n        var view;\n        var key;\n\n        if (p_view instanceof MetaView && p_baseEntity) {\n            throw new ExtendError(/EL05443/, null, []);\n        }\n        if (p_baseEntity && !(p_baseEntity instanceof BaseEntity)) {\n            throw new ExtendError(/EL05444/, null, []);\n        }\n\n        if (typeof p_view === 'string') {      \n            key  = p_view;\n            view = new this._baseType(key, p_baseEntity);\n            if (this._owner instanceof MetaObject && this._owner.instanceOf('MetaSet')) view._metaSet = this._owner;\n            // view._metaSet = this._owner;\n        } else if (p_view instanceof MetaView) {\n            key  = p_view.viewName;\n            view = p_view;\n            if (this._owner instanceof MetaObject && this._owner.instanceOf('MetaSet')) p_view._metaSet = this._owner;\n            // p_view._metaSet = this._owner;\n        } else throw new ExtendError(/EL05445/, null, [typeof p_view]);\n\n        if (this.existViewName(key)) throw new ExtendError(/EL05446/, null, [key]);\n\n        return _super.prototype.add.call(this, key, view);\n    };\n\n    /**\n     * 메타뷰가 존재하는지 확인합니다.\n     * \n     * @param {string} p_key 뷰이름\n     * @returns \n     */\n    MetaViewCollection.prototype.existViewName  = function(p_key) {\n        for (var i = 0; this.count > i; i++) {\n            if (this[i].viewName === p_key) return true;\n        }\n        return false;\n    };\n\n    return MetaViewCollection;\n\n}(PropertyCollection));\n\nexport default MetaViewCollection;\nexport { MetaViewCollection };","/**** meta-set.js | MetaSet ****/\n//==============================================================\nimport { ExtendError }              from 'logic-core';\nimport { Util }                     from 'logic-core';\nimport { ISerialize }               from 'logic-core';\nimport { MetaElement }              from 'logic-core';\nimport { MetaRegistry }             from 'logic-core';\nimport { BaseEntity }               from './base-entity.js';\nimport { ISchemaControl }           from './i-control-schema.js';\nimport { IImportControl }           from './i-control-import.js';\nimport { IExportControl }           from './i-control-export.js';\nimport { ITransaction }             from './i-transaction.js';\nimport { MetaTableCollection }      from './collection-meta-table.js';\nimport { MetaViewCollection }       from './collection-meta-view.js';\n\nvar MetaSet  = (function (_super) {\n    /**\n     * 메타셋\n     * \n     * @constructs MetaSet\n     * @extends MetaElement\n     * @implements {ISchemaControl}\n     * @implements {IImportControl}\n     * @implements {IExportControl}\n     * @implements {ITransaction}\n     * @implements {ISerialize}\n     * @param {string} p_name 메타셋 이름\n     */\n    function MetaSet(p_name) {\n        _super.call(this, p_name);\n\n        var tables = new MetaTableCollection(this);\n        var views  = new MetaViewCollection(this);\n\n        /**\n         * 테이블 이름\n         * \n         * @member {string} MetaSet#setName\n         */\n        Object.defineProperty(this, 'setName', {\n            get: function() { return this._name; },\n            set: function(nVal) { \n                if (typeof nVal !== 'string') throw new ExtendError(/EL05451/, null, [this.constructor.name, typeof nVal]);\n                this._name = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 메타 테이블 컬렉션\n         * \n         * @readonly\n         * @member {MetaTableCollection} MetaSet#tables\n         */\n        Object.defineProperty(this, 'tables', {\n            get: function() { return tables; },\n            configurable: false,\n            enumerable: true\n        });\n        \n        /**\n         * 메타 뷰 컬렉션\n         * \n         * @readonly\n         * @member {MetaViewCollection} MetaSet#views\n         */\n        Object.defineProperty(this, 'views', {\n            get: function() { return views; },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 트랜젝션 사용 유무 (기본값: 사용 false)\n         * \n         * @member {boolean}  MetaSet#autoChanges\n         */\n        Object.defineProperty(this, 'autoChanges', {\n            set: function(nVal) { \n                if (typeof nVal !== 'boolean') {\n                    throw new ExtendError(/EL05452/, null, [this.constructor.name, typeof nVal]);\n                }\n                for (var i = 0; i < this.tables.count; i++) {\n                    this.tables[i].rows.autoChanges = nVal;\n                }\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        Util.implements(MetaSet, this);     // strip:\n    }\n    Util.inherits(MetaSet, _super);\n    \n    MetaSet._UNION = [ISchemaControl, IImportControl, IExportControl, ITransaction, ISerialize];\n    MetaSet._NS = 'Meta.Entity';    // namespace\n    MetaSet._PARAMS = ['name'];     // creator parameter\n\n    // local funciton\n    function _isObject(obj) {\n        if (typeof obj === 'object' && obj !== null) return true;\n        return false;\n    }\n    function _isSchema(obj) {    // 객체 여부\n        if (!_isObject(obj)) return false;\n        if (_isObject(obj['tables']) || _isObject(obj['views'])) return true;\n        return false;\n    }\n    \n    /**\n     * 메타셋 스카마 객체로 변환\n     * \n     * @param {object} p_oGuid getObject()로 얻은 객체\n     * @returns {object}\n     */\n    MetaSet.transformSchema  = function(p_oGuid) {\n        var obj = {};\n\n        if (!_isSchema(p_oGuid)) { \n            throw new ExtendError(/EL05453/, null, []);\n        }\n\n        obj['name'] = p_oGuid['name']; \n        obj['tables'] = $transformTable(p_oGuid['tables']);\n        obj['views'] = $transformView(p_oGuid['views']);   \n        \n        return obj;\n\n        // inner function\n        function $transformTable(p_oGuid) {\n            var obj = {};\n            for (var i = 0; i < p_oGuid['_elem'].length; i++) {\n                var table = p_oGuid['_elem'][i];\n                var key = p_oGuid['_key'][i]; \n                obj[key] = BaseEntity.transformSchema(table);\n            }\n            obj['$key'] = p_oGuid['_key'];\n            return obj;\n        }\n        function $transformView(p_oGuid) {\n            var obj = {};\n            for (var i = 0; i < p_oGuid['_elem'].length; i++) {\n                var view = p_oGuid['_elem'][i];\n                var key = p_oGuid['_key'][i]; \n                obj[key] = BaseEntity.transformSchema(view);\n            }\n            obj['$key'] = p_oGuid['_key'];\n            return obj;\n        }\n    };\n    \n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.  \n     * \n     * @param {number} p_vOpt 가져오기 옵션  \n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)  \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)  \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    MetaSet.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        obj['setName'] = this.setName;\n        obj['tables'] = this.tables.getObject(vOpt, owned);\n        obj['views'] = this.views.getObject(vOpt, owned);\n        return obj;                        \n    };\n\n    /**\n     * 현재 객체를 초기화 후, 지정한 guid 타입의 객체를 사용하여 설정합니다.   \n     * \n     * @param {object} p_oGuid guid 타입의 객체\n     * @param {object} [p_origin] 현재 객체를 설정하는 원본 guid 객체  \n     * 기본값은 p_oGuid 객체와 동일\n     */\n    MetaSet.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n\n        var origin = p_origin ? p_origin : p_oGuid;\n        \n        this.setName = p_oGuid['setName'];\n        this.tables.setObject(p_oGuid['tables'], origin);\n        this.views.setObject(p_oGuid['views'], origin);\n    };\n\n    /**\n     * 메타셋 복제\n     * \n     * @returns {MetaSet}\n     */\n    MetaSet.prototype.clone  = function() {\n        var clone = new MetaSet(this.setName);\n\n        for(var i = 0; i < this.tables.count; i++) {\n            clone.tables.add(this.tables[i].clone());\n        }\n\n        for(var k = 0; k < this.views.count; k++) {\n            clone.views.add(this.views[k].clone());\n        }\n        return clone;\n    };\n    \n    /**\n     * 모든 view 와 모든 table 의 row 를 초기화\n     */\n    MetaSet.prototype.clear  = function() {\n        for(var i = 0; i < this.tables.count; i++) this.tables[i].clear();\n        for(var k = 0; k < this.views.count; k++) this.views[k].clear();\n    };\n    \n    /**\n     * 전체 초기화\n     */\n    MetaSet.prototype.reset  = function() {\n        this.tables.clear();\n        this.views.clear();\n    };\n\n    /**\n     * 불러오기/가져오기 (!! 병합용도가 아님)  \n     * 기존을 초기화 하고 불러오는 역활  \n     * \n     * @param {object | string} p_obj 불러오기 대상\n     * @param {function} [p_parse] 파서\n     */\n    MetaSet.prototype.load = function(p_obj, p_parse) {\n        var obj = p_obj;\n        // var mObj;\n\n        if (p_obj instanceof MetaSet) throw new ExtendError(/ES022/, null, []);\n\n        if (typeof obj === 'string') {\n            if (typeof p_parse === 'function') obj = p_parse(obj);\n            else obj = JSON.parse(obj, null);\n        }\n        \n        if (!_isObject(obj)) throw new ExtendError(/EL05455/, null, [typeof obj]);\n        \n        this.setObject(obj);\n    };\n\n    // MetaSet.prototype.load._TYPE = { params: String };\n\n    /**\n     * 메타셋 객체 출력(직렬화)\n     * \n     * @param {number} [p_vOpt] 옵션 (0, 1, 2)\n     * @param {function} [p_stringify] 파서출력 함수\n     * @param {string} [p_space] 공백\n     * @returns {string}\n     */\n    MetaSet.prototype.output = function(p_vOpt, p_stringify, p_space) {\n        var rObj = this.getObject(p_vOpt);\n        var str;\n        \n        if (typeof p_stringify === 'function') str = p_stringify(rObj, { space: p_space } );\n        else str = JSON.stringify(rObj, null, p_space);\n        return str;\n    };\n\n    /**\n     * object 로 로딩하기   \n     * JSON 스키마 규칙   \n     * { table: { columns: {}, rows: {} }}   \n     * { columns: {...}, rows: {} }  \n     * \n     * @param {object} p_obj mObject 또는 rObject 또는 entity\n     * @param {Number} [p_option=3] 기본값  = 3\n     * @param {Number} p_option.1 컬럼(구조)만 가져온다. \n     * @param {Number} p_option.2 로우(데이터)만 가져온다 (컬럼 참조)  \n     * @param {Number} p_option.3 컬럼/로우를 가져온다. 로우만 존재하면 로우 이름의 빈 컬럼을 생성한다. \n     */\n    MetaSet.prototype.read  = function(p_obj, p_opt) {\n        var opt = typeof p_opt === 'undefined' ? 3 : p_opt;\n        var entity;\n        var key;\n\n        if (typeof p_obj !== 'object' || p_obj === null) throw new ExtendError(/EL05456/, null, [typeof p_obj]);\n        if (typeof opt !== 'number') throw new ExtendError(/EL05457/, null, [typeof opt]);\n\n        if (p_obj instanceof MetaSet) {\n            this.setName = p_obj.setName;\n\n            for (var i = 0; i < p_obj.tables.count; i++) {\n                key = p_obj.tables.indexToKey(i);\n                if (this.tables.keyToIndex(key) < 0) this.tables.add(key);\n                entity = this.tables[key];\n                entity._readEntity(p_obj.tables[key], p_opt);\n            }\n            for (var k = 0; k < p_obj.views.count; k++) {\n                key = p_obj.views.indexToKey(k);\n                if (this.views.keyToIndex(key) < 0) this.views.add(key);\n                entity = this.views[key];\n                entity._readEntity(p_obj.views[key], p_opt);\n            }\n        } else {\n            if (opt % 2 === 1) this.readSchema(p_obj, opt === 3 ? true : false); // opt: 1, 3\n            if (Math.floor(opt / 2) >= 1) this.readData(p_obj); // opt: 2, 3\n        }\n    };\n    \n    /**\n     * 없으면 빈 컬럼을 생성해야 하는지?  \n     * 이경우에 대해서 명료하게 처리햐야함 !!  \n     * \n     * @param {object} p_obj object<Schema> | object<Guid>\n     * @param {boolean} p_createRow true 이면, row[0] 기준으로 컬럼을 추가함\n     */\n    MetaSet.prototype.readSchema  = function(p_obj, p_createRow) {\n        // var _this = this;\n        var metaSet = null;\n        var obj;\n        var entity;\n\n        if (!_isObject(p_obj)) throw new ExtendError(/EL05458/, null, [typeof p_obj]);\n\n        metaSet = p_obj['metaSet'] || p_obj['dataSet'] || p_obj;\n\n        if (MetaRegistry.isGuidObject(metaSet)) {\n            // if (MetaRegistry.hasRefer(metaSet)) metaSet = MetaRegistry.transformRefer(metaSet);  // 참조가 기본 존재함\n            metaSet = MetaRegistry.transformRefer(metaSet);\n            obj = MetaSet.transformSchema(metaSet);\n        } else obj = metaSet;\n\n        if (!_isSchema(obj)) throw new ExtendError(/EL05459/, null, [obj.tables, obj.views]);\n\n        if (obj['tables']) {\n            entity = obj['tables'];\n            if (entity['$key'] && Array.isArray(entity['$key'])) {\n                for (var i = 0; i < entity['$key'].length; i++) {\n                    $addEntity(entity['$key'][i], entity, this.tables);\n                }\n            } else for (var key in entity) $addEntity(key, entity, this.tables);\n        }\n        if (obj['views']) {\n            entity = obj['views'];\n            if (entity['$key'] && Array.isArray(entity['$key'])) {\n                for (var k = 0; k < entity['$key'].length; k++) {\n                    $addEntity(entity['$key'][k], entity, this.views);\n                }\n            } else for (var key2 in entity) $addEntity(key2, entity, this.views);\n        }\n        return;\n\n        // inner funciton\n        function $addEntity(key, p_collec, p_baseCollec) {\n            var prop = p_collec[key];\n            if (!p_baseCollec.exists(key)) p_baseCollec.add(key);\n            MetaRegistry.setMetaObject(prop, p_baseCollec[key]);                 \n            p_baseCollec[key]._readSchema(p_collec[key], p_createRow, obj);                    \n        }\n    };\n\n    /**\n     * row 들을 불러 온다\n     * \n     * @param {object} p_obj 읽을 데이터\n     */\n    MetaSet.prototype.readData  = function(p_obj) {\n        var metaSet = null;\n        var obj;\n\n        if (!_isObject(p_obj)) throw new ExtendError(/EL0545A/, null, [typeof p_obj]);\n\n        metaSet = p_obj['metaSet'] || p_obj['dataSet'] || p_obj;\n        \n        if (MetaRegistry.isGuidObject(metaSet)) {\n            // if (MetaRegistry.hasRefer(metaSet)) metaSet = MetaRegistry.transformRefer(metaSet);\n            metaSet = MetaRegistry.transformRefer(metaSet);\n            obj = MetaSet.transformSchema(metaSet);\n        } else obj = metaSet;\n\n        if (!_isSchema(obj)) throw new ExtendError(/EL0545B/, null, [obj.tables, obj.views]);\n        \n        if (_isObject(obj['tables'])) $createRow(obj['tables'], this.tables);\n        if (_isObject(obj['views'])) $createRow(obj['views'], this.views);\n\n        function $createRow(p_entity, p_collec) {\n            for (var key in p_entity) {\n                if (Object.prototype.hasOwnProperty.call(p_entity, key) && p_collec.exists(key)) {\n                    p_collec[key].readData(p_entity[key]);\n                }\n            }\n        }\n    };\n\n    /**\n     * 메타셋을 스키마 타입의 객체로 쓰기(내보내기)\n     * \n     * @param {number} p_vOpt 옵션\n     * @returns {object} 스키마 타입\n     */\n    MetaSet.prototype.write  = function(p_vOpt) {\n        // var vOpt = p_vOpt || 0;\n        // var oSch;\n        var oGuid = this.getObject(p_vOpt);\n\n        return MetaSet.transformSchema(oGuid);\n    };\n\n    /**\n     * 메타셋 스키마(컬럼)을 스키마 타입의 객체로 쓰기\n     * \n     * @param {number} p_vOpt 옵션\n     * @returns {object} 스키마 타입\n     */\n    MetaSet.prototype.writeSchema  = function(p_vOpt) {\n        var vOpt = p_vOpt || 0;\n        var schema = this.write(vOpt);\n        \n        for (var prop in schema.tables) {\n            if (prop.indexOf('$') < 0) schema.tables[prop].rows = [];\n        }\n        for (var prop2 in schema.views) {\n            if (prop2.indexOf('$') < 0) schema.views[prop2].rows = [];\n        }\n        return schema;\n        \n    };\n\n    /**\n     * 메타셋 데이터(로우)를 스키마 타입의 객체로 쓰기\n     * \n     * @param {number} p_vOpt 옵션\n     * @returns {object} 스키마 타입\n     */\n    MetaSet.prototype.writeData  = function(p_vOpt) {\n        var vOpt = p_vOpt || 0;\n        var schema = this.write(vOpt);\n\n        for (var prop in schema.tables) {\n            if (prop.indexOf('$') < 0) schema.tables[prop].columns = {};\n        }\n        for (var prop2 in schema.views) {\n            if (prop2.indexOf('$') < 0) schema.views[prop2].columns = {};\n        }\n        return schema;\n    };\n\n    /**\n     * 메타테이블의 변경사항 허락 : commit\n     */\n    MetaSet.prototype.acceptChanges  = function() {\n        for (let i = 0; i < this.tables.count; i++) {\n            this.tables[i].acceptChanges();                \n        }\n    };\n    \n    /**\n     * 메타테이블의 변경사항 취소 : rollback\n     */\n    MetaSet.prototype.rejectChanges  = function() {\n        for (let i = 0; i < this.tables.count; i++) {\n            this.tables[i].rejectChanges();                \n        }\n    };\n    \n    /**\n     * 메타테이블들의 변경 유무\n     * @returns {boolean} 변경 여부\n     */\n    MetaSet.prototype.hasChanges  = function() {\n        for (let i = 0; i < this.tables.count; i++) {\n            var table = this.tables[i];\n            if (table.getChanges().length > 0) return true;\n        }\n        return false;\n    };\n\n    return MetaSet;\n\n}(MetaElement));\n\nexport default MetaSet;\nexport { MetaSet };","/**** message-wrap.js | Message esm ****/\n//==============================================================\nimport { Message }          from 'logic-core';\nimport defaultCode          from './locales/default.js';\n\nconst isNode = typeof globalThis.isDOM === 'boolean' ? !globalThis.isDOM :  typeof process !== 'undefined' && process.versions !== null && process.versions.node !== null;\nlet localesPath = './locales';\n\nasync function absolutePath(localPath) {\n    try {\n        const { fileURLToPath } = await import('url');\n        const path = await import('path');\n        const __filename = fileURLToPath(import.meta.url);\n        const __dirname = path.dirname(__filename);\n        return path.resolve(__dirname, localesPath);\n    } catch (error) {\n        return localPath;  // Fallback to the original path\n    }\n}\n\nif (isNode) {\n    localesPath = await absolutePath(localesPath);\n}\n\nMessage.importMessage(defaultCode, localesPath);\n\nawait Message.autoDetect();\n\nexport default Message;\nexport { Message };","/* eslint-disable */\nexport default {\n    \"EL01610\": \"---- Common ----\",\n    \"EL01611\": \"validSelector; document object is required\",\n    \"EL01612\": \"loadScript(url, callback); url is not of string type\",\n    \"EL01613\": \"loadScript(url, callback); document object is required\",\n    \"EL01614\": \"\",\n    \"EL02310\": \"---- i-bind.js ----\",\n    \"EL02311\": \"addColumn() is an abstract method. [$1] must be implemented\",\n    \"EL02320\": \"---- i-bind-model.js ----\",\n    \"EL02321\": \"\",\n    \"EL02330\": \"---- i-bind-command.js ----\",\n    \"EL02331\": \"Execute() is an abstract method. [$1] must be implemented\",\n    \"EL02340\": \"---- i-command-callback.js ----\",\n    \"EL02341\": \"\",\n    \"EL02350\": \"---- i-model-callback.js ----\",\n    \"EL02351\": \"\",\n    \"EL02360\": \"---- i-service.js ----\",\n    \"EL02361\": \"\",\n    \"EL02370\": \"---- i-service-ajax.js ----\",\n    \"EL02371\": \"\",\n    \"EL054600\": \"---- html-column.js ----\",\n    \"EL054601\": \"$1.domType is object type\",\n    \"EL054602\": \"$1.isReadOnly is boolean type\",\n    \"EL054603\": \"$1.isHide is boolean type\",\n    \"EL054604\": \"$1.element is object type\",\n    \"EL054605\": \"$1.selector type is string | {key: string, type: string}\",\n    \"EL054606\": \"$1.getFilter is function type\",\n    \"EL054607\": \"$1.setFilter is function type\",\n    \"EL054608\": \"When you get $1.value, selector type='prop' must specify a subordinate name ($2. substitute name)\",\n    \"EL054609\": \"When obtaining $1.value, selector type='attr' must specify a subordinate name ($2. substitute name)\",\n    \"EL054610\": \"When obtaining $1.value, selector type='css' must specify a subordinate name ($2. subsidiary name)\",\n    \"EL054611\": \"Only selector type='value' | 'value' | 'text' | 'prop' | 'attr' | 'css' when you get $1.value.\",\n    \"EL054612\": \"Only number, string, boolean type is allowed when setting $1.value.\",\n    \"EL054613\": \"When setting $1.value, selector type='prop' must specify a substitute name ($2. substitute name)\",\n    \"EL054614\": \"When setting $1.value, selector type='attr' must specify a substitute name ($2. substitute name)\",\n    \"EL054615\": \"When setting $1.value, selector type='css' must specify a subordinate name ($2. subsidiary name)\",\n    \"EL054616\": \"Only selector type='value' | 'value' | 'text' | 'prop' | 'attr' | 'css' when setting $1.value.\",\n    \"EL054617\": \"\",\n    \"EL06100\": \"---- Meta.Entity.Bind.* ----\",\n    \"EL06110\": \"---- base-bind.js ----\",\n    \"EL06111\": \"$1._baseTable [MetaTable] instance not,\",\n    \"EL06112\": \"$1.onExecute is of type 'function' \",\n    \"EL06113\": \"$1.onExecutted is of type 'function' \",\n    \"EL06114\": \"addColumn() is an abstract method\",\n    \"EL061200\": \"---- bind-model.js ----\",\n    \"EL061201\": \"$1._tables value is not of type [MetaTableCollection]\",\n    \"EL061202\": \"$1._columnType value is not a child of [MetaColumn]\",\n    \"EL061203\": \"$1.items value is not of type [PropertyCollection]\",\n    \"EL061204\": \"$1.fn value is not of [PropertyCollection] type\",\n    \"EL061205\": \"$1.command value is not of type [PropertyCollection]\",\n    \"EL061206\": \"$1.cbFail is of type '(msg: stirng, valid: MetaView) => void'\",\n    \"EL061207\": \"$1.cbError 는  '(msg: string, status: number, response: object) => void' It's type.\",\n    \"EL061208\": \"$1.cbBaseBegin is of type '(cmd: BaseBindcommand) => void'\",\n    \"EL061209\": \"$1.cbBaseValid 는  '(valid: MetaView, cmd: BaseBindCommand) => boolean' It's type.\",\n    \"EL061210\": \"$1.cbBaseBind 는  '(view: MetaView, cmd: BaseBindCommand, config: object) => void' It's type.\",\n    \"EL061211\": \"$1.cbBaseResult 는  '(data: object, cmd: BaseBindCommand, res: object) => object' It's type.\",\n    \"EL061212\": \"$1.cbBaseOutput 는  '(views: MetaViewColleciton, cmd: BaseBindCommand, res: object) => void' It's type.\",\n    \"EL061213\": \"$1.cbBaseEnd 는  '(status: number, cmd: BaseBindCommand, res: object) => void' It's type.\",\n    \"EL061214\": \"$1.preRegister is of type '(bm: BaseBindModel) => void'\",\n    \"EL061215\": \"$1.preCheck is of type '(bm: BaseBindModel) => boolean'\",\n    \"EL061216\": \"$1.preReady is of type '(bm: BaseBindModel) => void'\",\n    \"EL061217\": \"Column name is not of type 'string'. typeof columnName = '$1'\",\n    \"EL061218\": \"_readItem(item, bEntity); item is of type string | string[]\",\n    \"EL061219\": \"_readItem(); target table does not exist\",\n    \"EL061220\": \"_readItem(); Target table is not of type [MetaTable]\",\n    \"EL061221\": \"_readItem(); column generation failed\",\n    \"EL061222\": \"setObject(oGuid, origin); oGuid.['_baseTable']$set lookup failed.guid = '$1'\",\n    \"EL061223\": \"setObject(oGuid, origin); oGuid.['_baseTable'] guid not found: guid = '$1'\",\n    \"EL061224\": \"addTable(name); name is of type 'string'. type of name = '$1'\",\n    \"EL061225\": \"addTable(name); name value '$1' is a reserved word,\",\n    \"EL061226\": \"addTable(name); name value '$1' is duplicated with an existing name\",\n    \"EL061227\": \"addColumn(column, cmds, views, bTable); column 은 string | MetaColumn It's type.\",\n    \"EL061228\": \"addColumn(column, cmds, views, bTable); cmds 은 string | string[] It's type.\",\n    \"EL061229\": \"addColumn (column, cmds, views, bTable); Target table does not exist\",\n    \"EL061230\": \"addColumn(column, cmds, views, bTable); cmds[$1] is not of string type. typeof cmds[$1] = '$2'\",\n    \"EL061231\": \"addColumn(cmds, views, bTable); target command does not exist. cmds[$1] = '$2'\",\n    \"EL061232\": \"addColumnValue(name, value, cmds, views, bTable); name 는 'string' It's type.\",\n    \"EL061233\": \"addColumnValue (name, value, cmds, views, bTable); Target table does not exist\",\n    \"EL061234\": \"mapping is not PropertyCollection | object type\",\n    \"EL061235\": \"Target table does not exist\",\n    \"EL061236\": \"column or item named '$1' does not exist // REVIEW: removed\", \n    \"EL061237\": \"setMapping (bTable); Mapping failed\",\n    \"EL061238\": \"addcommand() is an abstract method. [$1] must be inherited and implemented.\",\n    \"EL061239\": \"tables are of string | string[] type\",\n    \"EL061240\": \"setservice(service, passChk); service setup failed // REVIEW: removed\", \n    \"EL061241\": \"command views are of type string[]. type of views == '$1'\",\n    \"EL061242\": \"\",\n    \"EL061300\": \"---- bind-command.js ----\",\n    \"EL061301\": \"$1.valid [MetaView] instance not\",\n    \"EL061302\": \"$1.bind [MetaView] instance not\",\n    \"EL061303\": \"$1.outputOption Type is number | {option: number, index: number | number[] } 입니다.\",\n    \"EL061304\": \"$1.cbBegin is of type '(cmd: BaseBindcommand) => void'\",\n    \"EL061305\": \"$1.cbValid 는  '(valid: MetaView, cmd: BaseBindCommand) => boolean' It's type.\",\n    \"EL061306\": \"$1.cbBind 는  '(view: MetaView, cmd: BaseBindCommand, config: object) => void' It's type.\",\n    \"EL061307\": \"$1.cbResult 는  '(data: object, cmd: BaseBindCommand, res: object) => object' It's type.\",\n    \"EL061308\": \"$1.cbOutput 는  '(views: MetaViewColleciton, cmd: BaseBindCommand, res: object) => void' It's type.\",\n    \"EL061309\": \"$1.cbEnd 는  '(status: number, cmd: BaseBindCommand, res: object) => void' It's type.\",\n    \"EL061310\": \"Column name is not of type 'string'. typeof columnName = '$1'\",\n    \"EL061311\": \"Output['$1'] setting is MetaView type only\",\n    \"EL061312\": \"setObject(oGuid, origin); oGuid.['_baseTable'] $set lookup failed: guid = $1\",\n    \"EL061313\": \"setObject(oGuid, origin); oGuid.['_baseTable'] guid not found: guid = $1\",\n    \"EL061314\": \"setObject(oGuid, origin); oGuid.['_model'] $set lookup failed. guid = $1\",\n    \"EL061315\": \"Execute() is an abstract method. [$1] must be inherited and implemented.\",\n    \"EL061316\": \"addColumn(column, views, bTable); Column is string | Meta Column type.\",\n    \"EL061317\": \"addColumn(column, views, bTable); views are of the type string | string[].\",\n    \"EL061318\": \"addColumn(column, views, bTable); Target table does not exist\",\n    \"EL061319\": \"addColumn(column, views, bTable); views[$1] is not of string type. typeof views[$1] = '$2'\",\n    \"EL061320\": \"addColumn(column, views, bTable); target views do not exist. views[$1] = '$2'\",\n    \"EL061321\": \"addColumnValue(name, value, views, bTable); name is of type 'string'. typeof name = $1\",\n    \"EL061322\": \"addColumnValue (name, value, views, bTable); Target table does not exist\",\n    \"EL061323\": \"setColumn(names, views, bTable); The name is the string | string[] type.\",\n    \"EL061324\": \"setColumn(names, views, bTable); names[$1] is not a string type. typeof names[$1] = '$2'\",\n    \"EL061325\": \"setColumn(name, value, views, bTable); Target table does not exist\",\n    \"EL061326\": \"setColumn(name, value, views, bTable); column($1) does not exist in target table\",\n    \"EL061327\": \"release(names, views); The name is the string | string[] type.\",\n    \"EL061328\": \"release(names, views); views are of the type string | string[].\",\n    \"EL061329\": \"release(names, views); views[$1] is not of string type: typeof views[$1] = '$2'\",\n    \"EL061330\": \"release(names, views); view($1) named '$1' does not exist\",\n    \"EL061331\": \"newOutput(name); name is not of string type.\",\n    \"EL061332\": \"newOutput(name); name value '$1' is duplicated with existing name\",\n    \"EL061333\": \"removeOutput(name); name is not of string type: typeof name = '$1'\",\n    \"EL061334\": \"removeOutput(name); built-in output($1) cannot be deleted\",\n    \"EL061335\": \"removeOutput(names); view($1) named '$1' does not exist\",\n    \"EL061336\": \"$1.state type is number\",\n    \"EL06140\": \"---- empty ----\",\n    \"EL06150\": \"---- bind-model.js ----\",\n    \"EL06151\": \"$1.baseConfig is object type\",\n    \"EL06152\": \"$1.url is the string type\",\n    \"EL06153\": \"checkSelector(collection, viewLog); The collection is not of the [PropertyCollection] type.\",\n    \"EL06154\": \"getSelector(collection); The collection is not of the [PropertyCollection] type.\",\n    \"EL06155\": \"addcommand(name, opt, bTable); name is not of string type. typeof name = '$1'\",\n    \"EL06156\": \"addcommand(name, opt, bTable); command addition failed\",\n    \"EL06157\": \"setService(service, passChk); service setup failed\",\n    \"EL06158\": \"\",\n    \"EL06160\": \"---- bind-command-ajax.js ----\",\n    \"EL06161\": \"$1.config is object type\",\n    \"EL06162\": \"$1.url is the string type\",\n    \"EL06163\": \"_execOutput(data, res); data is not object | array type. typeof data = '$1'\",\n    \"EL06164\": \"_execOutput(data, res); outputOption.index[$1] Value is not number. typeof outputOption.index[$1] = '$2'\",\n    \"EL06165\": \"_execOutput(data, res); _output['$1'].columns does not exist\",\n    \"EL06166\": \"[$2]th row does not exist in _execOutput(data, res); _output['$1'].rows\",\n    \"EL06167\": \"\"\n}","/**** util-wrap.js | Util ****/\n//==============================================================\nimport { ExtendError }                  from 'logic-entity';\nimport { Util }                         from 'logic-entity';\n\n// local function\nfunction _isString(obj) {    // 공백아닌 문자 여부\n    if (typeof obj === 'string' && obj.length > 0) return true;\n    return false;\n}\n\n/**\n * 셀렉터의 유효성 검사 : 대상을 모두 검사하여 결과를 리턴한다.  \n * 주의!! DOM(web) 에서만 작동한다.  \n * \n * @param {string} p_selector \n * @returns {boolean} selector 유효성 여부\n * @memberof _L.Common.Util\n */\nUtil.validSelector = function validSelector(p_selector) {   // COVER:\n    // var selectors = [];\n\n    // selector 얻기\n    if (!_isString(p_selector)) return false;\n\n    if (typeof document === 'object' && typeof document.querySelector === 'function') {\n        if (document.querySelector(p_selector)) return true;\n        return false;\n\n    } else {\n        throw new ExtendError(/EL01611/, null, []);\n    }\n};\n\n/**\n * 스크립트를 로드한다.\n * \n * @param {*} url \n * @param {*} callback \n */\nUtil.loadScript = function loadScript(url, callback) {\n    var head;\n    var script;\n    \n    if (typeof url !== 'string') throw new ExtendError(/EL01612/, null, []);\n    if (typeof document !== 'object') throw new ExtendError(/EL01613/, null, []);\n\n    head = document.getElementsByTagName('head')[0];\n    script = document.createElement('script');\n\n    script.type= 'text/javascript';\n    // script.async = true;\n    // script.async = false;\n    script.defer = true;\n    script.src = url;\n    if (typeof callback === 'function') {\n        // script.onload = callback.bind(this);\n        script.addEventListener('load', function() { if(typeof callback === 'function'){ callback(); }});\n    }\n\n    head.appendChild(script);\n};\n\nexport default Util;\nexport { Util };","/**** i-bind.js | IBind ****/\n//==============================================================\nimport { ExtendError }                  from 'logic-entity';\n\n/**\n * 바인드 인터페이스입니다.\n * \n * @interface\n * @constructs IBind\n */\nclass IBind {\n\n    static _NS = 'Interface';    // namespace\n    static _KIND = 'interface';\n\n    constructor() {\n    }\n\n    /**\n     * 실행 전 이벤트\n     * \n     * @member {MetaTable}\n     */\n    _baseTable = [['_any_']];\n\n    /**\n     * 대상을 내보냅니다. (쓰기)\n     * \n     * @returns {any}\n     * @abstract\n     */\n    addColumn() {\n        throw new ExtendError(/EL02311/, null, ['IBind']);\n    }\n}\n\nexport default IBind;\nexport { IBind };","/**** i-bind-command.js | IBindCommand ****/\n//==============================================================\nimport { ExtendError }                  from 'logic-entity';\n\n/**\n * 바인드 명령 인터페이스입니다.\n * \n * @interface\n * @constructs IBindCommand\n */\nclass IBindCommand {\n    \n    static _NS = 'Interface';    // namespace\n    static _KIND = 'interface';\n\n    constructor() {\n    }\n    \n    /**\n     * 유효성 뷰\n     * \n     * @member {MetaView}\n     */\n    valid = {};\n\n    /**\n     * 바인드 뷰\n     * \n     * @member {MetaView}\n     */\n    bind = {};\n\n    /**\n     * 출력 뷰\n     * \n     * @member {MetaView}\n     */\n    output = {};\n\n    /**\n     * 출력 옵션\n     * \n     * @member {object}\n     */\n    outputOption = {\n        option: Number,\n        index: [[[Number], Number]]\n    };\n\n    /**\n     * 대상을 내보냅니다. (쓰기)\n     * \n     * @returns {any}\n     * @abstract\n     */\n    execute() {\n        throw new ExtendError(/EL02331/, null, ['IBindCommand']);\n    }\n}\n\nexport default IBindCommand;\nexport { IBindCommand };","/**** i-bind-model.js | IBindModel ****/\n//==============================================================\n\n/**\n * 바인드 모델 인터페이스입니다.\n * \n * @interface\n * @constructs IBindModel\n */\nclass IBindModel {\n\n    static _NS = 'Interface';    // namespace\n    static _KIND = 'interface';\n\n    constructor() {\n    }\n\n    /**\n     * 아이템\n     * \n     * @member {object[][]}\n     */\n    items = [[{}]];\n\n    /**\n     * 지역 함수\n     * \n     * @member {object[][]}\n     */\n    fn = [[{}]];\n\n    /**\n     * 바인드 명령\n     * \n     * @member {object[][]}\n     */\n    command = [[{}]];\n\n    /**\n     * 초기화 이전 등록\n     * \n     * @member {Function[][]}\n     */\n    preRegister = [[Function]];\n\n    /**\n     * 초기화 이전 검사\n     * \n     * @member {Function[][]}\n     */\n    preCheck = [[Function]];\n\n    /**\n     * 초기화 이전 준비완료\n     * \n     * @member {Function[][]}\n     */\n    preReady = [[Function]];\n}\n\nexport default IBindModel;\nexport { IBindModel };","/**** i-command-callback.js | ICommandCallback ****/\n//==============================================================\n\n/**\n * 명령 콜백 인터페이스입니다.\n * \n * @interface\n * @constructs ICommandCallback\n */\nclass ICommandCallback {\n\n    static _NS = 'Interface';    // namespace\n    static _KIND = 'interface';\n\n    constructor() {\n    }\n\n    /**\n     * 시작 콜백\n     * \n     * @member {function[][]}\n     */\n    cbBegin = [[Function]];\n\n    /**\n     * 유효성 콜백\n     * \n     * @member {function[][]}\n     */\n    cbValid = [[Function]];\n\n    /**\n     * 바인드 콜백\n     * \n     * @member {function[][]}\n     */\n    cbBind = [[Function]];\n\n    /**\n     * 결과 콜백\n     * \n     * @member {function[][]}\n     */\n    cbResult = [[Function]];\n\n    /**\n     * 출력 콜백\n     * \n     * @member {function[][]}\n     */\n    cbOutput = [[Function]];\n\n    /**\n     * 실행 종료 콜백\n     * \n     * @member {function[][]}\n     */\n    cbEnd = [[Function]];\n}\n\nexport default ICommandCallback;\nexport { ICommandCallback };","/**** i-model-callback.js | IModelCallback ****/\n//==============================================================\n\n/**\n * 모델 콜백 인터페이스입니다.\n * \n * @interface\n * @constructs IModelCallback\n */\nclass IModelCallback {\n\n    static _NS = 'Interface';    // namespace\n    static _KIND = 'interface';\n\n    constructor() {\n    }\n\n    /**\n     * 실패 콜백\n     * \n     * @member {function[][]}\n     */\n    cbFail = [[Function]];\n\n    /**\n     * 오류 콜백\n     * \n     * @member {function[][]}\n     */\n    cbError = [[Function]];\n\n    /**\n     * 기본 시작 콜백\n     * \n     * @member {function[][]}\n     */\n    cbBaseBegin = [[Function]];\n\n    /**\n     * 기본 유효성 콜백\n     * \n     * @member {function[][]}\n     */\n    cbBaseValid = [[Function]];\n\n    /**\n     * 기본 바인드 콜백\n     * \n     * @member {function[][]}\n     */\n    cbBaseBind = [[Function]];\n\n    /**\n     * 기본 결과 콜백\n     * \n     * @member {function[][]}\n     */\n    cbBaseResult = [[Function]];\n\n    /**\n     * 기본 출력 콜백\n     * \n     * @member {function[][]}\n     */\n    cbBaseOutput = [[Function]];\n\n    /**\n     * 기본 실행 종료 콜백\n     * \n     * @member {function[][]}\n     */\n    cbBaseEnd = [[Function]];\n}\n\nexport default IModelCallback;\nexport { IModelCallback };","/**** i-service.js | IService ****/\n//==============================================================\nimport { IBindModel }                   from './i-bind-model.js';\nimport { IModelCallback }               from './i-model-callback.js';\n\n/**\n * 서비스 인터페이스입니다.\n * \n * @interface\n * @constructs IService\n */\nclass IService {\n\n    static _UNION = [IBindModel, IModelCallback];\n    static _NS = 'Interface';\n    static _KIND = 'interface';\n\n    constructor() {\n    }\n\n    /**\n     * 테이블\n     * \n     * @member {object[][]}\n     */\n    tables = [[ String, [String], {} ]];\n\n    /**\n     * 매핑 컬렉션\n     * \n     * @member {object[][]}\n     */\n    mapping = [[{}]];\n\n    // IBindModel 구성 요소\n    items = [[{}]];\n    fn = [[{}]];\n    command = [[{}]];\n    preRegister = [[Function]];\n    preCheck = [[Function]];\n    preReady = [[Function]];\n\n    // IModelCallback 구성 요소\n    cbFail = [[Function]];\n    cbError = [[Function]];\n    cbBaseBegin = [[Function]];\n    cbBaseValid = [[Function]];\n    cbBaseBind = [[Function]];\n    cbBaseResult = [[Function]];\n    cbBaseOutput = [[Function]];\n    cbBaseEnd = [[Function]];\n}\n\nexport default IService;\nexport { IService };","/**** i-service-ajax.js | IAjaxService ****/\n//==============================================================\nimport { IService }                     from './i-service.js';\n\n/**\n * AJAX 서비스 인터페이스입니다.\n * \n * @interface\n * @extends IService\n * @constructs IAjaxService\n */\nclass IAjaxService extends IService {\n    \n    static _NS = 'Interface';    // namespace\n    static _KIND = 'interface';\n\n    constructor() {\n        super();\n    }\n\n    /**\n     * 기본 AJAX Setup 객체\n     * \n     * @member {object[][]}\n     */\n    baseConfig = [[{}]];\n\n    /**\n     * 기본 요청 url\n     * \n     * @member {string[][]}\n     */\n    url = [[String]];\n}\n\nexport default IAjaxService;\nexport { IAjaxService };","/**** html-column.js | HTMLColumn ****/\n//==============================================================\nimport { ExtendError }                  from 'logic-entity';\nimport { Type }                         from 'logic-entity';\nimport { MetaColumn }                   from 'logic-entity';\nimport { Util }                         from './util-wrap.js';\n\nfunction setDocument(flag, selector, option, value) {\n    // 요소 선택: key 셀렉터에 해당하는 첫 번째 요소를 선택합니다.\n    var elem = document.querySelector(selector);\n\n    flag = flag.toLowerCase();\n\n    if (elem) {\n        // 1. jquery(key).val(value);\n        // → 폼 요소(input, select, textarea 등)의 값을 설정합니다.\n        if (flag === 'val' || flag === 'value') {\n            elem.value = value;\n            return;\n        }\n        // 2. jquery(key).text(value);\n        // → 요소의 텍스트 콘텐츠를 설정합니다.\n        if (flag === 'text') {\n            elem.textContent = value;\n            return;\n        }\n        // 3. jquery(key).html(value);\n        // → 요소의 내부 HTML(markup)을 설정합니다.\n        if (flag === 'html') {\n            elem.innerHTML = value;\n            return;\n        }\n        // 4. jquery(key).prop(option, value);\n        // → DOM 프로퍼티를 설정합니다. 예를 들어, option이 \"checked\"인 경우 elem.checked = value;\n        if (flag === 'prop') {\n            // elem.prop(option, value);\n            // → 요소의 프로퍼티 값을 설정합니다.\n            // elem[option] = value;\n            elem[option] = value;\n            return;\n        }\n        // 5. jquery(key).attr(option, value);\n        // → 요소의 attribute 값을 설정합니다.\n        if (flag === 'attr') {\n            elem.setAttribute(option, value);\n            return;\n        }\n        // 6. jquery(key).css(option, value);\n        // → 인라인 스타일을 설정합니다. option이 CSS 프로퍼티 이름(예: \"backgroundColor\" 또는 \"background-color\")이어야 합니다.\n        //    만약 하이픈 표기법(\"background-color\")를 사용하는 경우, 이를 camelCase(\"backgroundColor\")로 변환해주어야 합니다.\n        if (flag === 'css') {\n            elem.style[option] = value;\n            return;\n        }\n    }\n}\n\nfunction getDocument(flag, selector, option) {\n    // 요소 선택: key 셀렉터에 해당하는 첫 번째 요소를 선택합니다.\n    var elem = document.querySelector(selector);\n    \n    flag = flag.toLowerCase();\n\n    if (elem) {\n        // 1. jquery(key).val(__val);\n        // → 폼 요소(input, select, textarea 등)의 값을 설정합니다.\n        if (flag === 'val' || flag === 'value') {\n            return elem.value;\n        }\n        // 2. jquery(key).text(__val);\n        // → 요소의 텍스트 콘텐츠를 설정합니다.\n        if (flag === 'text') {\n            return elem.textContent;\n        }\n        // 3. jquery(key).html(__val);\n        // → 요소의 내부 HTML(markup)을 설정합니다.\n        if (flag === 'html') {\n            return elem.innerHTML;\n        }\n        // 4. jquery(key).prop(option, __val);\n        if (flag === 'prop') {\n            // elem.prop(option, __val);\n            // → 요소의 프로퍼티 값을 설정합니다.\n            // elem[option] = __val;\n            return elem[option];\n        }\n        // 5. jquery(key).attr(option, __val);\n        if (flag === 'attr') {\n            return elem.getAttribute(option);\n        }\n        // 6. jquery(key).css(option, __val);\n        if (flag === 'css') {\n            return elem.style[option];\n            // var computedStyle = window.getComputedStyle(elem);\n            // return computedStyle.getPropertyValue(option);\n        }\n    }\n    return '';\n}\n\nvar HTMLColumn  = (function (_super) {\n    /**\n     * HTML 컬럼\n     * \n     * @constructs HTMLColumn\n     * @extends MetaColumn\n     */\n    function HTMLColumn(p_name, p_entity, p_option) {\n        _super.call(this, p_name, p_entity, p_option);\n\n        var domType       = null;\n        var isReadOnly    = false;\n        var isHide        = false;\n        var element       = null;\n        var getFilter     = null;\n        var setFilter     = null;\n        // var selector      = { key: '', type: 'none' };\n        var selector      = null;\n\n        /**\n         * 아이템 DOM 타입\n         * \n         * @member {*} HTMLColumn#domType\n         */\n        Object.defineProperty(this, 'domType', {\n            get: function() { return domType; },\n            set: function(nVal) { \n                // TODO:: 자료종류 {input: {type: 'text'...}} 만들어야함 => 필요성 검토해야함\n                // TODO: DOM 인스턴스 여부로 검사해야함\n                if(typeof nVal !== 'object') throw new ExtendError(/EL054601/, null, [this.constructor.name]);\n                domType = nVal;\n            },\n            configurable: true,\n            enumerable: true\n        });\n        \n        /**\n         * 읽기전용 여부\n         * \n         * @member {*} HTMLColumn#isReadOnly\n         */\n        Object.defineProperty(this, 'isReadOnly', {\n            get: function() { return isReadOnly; },\n            set: function(nVal) { \n                if(typeof nVal !== 'boolean') throw new ExtendError(/EL054602/, null, [this.constructor.name]);\n                isReadOnly = nVal;\n            },\n            configurable: true,\n            enumerable: true\n        });\n        \n        /**\n         * 숨김 여부\n         * \n         * @member {*} HTMLColumn#isHide\n         */\n        Object.defineProperty(this, 'isHide', {\n            get: function() { return isHide; },\n            set: function(nVal) { \n                if(typeof nVal !== 'boolean') throw new ExtendError(/EL054603/, null, [this.constructor.name]);\n                isHide = nVal;\n            },\n            configurable: true,\n            enumerable: true\n        });\n        \n        /**\n         * DOM 요소\n         * \n         * @member {*} HTMLColumn#element\n         */\n        Object.defineProperty(this, 'element', {\n            get: function() { return element; },\n            set: function(nVal) {       // TODO: DOM 인스턴스 여부로 검사해야함\n                if(typeof nVal !== 'object') throw new ExtendError(/EL054604/, null, [this.constructor.name]);\n                element = nVal;\n            },\n            configurable: true,\n            enumerable: true\n        });\n\n        /**\n         * 셀렉터\n         * \n         * @member {*} HTMLColumn#selector\n         * @example\n         * type\n         *  - val | value   : 요소의 value 속성값\n         *  - text          : 요소의 텍스트값\n         *  - html          : 요소의 html값\n         *  - css.속성명    : css 의 속성값 (객체)\n         *  - prop.속성명   : 요소의 속성명값 (초기상태기준)\n         *  - attr.속성명   : 요소의 속성명값 (현재상태)\n         *  - none         : 아무일도 하지 않음, 표현의 목적\n         */\n        Object.defineProperty(this, 'selector', {\n            get: function() { return selector; },\n            // set: function(nVal) { \n            //     var newSelector = { key: '', type: 'value' };\n\n            //     if (typeof nVal === 'string') {\n            //         // selector.key = nVal;\n            //         selector = newSelector;\n            //         selector.key = nVal;\n            //     } else if (typeof nVal === 'object' && typeof nVal.key !== 'undefined') {\n            //         selector = nVal;\n            //     } else {\n            //         throw new Error('Only [selector] type \"string | object.key\" can be added');\n            //     }\n            //     // selector = selector;\n            // },\n            set: function(nVal) { \n                var newSelector = { key: '', type: 'none' };\n                if (typeof nVal === 'string' ) {\n                    newSelector['key'] = nVal;\n                } else if (typeof nVal === 'object') {\n                    if (typeof nVal['key'] === 'string') newSelector['key'] = nVal['key'];\n                    if (typeof nVal['type'] === 'string') newSelector['type'] = nVal['type'].toLowerCase();\n                } else throw new ExtendError(/EL054605/, null, [this.constructor.name]);\n                selector = newSelector;\n            },\n            configurable: true,\n            enumerable: true\n        });\n\n        /**\n         * value 값 필터\n         * \n         * @member {Function} HTMLColumn#getFilter\n         */\n        Object.defineProperty(this, 'getFilter', {\n            get: function() { return getFilter; },\n            set: function(val) { \n                if(typeof val !== 'function') throw new ExtendError(/EL054606/, null, [this.constructor.name]);\n                getFilter = val;\n            },\n            configurable: true,\n            enumerable: true\n        });\n                    \n        /**\n         * value 값 필터\n         * \n         * @member {Function} HTMLColumn#setFilter\n         */\n        Object.defineProperty(this, 'setFilter', {\n            get: function() { return setFilter; },\n            set: function(val) { \n                if(typeof val !== 'function') throw new ExtendError(/EL054607/, null, [this.constructor.name]);\n                setFilter = val;\n            },\n            configurable: true,\n            enumerable: true\n        });\n\n        /**\n         * 아이템 값 (오버라이딩)\n         * \n         * @override\n         * @member {*} HTMLColumn#value\n         */\n        Object.defineProperty(this, 'value', {\n            get: function() { \n                var __val;\n                var key, type, option;\n\n                // 우선순위 : 1\n                if (typeof this.getter === 'function' ) {\n                    \n                    __val = this.getter.call(this);\n                    \n                    // 검사 및 이벤트 발생\n                    if (this.$value !== null && this.$value !== __val) {\n                        this._onChanged(__val, this.$value);\n                        this.$value = __val;   // 내부에 저장\n                    }\n\n                // 우선순위 : 2\n                // } else if (__selector !== null && __filter === null) {\n                } else if (selector !== null || typeof this.getFilter === 'function') {\n\n                    const isNode = typeof process !== 'undefined' && process.versions !== null && process.versions.node !== null && globalThis.isDOM !== true;\n                    // node 에서는 강제 종료함\n                    if (!isNode) {\n\n                        key = this.selector.key;\n                        type = this.selector.type.split('.')[0].toLowerCase();\n                        option = this.selector.type.split('.')[1] || '';\n                        // option = type.indexOf('.') > -1 ? type.substr(type.indexOf('.') + 1) : '';\n                       \n                        if (type !== 'none'){\n\n                            if (type === 'prop' && option === '') throw new ExtendError(/EL054608/, null, [this.constructor.name, key]);\n                            if (type === 'attr' && option === '') throw new ExtendError(/EL054609/, null, [this.constructor.name, key]);\n                            if (type === 'css' && option === '') throw new ExtendError(/EL054610/, null, [this.constructor.name, key]);\n                            if (['val', 'value', 'text', 'html', 'prop', 'attr', 'css'].indexOf(type) < 0) throw new ExtendError(/EL054611/, null, [this.constructor.name, key]);\n                            __val = getDocument(type, key, option);\n\n                            // if (type === 'value' || type === 'val') {\n                            //     __val = jquery(key).val();\n                            // } else if (type === 'text') {\n                            //     __val = jquery(key).text();\n                            // } else if (type === 'html') {\n                            //     __val = jquery(key).html();\n                            // } else if (type.indexOf('prop') > -1) {\n                            //     if (option === '') throw new ExtendError(/EL054608/, null, [this.constructor.name, key]);\n                            //     else __val = jquery(key).prop(option);\n                            // } else if (type.indexOf('attr') > -1) {\n                            //     if (option === '') throw new ExtendError(/EL054609/, null, [this.constructor.name, key]);\n                            //     else __val = jquery(key).attr(option);\n                            // } else if (type.indexOf('css') > -1) {\n                            //     if (option === '') throw new ExtendError(/EL054610/, null, [this.constructor.name, key]);\n                            //     else __val = jquery(key).css(option);\n                            // } else {\n                            //     throw new ExtendError(/EL054611/, null, [this.constructor.name]);\n                            // }\n                            \n                            // selector 검사\n                            if (typeof __val === 'undefined' || __val === null) {\n                                console.warn('selector key = '+ key +', type = '+ type +'에 일치하는 값이 없습니다. ');                    \n                            } \n\n                            // 검사 및 이벤트 발생\n                            if (this.__sValue !== null && this.__sValue !== __val && __val) {\n                                this._onChanged(__val, this.__sValue);\n                                this.__sValue = String(__val);  // sValue 저장\n                            }\n\n                        }\n                    }\n\n                    // 필터 적용 : get\n                    if (typeof this.getFilter === 'function') __val = this.getFilter.call(this, __val);\n                \n                // 우선순위 : 3        \n                } else {\n                    __val = this.$value;\n                }\n                    \n                /**\n                 * 분기 처리값 '__val' 없는경우 (null, undefined)\n                 *  - this.$value 초기화 되지 않은 경우\n                 *  - getter 리턴이 없는 경우\n                 *  - node selector 를 사용한 경우\n                 *  - selector 매칭값이 없는 경우\n                 */\n                if (typeof __val === 'undefined' || __val === null) {\n                    // __val = this.$value || this.default;  REVIEW: 제거대상\n                    // __val = this.$value;\n                    __val = this.$value === null ? this.default : this.$value;\n                }\n\n                // Get값과 내부값이 다를경우 값 설정 (내부적으로 change 이벤트 발생함)\n                // if (__val !== this.$value) {\n                //     this.value = __val;\n                // }\n\n                return __val; \n            },\n            set:  function(val) { \n                var __val, _fVal;\n                var key, type, option;\n                var _oldVal = this.$value;\n                // var _isSetFilter = true;   // selector 설정 여부\n\n                // if (typeof this.setter === 'function' ) _val = this.setter.call(this, val);\n                \n                // // settter 의 리턴이 여부\n                // if (typeof _val !== 'undefined') __val = _val;\n                // else __val = val;\n                if (typeof this.setter === 'function') __val = this.setter.call(this, val) || val;\n                else __val = val;\n\n                // __val = __val === null ? '' : __val;  // null 등록 오류 처리\n                \n                if (this._valueTypes.length > 0) Type.matchType([this._valueTypes], __val);\n                // if(['number', 'string', 'boolean'].indexOf(typeof __val) < 0) {\n                //     throw new ExtendError(/EL054612/, null, [this.constructor.name]);   // TODO: EL054612 에러 코드 제거됨\n                // }\n                this.$value = __val;   // 내부에 저장\n        \n                if (selector !== null || typeof this.setFilter === 'function') {\n\n                    if (typeof this.setFilter === 'function') {\n                        _fVal = this.setFilter.call(this, __val);\n                    }\n                    \n                    // 셀렉터 설정 값 1> 필터값, 2> __value\n                    __val = _fVal || __val;\n                    const isNode = typeof process !== 'undefined' && process.versions !== null && process.versions.node !== null && globalThis.isDOM !== true;\n                    // node 에서는 강제 종료함\n                    if (!isNode) {\n\n                        // 필터 적용 : set\n                        // if (typeof this.setFilter === 'function') {\n                        //     __val = this.setFilter.call(this, __val);\n                        //     _isSetFilter = __val ? true : false;\n                        // }\n\n                        // if (typeof this.setFilter === 'function') {\n                        //     _fVal = this.setFilter.call(this, __val);\n                        // }\n                        \n                        // // 셀렉터 설정 값 1> 필터값, 2> __value\n                        // __val = _fVal || __val;\n\n                        // 셀렉터 내부값 저장\n                        this.__sValue = String(__val);\n\n                        // key = this.selector.key;\n                        // type = this.selector.type;\n                        // option = type.indexOf('.') > -1 ? type.substr(type.indexOf('.') + 1) : '';\n                        \n                        key = this.selector.key;\n                        type = this.selector.type.split('.')[0].toLowerCase();\n                        option = this.selector.type.split('.')[1] || '';\n\n                        // 유효한 셀렉터 이면서, 설정할 ....\n                        // if (type !== 'none' && type !== '' && _isSetFilter){\n                        if (type !== 'none'){\n\n                            if (type === 'prop' && option === '') throw new ExtendError(/EL054613/, null, [this.constructor.name, key]);\n                            if (type === 'attr' && option === '') throw new ExtendError(/EL054614/, null, [this.constructor.name, key]);\n                            if (type === 'css' && option === '') throw new ExtendError(/EL054615/, null, [this.constructor.name, key]);\n                            if (['val', 'value', 'text', 'html', 'prop', 'attr', 'css'].indexOf(type) < 0) throw new ExtendError(/EL054616/, null, [this.constructor.name, key]);\n                            setDocument(type, key, option, __val);\n\n                            // if (type === 'value' || type === 'val') {\n                            //     jquery(key).val(__val);\n                            // } else if (type === 'text') {\n                            //     jquery(key).text(__val);\n                            // } else if (type === 'html') {\n                            //     jquery(key).html(__val);\n                            // } else if (type.indexOf('prop') > -1) {\n                            //     if (option === '') throw new ExtendError(/EL054613/, null, [this.constructor.name, key]);\n                            //     else jquery(key).prop(option, __val);\n                            // } else if (type.indexOf('attr') > -1) {\n                            //     if (option === '') throw new ExtendError(/EL054614/, null, [this.constructor.name, key]);\n                            //     else jquery(key).attr(option, __val);\n                            // } else if (type.indexOf('css') > -1) {\n                            //     if (option === '') throw new ExtendError(/EL054615/, null, [this.constructor.name, key]);\n                            //     else jquery(key).css(option, __val);\n                            // } else {\n                            //     throw new ExtendError(/EL054616/, null, [this.constructor.name]);\n                            // }\n                        }\n                    }\n                }\n\n                // 검사 및 이벤트 발생 : 타입간 호환성\n                if (_oldVal !== __val && __val) this._onChanged(__val, _oldVal);\n\n                // // 이벤트 발생\n                // this._onChanged();\n            },\n            configurable: true,\n            enumerable: true\n        });\n\n        // 아이템 옵션속성 추가\n        if (typeof p_option === 'object' ) {\n            for(var prop in p_option) {\n                // POINT: get/setFilter 는 후처리해야함\n                if (p_option.hasOwnProperty(prop) && \n                    ['domType', 'isReadOnly', 'isHide', 'element', 'selector', 'getFilter', 'setFilter'].indexOf(prop) > -1) {\n                    this[prop] = p_option[prop];\n                }\n            }\n        }\n        // 기본값 설정\n        // this.default = this.default || '';\n    }\n    Util.inherits(HTMLColumn, _super);\n    \n    HTMLColumn._UNION = [];\n    HTMLColumn._NS = 'Meta.Entity';                                 // namespace\n    HTMLColumn._PARAMS = ['columnName', '_entity'];                 // creator parameter        // REVIEW: 통일 시켜야함\n    HTMLColumn._VALUE_TYPE = [null, String, Number, Boolean];\n\n    /**\n     * HTMLColumn 을 복제합니다.\n     * \n     * @returns {HTMLColumn}\n     */\n    HTMLColumn.prototype.clone  = function(p_entity) {\n        // var clone;\n        // var rObj = this.getObject();\n        var entity = p_entity ? p_entity : this._entity;\n\n        // var top = _super.prototype.clone.call(this);\n        var clone = new HTMLColumn(this.columnName, entity);\n\n        // for(var prop in top) {\n        //     if (top.hasOwnProperty(prop)) {\n        //         if (top[prop]) clone[prop] = top[prop];\n        //     }\n        // }\n        if (this['default'] !== '') clone.default = this['default'];\n        if (this['caption'] !== '') clone.caption = this['caption'];\n        if (this['required']) clone.required = this['required'];\n        // if (this['optional']) clone.isNullPass = this['optional'];\n        if (this['constraints']) clone.constraints = this['constraints'];\n        if (this['getter']) clone.getter = this['getter'];\n        if (this['setter']) clone.setter = this['setter'];\n        if (this['$alias'] !== null) clone.$alias = this['$alias'];\n        if (this['$value'] !== null) clone.$value = this['$value'];\n        if (this['domType']) clone.domType = this['domType'];\n        if (this['isReadOnly']) clone.isReadOnly = this['isReadOnly'];\n        if (this['isHide']) clone.isHide = this['isHide'];\n        if (this['element']) clone.element = this['element'];\n        if (this['selector']) clone.selector = this['selector'];\n        if (this['getFilter']) clone.getFilter = this['getFilter'];\n        if (this['setFilter']) clone.setFilter = this['setFilter'];\n\n        // if (this.selector) clone.__selector        = this.__selector.concat([]); // 배열 + 함수형\n        \n        return clone;\n    };\n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.  \n     * \n     * @param {number} p_vOpt 가져오기 옵션  \n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)  \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)  \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    HTMLColumn.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        // var vOpt = p_vOpt || 0;\n        // var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        if (this.domType !== null) obj['domType'] = this.domType;\n        if (this.isReadOnly !== false) obj['isReadOnly'] = this.isReadOnly;\n        if (this.isHide !== false) obj['isHide'] = this.isHide;\n        if (this.element !== null) obj['element'] = this.element;\n        if (this.selector !== null) obj['selector'] = this.selector;\n        if (this.getFilter !== null) obj['getFilter'] = this.getFilter;\n        if (this.setFilter !== null) obj['setFilter'] = this.setFilter;\n        // if (this.value !== null) obj['value'] = this.value; // 상위에서 설정함\n        return obj;                        \n    };\n\n    /**\n     * 현재 객체를 초기화 후, 지정한 guid 타입의 객체를 사용하여 설정합니다.  \n     * \n     * @param {object} p_oGuid guid 타입의 객체\n     * @param {object} [p_origin] 현재 객체를 설정하는 원본 guid 객체  \n     * 기본값은 p_oGuid 객체와 동일\n     */\n    HTMLColumn.prototype.setObject = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        \n        // var origin = p_origin ? p_origin : p_oGuid;\n        // var entity;\n\n        if (p_oGuid['domType']) this.domType = p_oGuid['domType'];\n        if (typeof p_oGuid['isReadOnly'] !== 'undefined') this.isReadOnly = p_oGuid['isReadOnly'];\n        if (typeof p_oGuid['isHide'] !== 'undefined') this.isHide = p_oGuid['isHide'];\n        if (p_oGuid['element']) this.element = p_oGuid['element'];\n        if (p_oGuid['selector']) this.selector = p_oGuid['selector'];\n        if (p_oGuid['getFilter']) this.getFilter = p_oGuid['getFilter'];\n        if (p_oGuid['setFilter']) this.setFilter = p_oGuid['setFilter'];\n    };\n\n    // TODO: 컬럼간 변환 기능\n    // HTMLColumn.prototype.toEntityColumn = function() {\n    // };\n\n    return HTMLColumn;\n\n}(MetaColumn));\n\nexport default HTMLColumn;\nexport { HTMLColumn };","/**** base-bind.js | BaseBind ****/\n//==============================================================\nimport { ExtendError }                  from 'logic-entity';\nimport { Type }                         from 'logic-entity';\nimport { EventEmitter }                 from 'logic-entity';\nimport { MetaObject }                   from 'logic-entity';\nimport { MetaTable }                    from 'logic-entity';\nimport { Util }                         from './util-wrap.js';\nimport { IBind }                        from './i-bind.js';\n\n\nvar BaseBind = (function (_super) {\n    /**\n     * 기본 바인드 (최상위)\n     * \n     * @constructs BaseBind\n     * @abstract\n     * @extends MetaObject\n     */\n    function BaseBind() {\n        _super.call(this);\n\n        var $event = new EventEmitter(this, this);\n        var $KEYWORD = [];\n        var _baseTable = null;\n\n        /** \n         * 이벤트 객체\n         * \n         * @private \n         * @member {EventEmitter} BaseBind#$event  \n         */\n        Object.defineProperty(this, '$event', {\n            get: function() { return $event; },\n            configurable: false,\n            enumerable: false,\n        });\n        \n        /** \n         * 컬렉션 예약어\n         * \n         * @private\n         * @member {array<string>}  BaseCollection#$KEYWORD  \n         */\n        Object.defineProperty(this, '$KEYWORD', {\n            get: function() { return $KEYWORD; },\n            set: function(newVal) { $KEYWORD = $KEYWORD.concat(newVal); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * 기본 엔티티\n         * \n         * @member BaseBind#_baseTable\n         * @protected\n         */\n        Object.defineProperty(this, '_baseTable', {\n            get: function() { return _baseTable; },\n            set: function(nVal) { \n                if (!(nVal instanceof MetaTable)) throw new ExtendError(/EL06111/, null, [this.constructor.name]);\n                _baseTable = nVal;\n            },\n            configurable: true,\n            enumerable: true\n        });  \n\n        /**\n         * 실행 전 이벤트\n         * \n         * @event BaseBind#onExecute\n         */\n        Object.defineProperty(this, 'onExecute', {\n            enumerable: true,\n            configurable: true,\n            set: function(p_fn) {\n                if (typeof p_fn !== 'function') throw new ExtendError(/EL06112/, null, [this.constructor.name]);\n                this.$event.on('execute', p_fn);\n            }\n        });\n\n        /**\n         * 실행후 이벤트\n         * \n         * @event BaseBind#onExecuted\n         */\n        Object.defineProperty(this, 'onExecuted', {\n            enumerable: true,\n            configurable: true,\n            set: function(p_fn) {\n                if (typeof p_fn !== 'function') throw new ExtendError(/EL06113/, null, [this.constructor.name]);\n                this.$event.on('executed', p_fn);\n            }\n        });\n\n        // 예약어 등록\n        this.$KEYWORD = ['equal', 'instanceOf', 'getTypes'];            // IObject\n        this.$KEYWORD = ['_guid', '_type', 'getObject', 'setObject'];   // IMarshal\n        this.$KEYWORD = ['$event', '$KEYWORD', '_baseTable'];\n        this.$KEYWORD = ['addColumn'];\n        this.$KEYWORD = ['onExecute', 'onExecuted'];\n        this.$KEYWORD = ['_onExecute', '_onExecuted'];\n\n        Util.implements(BaseBind, this);        // strip:\n    }\n    Util.inherits(BaseBind, _super);\n\n    BaseBind._UNION = [IBind];\n    BaseBind._NS = 'Meta.Bind';\n    BaseBind._PARAMS = [];\n    BaseBind._KIND = 'abstract';\n\n    /**\n     * 실행 전 이벤트 리스너\n     * \n     * @param {*} p_command 바인드 커맨드\n     * @param {*} [p_model] 바인드 모델\n     * @listens BaseBind#_onExecute\n     */\n    BaseBind.prototype._onExecute = function(p_model, p_command) {\n        this.$event.emit('execute', p_model, p_command, this);\n    };\n\n    /**\n     * 실행 후 이벤트 리스너\n     * \n     * @param {*} p_command 바인드 커맨드\n     * @param {*} [p_model] 바인드 모델\n     * @listens BaseBind#_onExecuted\n     */\n    BaseBind.prototype._onExecuted = function(p_model, p_command) {\n        this.$event.emit('executed', p_model, p_command, this); \n    };\n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.  \n     * @param {number} p_vOpt 가져오기 옵션  \n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)  \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)  \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    BaseBind.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        // var vOpt = p_vOpt || 0;\n        // var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        if (!Type.deepEqual(this.$event.$storage, {})) {\n            obj['$storage'] = this.$event.$storage;\n        }\n        return obj;                        \n    };\n\n    /**\n     * 현재 객체를 초기화 후, 지정한 guid 타입의 객체를 사용하여 설정합니다.\n     * \n     * @param {object} p_oGuid guid 타입의 객체\n     * @param {object} [p_origin] 현재 객체를 설정하는 원본 guid 객체  \n     * 기본값은 p_oGuid 객체와 동일\n     */\n    BaseBind.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        \n        // var origin = p_origin ? p_origin : p_oGuid;\n        // var baseTable;\n        \n        if (p_oGuid['$storage']) {\n            this.$event.$storage = p_oGuid['$storage'];\n        }\n    };\n\n    /** \n     * 메타테이블에 컬럼을 추가합니다.\n     * \n     * @abstract\n     */\n    BaseBind.prototype.addColumn = function() {\n        throw new ExtendError(/EL06114/, null, [this.constructor.name]);\n    };\n\n    return BaseBind;\n\n}(MetaObject));\n\nexport default BaseBind;\nexport { BaseBind };","/**** bind-command.js | BaseBindCommand ****/\n//==============================================================\nimport { ExtendError }                  from 'logic-entity';\nimport { MetaRegistry }                 from 'logic-entity';\nimport { MetaColumn }                   from 'logic-entity';\nimport { MetaTable }                    from 'logic-entity';\nimport { MetaView }                     from 'logic-entity';\nimport { MetaViewCollection }           from 'logic-entity';\nimport { Util }                         from './util-wrap.js';\nimport { IBindCommand }                 from './i-bind-command.js';\nimport { ICommandCallback }             from './i-command-callback.js';\nimport { BaseBind }                     from './base-bind.js';\n\nvar BaseBindCommand  = (function (_super) {\n    /**\n     * 바인드 명령 \n     * \n     * @constructs BaseBindCommand\n     * @abstract\n     * @extends BaseBind\n     * @param {BaseBindModel} p_BaseBindModel \n     * @param {MetaTable} [p_baseTable] \n     */\n    function BaseBindCommand(p_BaseBindModel, p_baseTable) {\n        _super.call(this);\n        \n        // p_baseTable = p_baseTable || p_BaseBindModel._baseTable;     // 기본값\n        if (!p_baseTable && p_BaseBindModel && p_BaseBindModel._baseTable) {\n            p_baseTable = p_BaseBindModel._baseTable;\n        }\n\n        var $newOutput          = [];\n        var _this               = this;\n        var _model              = null;\n        var _outputs            = null;\n        var valid;\n        var bind;\n        var misc;\n        var cbBegin;\n        var cbValid;\n        var cbBind;\n        var cbResult;\n        var cbEnd;\n        var cbOutput;\n        var outputOption        = { option: 0, index: 0 };     // 0: 제외(edit),  1: View 오버로딩 , 2: 있는자료만 , 3: 존재하는 자료만          \n        var state;\n\n        // if (p_baseTable && !(p_BaseBindModel instanceof MetaObject && p_baseTable.instanceOf('BaseEntity'))) {\n        //     throw new Error('Only [p_baseTable] type \"BaseEntity\" can be added');\n        // }\n        \n        /**\n         * 별칭 내부값\n         * \n         * @member {string | number | boolean} BaseBindCommand#$model\n         * @readonly\n         * @private\n         */\n        Object.defineProperty(this, '$model', {\n            get: function() { return _model; },\n            set: function(nVal) { _model = nVal; },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * 별칭 내부값\n         * \n         * @member {string | number | boolean} BaseBindCommand#$newOutput\n         * @readonly\n         * @private\n         */\n        Object.defineProperty(this, '$newOutput', {\n            get: function() { return $newOutput; },\n            set: function(nVal) { $newOutput = nVal; },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * _outputs MetaView 컬켁션\n         * \n         * @member {BaseBindModel} BaseBindCommand#_outputs\n         * @readonly\n         * @protected\n         */\n        Object.defineProperty(this, '_outputs', {\n            get: function() { \n                if (_outputs === null) _outputs = new MetaViewCollection(_this, _this._baseTable);\n                return _outputs;\n            },\n            // set: function(nVal) { \n            //     if (!(nVal instanceof MetaViewCollection)) {\n            //         throw new Error('Only [_outputs] type \"MetaViewCollection\" can be added');\n            //     }\n            //     _outputs = nVal;\n            // },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * _model 바인드모델\n         * \n         * @member {BaseBindModel} BaseBindCommand#_model\n         * @readonly\n         */\n        Object.defineProperty(this, '_model', {\n            get: function() { return _model; },\n            // set: function(nVal) { \n            //     if (!(nVal instanceof MetaObject && nVal.instanceOf('BaseBindModel'))) {\n            //         throw new Error('Only [_model] type \"BaseBindModel\" can be added');\n            //     }\n            //     _model = nVal;\n            // },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 검사대상 MetaView\n         * \n         * @member {MetaView} BaseBindCommand#valid \n         */\n        Object.defineProperty(this, 'valid', {\n            get: function() { \n                if (typeof valid === 'undefined') valid = new MetaView('valid', _this._baseTable);\n                return valid; \n            },\n            set: function(nVal) { \n                if (!(nVal instanceof MetaView)) throw new ExtendError(/EL061301/, null, [this.constructor.name]);\n                valid = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 바인드 MetaView\n         * \n         * @member {MetaView} BaseBindCommand#bind \n         */\n        Object.defineProperty(this, 'bind', {\n            get: function() { \n                if (typeof bind === 'undefined') bind = new MetaView('bind', _this._baseTable);\n                return bind; \n            },\n            set: function(nVal) { \n                if (!(nVal instanceof MetaView)) throw new ExtendError(/EL061302/, null, [this.constructor.name]);\n                bind = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 기타 MetaView\n         * \n         * @member {MetaView} BaseBindCommand#misc \n         */\n        Object.defineProperty(this, 'misc', {\n            get: function() { \n                if (typeof misc === 'undefined') misc = new MetaView('misc', _this._baseTable);\n                return misc; \n            },\n            set: function(nVal) { \n                if (!(nVal instanceof MetaView)) throw new ExtendError(/EL061302/, null, [this.constructor.name]);  // REVIEW: EL061302 오류 코드 중복됨\n                misc = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 출력(output) 특성  \n         * 0: 제외(edit),  1: View 오버로딩 , 2: 있는자료만 , 3: 존재하는 자료만  \n         * \n         * @member {object} BaseBindCommand#outputOption \n         */\n        Object.defineProperty(this, 'outputOption', {\n            get: function() { return outputOption; },\n            set: function(nVal) { \n                if (typeof nVal === 'number' ) outputOption['option'] = nVal;\n                else if (typeof nVal === 'object') {\n                    if (typeof nVal['option'] === 'number') outputOption['option'] = nVal['option'];\n                    if (typeof nVal['index'] === 'number' || Array.isArray(nVal['index'])) outputOption['index'] = nVal['index'];\n                } else throw new ExtendError(/EL061303/, null, [this.constructor.name]);\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 출력(output) 특성  === outputOption  \n         * 0: 제외(edit),  1: View 오버로딩 , 2: 있는자료만 , 3: 존재하는 자료만  \n         * \n         * @member {object} BaseBindCommand#outOpt \n         */\n        Object.defineProperty(this, 'outOpt', {\n            get: function() { return this.outputOption; },\n            set: function(nVal) { this.outputOption = nVal;},\n            configurable: true,\n            enumerable: false\n        });\n\n        /**\n         * 시작 전 콜백\n         * \n         * @member {Function} BaseBindCommand#cbBegin \n         */\n        Object.defineProperty(this, 'cbBegin', {\n            get: function() { return cbBegin; },\n            set: function(nVal) { \n                if (typeof nVal !== 'function') throw new ExtendError(/EL061304/, null, [this.constructor.name]);\n                cbBegin = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 검사(valid) 전 콜백\n         * \n         * @member {Function} BaseBindCommand#cbValid \n         */\n        Object.defineProperty(this, 'cbValid', {\n            get: function() { return cbValid; },\n            set: function(nVal) { \n                if (typeof nVal !== 'function') throw new ExtendError(/EL061305/, null, [this.constructor.name]);\n                cbValid = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 바인드(bind) 전 콜백\n         * \n         * @member {Function} BaseBindCommand#cbBind\n         */\n        Object.defineProperty(this, 'cbBind', {\n            get: function() { return cbBind; },\n            set: function(nVal) { \n                if (typeof nVal !== 'function') throw new ExtendError(/EL061306/, null, [this.constructor.name]);\n                cbBind = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 바인드(bind) 결과 콜백 (주요 : 회신자료의 가공의 역활)\n         * \n         * @member {Function} BaseBindCommand#cbValid \n         */\n        Object.defineProperty(this, 'cbResult', {\n            get: function() { return cbResult; },\n            set: function(nVal) { \n                if (typeof nVal !== 'function') throw new ExtendError(/EL061307/, null, [this.constructor.name]);\n                cbResult = nVal;\n            },\n            configurable: true,\n            enumerable: true\n        });\n\n        /**\n         * 바인드 결과 출력 콜백 (주요: 목록의 출력)\n         * \n         * @member {Function} BaseBindCommand#cbOutput \n         */\n        Object.defineProperty(this, 'cbOutput', {\n            get: function() { return cbOutput; },\n            set: function(nVal) { \n                if (typeof nVal  !== 'function') throw new ExtendError(/EL061308/, null, [this.constructor.name]);\n                cbOutput = nVal;\n            },\n            configurable: true,\n            enumerable: true\n        });\n        \n        /**\n         * 바인드 처리 종료 후 콜백 (주요: 다른 이벤트 또는 명령과의 연결)\n         * \n         * @member {Function} BaseBindCommand#cbEnd \n         */\n        Object.defineProperty(this, 'cbEnd', {\n            get: function() { return cbEnd; },\n            set: function(nVal) { \n                if (typeof nVal !== 'function') throw new ExtendError(/EL061309/, null, [this.constructor.name]);\n                cbEnd = nVal;\n            },\n            configurable: true,\n            enumerable: true\n        });    \n\n        /**\n         * exectue 처리 상태 0 ~ 8, -1 ~ -8 은 실패 위치\n         * \n         * @member {Function} BaseBindCommand#state \n         */\n        Object.defineProperty(this, 'state', {\n            get: function() { return state; },\n            set: function(nVal) { \n                if (typeof nVal !== 'number') throw new ExtendError(/EL061336/, null, [this.constructor.name]);\n                state = nVal;\n            },\n            configurable: true,\n            enumerable: true\n        });  \n\n\n        // default set\n        if (p_baseTable) this._baseTable = p_baseTable;\n        if (p_BaseBindModel) this.$model = p_BaseBindModel;\n        this.newOutput('output');\n\n        // 예약어 등록\n        this.$KEYWORD = ['_model', '_outputs'];\n        this.$KEYWORD = ['valid', 'bind', 'output', 'misc'];\n        this.$KEYWORD = ['cbBegin', 'cbValid', 'cbBind', 'cbResult', 'cbOutput', 'cbEnd'];\n        this.$KEYWORD = ['outputOption', 'outOpt', 'state'];\n        this.$KEYWORD = ['addColumnValue', 'setColumn', 'release', 'execute', 'exec', 'newOutput', 'removeOutput'];\n\n        Util.implements(BaseBindCommand, this);         // strip:\n    }\n    Util.inherits(BaseBindCommand, _super);\n\n    BaseBindCommand._UNION = [IBindCommand, ICommandCallback];\n    BaseBindCommand._NS = 'Meta.Bind';\n    BaseBindCommand._PARAMS = ['_model', '_baseTable'];\n    BaseBindCommand._KIND = 'abstract';\n\n    // local function\n    function _isString(obj) {    // 공백아닌 문자 여부\n        if (typeof obj === 'string' && obj.length > 0) return true;\n        return false;\n    }\n\n    function _isObject(obj) {\n        if (typeof obj !== null && typeof obj === 'object') return true;\n        return false;   \n    }\n\n    function _getTableName(itemName) {\n        var tName = '';\n        if (itemName.indexOf('.') > -1) tName = itemName.split('.')[0];\n        return tName;\n    }\n    \n    function _getColumnName(itemName) {\n        var cName;\n        if (itemName.indexOf('.') > -1) cName = itemName.split('.')[1];\n        else cName = itemName;\n        if (!_isString(cName)) throw new ExtendError(/EL061310/, null, [cName]);\n        return cName;\n    }\n\n    function _isAllName(p_name) {\n        if (p_name.toLowerCase() === '$all') return true;\n        return false;\n    };\n\n    function _getPropDescriptor(_this, oName) {\n        return {\n            get: function() { return _this._outputs[oName];},\n            set: function(newVal) { \n                if (!(newVal instanceof MetaView)) throw new ExtendError(/EL061311/, null, [oName]);\n                _this._outputs[oName] = newVal;\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.  \n     * \n     * @param {number} p_vOpt 가져오기 옵션  \n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)  \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)  \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    BaseBindCommand.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        if (MetaRegistry.hasGuidObject(this._baseTable, owned)) {\n            obj['_baseTable'] = MetaRegistry.createReferObject(this._baseTable);\n        } else obj['_baseTable'] = this._baseTable.getObject(vOpt, owned);\n\n        obj['_outputs']     = this._outputs.getObject(vOpt, owned);\n        if (vOpt < 2 && vOpt > -1 && this._model) {\n            obj['_model'] = MetaRegistry.createReferObject(this._model);\n        }\n        obj['valid']        = this.valid.getObject(vOpt, owned);\n        obj['bind']         = this.bind.getObject(vOpt, owned);\n        obj['misc']         = this.misc.getObject(vOpt, owned);\n\n        obj['outputOption'] = this.outputOption;\n        \n        obj['cbBegin']      = this.cbBegin;\n        obj['cbValid']      = this.cbValid;\n        obj['cbBind']       = this.cbBind;\n        obj['cbResult']     = this.cbResult;\n        obj['cbOutput']     = this.cbOutput;\n        obj['cbEnd']        = this.cbEnd;            \n        obj['$newOutput']   = this.$newOutput;\n\n        return obj;\n    };\n\n    /**\n     * 현재 객체를 초기화 후, 지정한 guid 타입의 객체를 사용하여 설정합니다.   \n     * \n     * @param {object} p_oGuid guid 타입의 객체\n     * @param {object} [p_origin] 현재 객체를 설정하는 원본 guid 객체  \n     * 기본값은 p_oGuid 객체와 동일\n     */\n    BaseBindCommand.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        \n        var origin = p_origin ? p_origin : p_oGuid;\n        var _model;\n\n        if (MetaRegistry.isGuidObject(p_oGuid['_baseTable'])) {\n            var obj = MetaRegistry.createMetaObject(p_oGuid['_baseTable'], origin);\n            obj.setObject(p_oGuid['_baseTable'], origin);\n            this._baseTable = obj;\n            \n        } else if (p_oGuid['_baseTable']['$ref']) {\n            var meta = MetaRegistry.findSetObject(p_oGuid['_baseTable']['$ref'], origin);\n            if (!meta) throw new ExtendError(/EL061312/, null, [p_oGuid['_baseTable']['$ref']]);\n            this._baseTable = meta;\n        } else throw new ExtendError(/EL061313/, null, [p_oGuid['_baseTable']['$ref']]);\n\n        this._outputs.setObject(p_oGuid['_outputs'], origin);\n        if (p_oGuid['_model']) {\n            _model = MetaRegistry.findSetObject(p_oGuid['_model']['$ref'], origin);\n            if (!_model) throw new ExtendError(/EL061314/, null, [p_oGuid['_baseTable']['$ref']]);\n            this.$model = _model;\n        }\n\n        this.valid.setObject(p_oGuid['valid'], origin);\n        this.bind.setObject(p_oGuid['bind'], origin);\n        this.misc.setObject(p_oGuid['misc'], origin);\n\n        this.outputOption = p_oGuid['outputOption'];\n        \n        if (typeof p_oGuid['cbBegin'] === 'function') this.cbBegin = p_oGuid['cbBegin'];\n        if (typeof p_oGuid['cbValid'] === 'function') this.cbValid = p_oGuid['cbValid'];\n        if (typeof p_oGuid['cbBind'] === 'function') this.cbBind = p_oGuid['cbBind'];\n        if (typeof p_oGuid['cbResult'] === 'function') this.cbResult = p_oGuid['cbResult'];\n        if (typeof p_oGuid['cbOutput'] === 'function') this.cbOutput = p_oGuid['cbOutput'];\n        if (typeof p_oGuid['cbEnd'] === 'function') this.cbEnd = p_oGuid['cbEnd'];\n\n        this.$newOutput = p_oGuid['$newOutput'];\n        for(var i = 0; i < this.$newOutput.length; i++) {\n            var nObj = this.$newOutput[i];\n            Object.defineProperty(this, nObj.cmdName, _getPropDescriptor(this, nObj.viewName));\n        }\n    };\n\n    /** \n     * 실행 ( valid >> bind >> result >> output >> end )\n     * \n     * @abstract \n     */\n    BaseBindCommand.prototype.execute = function() {\n        throw new ExtendError(/EL061315/, null, [this.constructor.name]);\n    };\n\n    /** \n     * execute 메소드 별칭\n     */\n    BaseBindCommand.prototype.exec = BaseBindCommand.prototype.execute;\n\n    \n    /**\n     * 컬럼을 추가하고 지정 테이블에 추가하고, 컬럼의 참조를 BaseBindCommand 의 valid, bind, output, misc MetaView 에 등록합니다.\n     * \n     * @param {string | MetaColumn} p_column 컬럼\n     * @param {string | string[]} p_views 추가할 뷰 엔티티  TODO: 필수 조건으로 변경함, 전체추가시 [] 빈배열 전달\n     * @param {string | MetaTable} [p_bTable] 추가할 메타테이블\n     */\n    BaseBindCommand.prototype.addColumn = function(p_column, p_views, p_bTable) {\n        var views = [];     // 파라메터 변수\n        var property = [];      // View 실체 \n        var collection;\n        var table;\n        var column;\n        var idx;\n\n        // 1.유효성 검사\n        if (!(p_column instanceof MetaColumn || _isString(p_column))) {\n            throw new ExtendError(/EL061316/, null, []);\n        }\n        if (typeof p_views !== 'undefined' && (!(Array.isArray(p_views) || typeof p_views === 'string'))) {\n            throw new ExtendError(/EL061317/, null, []);\n        }\n        // if (p_bTable && !(p_bTable instanceof MetaTable)) {\n        //     throw new Error('Only [p_bTable] type \"MetaTable\" can be added');\n        // }\n\n        // 2.초기화 설정\n        if (Array.isArray(p_views)) views = p_views;\n        else if (typeof p_views === 'string') views.push(p_views);\n        // $all 일 경우 빈배열로 변경\n        if (views.some(function(elem){\n            if (!_isString(elem)) throw new ExtendError(/EL061319/, null, [i, typeof views[i]]);\n            if (_isAllName(elem)) return true;\n            return false;\n        })) views.length = 0;\n\n\n        if (typeof p_bTable === 'string') table = this._model._tables[p_bTable];\n        else table = p_bTable || this._baseTable;\n        \n        if (!(table instanceof MetaTable)) {\n            throw new ExtendError(/EL061318/, null, []);\n        }\n        if (_isString(p_column)) column = new this._model._columnType(p_column, table);\n        else column = p_column;\n\n        // baseTable 에 컬럼이 없으면 등록, 중복이름은 기존 이름을 사용함\n        if (!table.columns.contains(column))  {\n            idx = table.columns.add(column);\n            column = table.columns[idx];\n        }\n\n        // 3.설정 대상 가져오기\n        if (views.length > 0) {\n            for (var i = 0; i < views.length; i++) {\n                \n                // 속성 유무 검사\n                if (this[views[i]]) property.push(views[i]);\n                else throw new ExtendError(/EL061320/, null, [i, views[i]]);\n            }\n        } else {\n            // 공개(public) BaseEntity 프로퍼티 검사\n            property = ['valid', 'bind', 'misc'];\n            for (var j = 0; j < this._outputs.count; j++) {\n                property.push(this._outputs.indexToKey(j));\n            }\n        }\n\n        // 4.컬렉션 추가(등록)\n        for (var k = 0;  k < property.length; k++) {\n            collection = this[property[k]].columns;\n            // if (this[property[i]] instanceof MetaView ){\n            // } else {\n            //     // console.warn('Warning!! [' + property[i] + ']속성이 this 에 없습니다. ');\n            //     throw new Error(' Param p_views 에 [' + property[i] + ']가 없습니다. ');\n            // }\n            collection.add(column, table.columns);\n        }\n    };\n\n    /**\n     * 지정한 이름으로 컬럼과 값을 추가하고, 컬럼의 참조를 BaseBindCommand 의 valid, bind, output MetaView 에 등록합니다.\n     * \n     * @param {string} p_name 컬럼명\n     * @param {object | string | number | boolean} p_value 컬럼값 또는 속성\n     * @param {string | string[]} [p_views] <선택> 추가할 뷰 엔티티\n     * @param {string | MetaTable} [p_bTable] 대상 기본 엔티티 \n     */\n    BaseBindCommand.prototype.addColumnValue = function(p_name, p_value, p_views, p_bTable) {\n        var property = {};\n        var table;\n        var tableName;\n        var columnName;\n        var column;        \n        \n        // 유효성 검사\n        if (!_isString(p_name)) {\n            throw new ExtendError(/EL061321/, null, [typeof p_name]);\n        }\n        // if (p_bTable && !(p_bTable instanceof MetaTable)) {\n        //     throw new Error('Only [p_bTable] type \"MetaTable\" can be added');\n        // }\n\n        columnName = _getColumnName(p_name);\n        tableName = _getTableName(p_name);\n\n        if (tableName) {\n            table = this._model._tables[tableName];\n        } else table = this._model._tables[p_bTable] || this._baseTable;\n\n        if (tableName) table = this._model._tables[tableName];\n        else if (typeof p_bTable === 'string') table = this._model._tables[p_bTable];\n        else table = p_bTable || this._baseTable;\n\n        if (_isObject(p_value)) property = p_value;\n        else property = { value: p_value };\n        \n        if (!(table instanceof MetaTable)) {\n            throw new ExtendError(/EL061322/, null, []);\n        }\n\n        column = new this._model._columnType(columnName, table, property);  // REVIEW: 파라메터 일반화 요구됨\n        this.addColumn(column, p_views, table);\n    };\n\n    /**\n     * 메타테이블의 컬럼을 지정한 MetaView 에 설정합니다.\n     * \n     * @param {string | array} p_names 컬럼명\n     * @param {string | string[]} [p_views] 설정할 뷰\n     * @param {string | MetaTable} [p_bTable] 컬럼을 소유한 메타테이블\n     * @example\n     * e.read.setEntity(['idx', 'addr'], 'valid');\n     */\n    BaseBindCommand.prototype.setColumn = function(p_names, p_views, p_bTable) {\n\n        var names = [];     // 파라메터 변수\n        var itemName;\n        var column;\n        var table;\n        var tableName;\n        var columnName;            \n\n        // 초기화\n        if (Array.isArray(p_names)) names = p_names;\n        else if (typeof p_names === 'string') names.push(p_names);\n\n        // 유효성 검사\n        if (names.length === 0) throw new ExtendError(/EL061323/, null, []);\n\n        // 아이템 검사 및 등록 함수 this.add(..) 호출\n        for(var i = 0; names.length > i; i++) {\n            itemName = names[i]; \n\n            if (!_isString(itemName)) {\n                throw new ExtendError(/EL061323/, null, [i, typeof itemName]);\n            }\n\n            columnName = _getColumnName(itemName);\n            tableName = _getTableName(itemName);\n\n            // if (tableName) {\n            //     table = this._model._tables[tableName];\n            // } else table = this._baseTable;\n            if (tableName) table = this._model._tables[tableName];\n            else if (typeof p_bTable === 'string') table = this._model._tables[p_bTable];\n            else table = p_bTable || this._baseTable;\n\n            if (!(table instanceof MetaTable)) {\n                throw new ExtendError(/EL061325/, null, []);\n            }\n\n            column = table.columns[columnName];\n            if (typeof column !== 'undefined') {\n                this.addColumn(column, p_views, table);\n            } else {\n                throw new ExtendError(/EL061326/, null, [columnName]);\n            }\n        }\n    };\n\n    /**\n     * 지정한 컬럼을 대상 MeteView 에서 제거합니다.  (컬럼삭제 아님)\n     * \n     * @param {string | string[]} p_names 해제할 아이템명\n     * @param {string | string[]} [p_views] 'valid', 'bind', 'output', 'misc' 해제할 뷰 엔티티 지정\n     * \n     * @example\n     * e.read.release(['idx', 'addr'], 'valid');\n     */\n    BaseBindCommand.prototype.release = function(p_names, p_views) {\n\n        var names = [];         // 파라메터 변수\n        var views = [];      // 파라메터 변수\n        var property = [];      // 속성\n        var columnName;\n        var viewName;\n\n        // 초기화\n        if (Array.isArray(p_names)) names = p_names;\n        else if (_isString(p_names)) names.push(p_names);\n        // 1. 유효성 검사\n        if (names.length === 0) throw new ExtendError(/EL061327/, null, []);\n        if (typeof p_views !== 'undefined' && (!(Array.isArray(p_views) || typeof p_views === 'string'))) {\n            throw new ExtendError(/EL061328/, null, []);\n        } \n        // 2. 초기화 설정\n        if (Array.isArray(p_views)) views = p_views;\n        else if (typeof p_views === 'string') views.push(p_views);\n        // $all 일 경우 빈배열로 변경\n        if (views.some(function(elem){\n            if (!_isString(elem)) throw new ExtendError(/EL061329/, null, [i, typeof views[i]]);\n            if (_isAllName(elem)) return true;\n            return false;\n        })) views.length = 0;\n        \n        // 3. 설정 대상 가져오기\n        if (views.length > 0) {\n            for (var i = 0; i < views.length; i++) {\n                viewName = views[i];\n                if (!_isString(viewName)) throw new ExtendError(/EL061329/, null, [i, typeof viewName]);\n                // 속성 유무 검사\n                if (this[viewName]) property.push(viewName);\n                else throw new ExtendError(/EL061330/, null, [viewName]);\n            }\n        } else {\n            property = ['valid', 'bind', 'misc'];\n            for (var j = 0; j < this._outputs.count; j++) {\n                property.push(this._outputs.indexToKey(j));\n            }\n        }\n        // 4. 아이템 검사 및 아이템 해제\n        for(var k = 0; names.length > k; k++) {\n            columnName = names[k]; \n            for (var m = 0; property.length > m; m++) {\n                var idx = this[property[m]].columns.keyToIndex(columnName);\n                if (idx > -1) this[property[m]].columns.removeAt(idx);\n            }\n        }\n    };\n\n    /**\n     * _output MetaViewCollection 에 MetaView 을 추가합니다.  \n     * -  기본 이름 =  'output' + _outout.count  \n     * \n     * @param {string} [p_name] MetaView 이름\n     */\n    BaseBindCommand.prototype.newOutput = function(p_name) {\n        var _this = this;\n        var cntName = 'output' + (Number(this._outputs.count) + 1);\n\n        // 유효성 검사\n        if (p_name && !_isString(p_name)) throw new ExtendError(/EL061331/, null, [typeof p_name]);\n\n        // 이름 추가\n        $addOutput(cntName);\n\n        // 참조 이름 추가\n        if (_isString(p_name)) {\n            if (!$checkDoubleName(p_name)) {\n                throw new ExtendError(/EL061332/, null, [typeof p_name]);\n            }\n            this.$newOutput.push({ cmdName: p_name, viewName: cntName });\n            Object.defineProperty(this, p_name, _getPropDescriptor(this, cntName));\n        }\n        \n        // inner function\n        function $addOutput(vName) {\n            _this._outputs.add(new MetaView(vName, _this._baseTable));  // 등록방법 1   // TODO: getter/setter 추가 필요 검토?\n            Object.defineProperty(_this, vName, _getPropDescriptor(_this, vName));\n            return _this._outputs[vName];\n        }\n        function $checkDoubleName(newName) {\n            // 예약어 검사\n            if (_this.$KEYWORD.indexOf(newName) > -1) return false;\n            // 이름 중복 검사\n            if (typeof _this[newName] !== 'undefined') return false;\n            return true;\n        }\n    };\n\n    /**\n     * _output MetaViewCollection 에 MetaView 을 제거합니다.  \n     * \n     * @param {string} p_name \n     */\n    BaseBindCommand.prototype.removeOutput = function(p_name) {\n        // var idx = this._outputs.indexToKey(p_name);\n        var defOutput = this['output'];\n        var view;\n        var pos;\n\n        if (!_isString(p_name)) throw new ExtendError(/EL061333/, null, [typeof p_name]);\n        \n        view = this[p_name];\n        if (view === defOutput)  throw new ExtendError(/EL061334/, null, [p_name]);\n        \n        if (this._outputs.indexOf(view) < 0) throw new ExtendError(/EL061335/, null, [p_name]);\n\n        pos = this.$newOutput.indexOf(p_name);\n\n        delete this[p_name];\n        this.$newOutput.splice(pos, 1);\n        this._outputs.remove(view);\n    };\n\n    return BaseBindCommand;\n\n}(BaseBind));\n\nexport default BaseBindCommand;\nexport { BaseBindCommand };","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n","import platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {\n  let isRelativeUrl = !isAbsoluteURL(requestedURL);\n  if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n","\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","export const VERSION = \"1.8.4\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.allowAbsoluteUrls\n    if (config.allowAbsoluteUrls !== undefined) {\n      // do nothing\n    } else if (this.defaults.allowAbsoluteUrls !== undefined) {\n      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;\n    } else {\n      config.allowAbsoluteUrls = true;\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n}\n","/**** bind-command-ajax.js | BindCommand ****/\n//==============================================================\nimport { ExtendError }                  from 'logic-entity';\nimport { Util }                         from './util-wrap.js';\nimport { BaseBindCommand }              from './base-bind-command.js';\nimport axios                            from 'axios';\n\nvar EXEC_STATE = {\n    INIT: 0,\n    ON_EXECUTE: 1,\n    BEGIN: 2,\n    VALID: 3,\n    BIND: 4,\n    RESULT: 5,\n    OUTPUT: 6,\n    END: 7,\n    ON_EXECUTED: 8\n};\n\nvar BindCommand  = (function (_super) {\n    /**\n     * 바인드 명령 Ajax \n     * \n     * @constructs BindCommand\n     * @extends BaseBindCommand\n     * @param {BaseBindModel} p_BaseBindModel \n     * @param {Number | obejct} p_outputOption \n     * @param {Entity} p_baseTable \n     */\n    function BindCommand(p_BaseBindModel, p_outputOption, p_baseTable) {\n        _super.call(this, p_BaseBindModel, p_baseTable);\n\n        var config = {\n            url: null,              // 요청 경로\n            method: null,           // 전송 방법 : GET, POST TODO: method 교체 요망\n            responseType: null      //      TODO: responseType 으로 교체 요망\n        };\n        \n        /**\n         * config 설정값 (jquery의 config 과 동일)\n         * \n         * @member {Object} BindCommand#config \n         */\n        Object.defineProperty(this, 'config', {\n            get: function() { return config; },\n            set: function(nVal) {\n                if (typeof nVal === 'object') {\n                    if (typeof nVal['url'] === 'string')            config['url'] = nVal['url'];\n                    if (typeof nVal['method'] === 'string')           config['method'] = nVal['method'];\n                    if (typeof nVal['responseType'] === 'string')       config['responseType'] = nVal['responseType'];\n                    for (var prop in nVal) {\n                        if (prop === 'url' || prop === 'method' || prop === 'responseType') continue;\n                        config[prop] = nVal[prop];\n                    }\n                } else throw new ExtendError(/EL06161/, null, [this.constructor.name]);\n            },\n            configurable: true,\n            enumerable: true\n        });\n        \n        /**\n         * config.url 의 값에 설정한다.\n         * \n         * @member {String} BindCommand#url \n         */\n        Object.defineProperty(this, 'url', {\n            get: function() { return config.url; },\n            set: function(nVal) {\n                if (!(_isString(nVal))) throw new ExtendError(/EL06162/, null, [this.constructor.name]);\n                config.url = nVal;\n            },\n            configurable: true,\n            enumerable: true\n        }); \n\n        // outputOption 설정\n        if (p_outputOption) this.outputOption = p_outputOption;\n\n        // 예약어 등록\n        this.$KEYWORD = ['config', 'url'];\n        this.$KEYWORD = ['_execValid', '_execBind', '_execOutput'];\n        this.$KEYWORD = ['_ajaxSuccess', '_execError', '_ajaxComplete', '_ajaxCall'];\n    }\n    Util.inherits(BindCommand, _super);\n\n    BindCommand._UNION = [];\n    BindCommand._NS = 'Meta.Bind';\n    BindCommand._PARAMS = ['_model', 'outputOption', '_baseTable'];\n    \n    // local function\n    function _isString(obj) {    // 공백아닌 문자 여부\n        if (typeof obj === 'string' && obj.length > 0) return true;\n        return false;\n    }\n\n    function _isObject(obj) {\n        if (obj !== null && typeof obj === 'object') return true;\n        return false;\n    }\n\n    /**\n     * execute() 실행시 처음으로 실행됩니다.  \n     * \n     * @protected\n     */\n    BindCommand.prototype._execBegin = function() {\n        this.state = EXEC_STATE.ON_EXECUTE;\n        this._model._onExecute(this._model, this);\n        this._onExecute(this._model, this);         // '실행 시작' 이벤트 발생\n\n        this.state = EXEC_STATE.BEGIN;\n        if (typeof this.cbBegin === 'function' ) {\n            this.cbBegin.call(this, this);\n        } else if (typeof this._model.cbBaseBegin === 'function') {\n            this._model.cbBaseBegin.call(this, this);\n        }\n    };\n\n    /** \n     * cbValid 콜백함수를 실행하고 view(MetaView)의 유효성을 검사합니다.\n     * \n     * @returns {boolean} 유효성 검사 결과\n     * @protected\n     */\n    BindCommand.prototype._execValid = function() {\n        var result = {};     // 오류 참조 변수\n        var value = null;\n        var bReturn = true;\n\n        this.state = EXEC_STATE.VALID;\n        // 콜백 검사 (valid)\n        if (typeof this.cbValid  === 'function') {\n            bReturn = this.cbValid.call(this, this.valid, this);\n        } else if (typeof this._model.cbBaseValid  === 'function') {\n            bReturn = this._model.cbBaseValid.call(this, this.valid, this);\n        }\n\n        // undefined 회신을 안할 경우\n        // bReturn = typeof bReturn !== 'boolean' ? true : bReturn;\n        \n        // if (bReturn === false)\n\n        // valid 검사 결과\n        // if (!bReturn) {\n        //     this._execFail('valid 검사가 실패하였습니다.');\n        //     return false;\n        // }\n        if (!bReturn) {     // undefind 는 종료하지만, 실패 처리는 하지 않는다.\n            if (bReturn === false) this._execFail('valid 검사가 실패하였습니다.');\n            return false;\n        }\n\n        // 아이템 검사\n        for(var i = 0; i < this.valid.columns.count; i++) {\n            value = this.valid.columns[i].value;\n            \n            // 공백 && isNotNull = false    => 검사 넘어감\n            // 공백 && isNotNull = true     => 오류 리턴\n            // 값존재시                     => 검사 수행\n            // if (value.length > 0 || this.valid.columns[i].isNotNull) {\n            // if (typeof this.valid.columns[i].valid(value, result, 2) !== 'undefined') {\n            result = this.valid.columns[i].valid(value);\n            if (result) {\n                this._execFail(result.msg);\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * cbBind 콜백함수를 실행하고, ajax 을 호출합니다.\n     * \n     * @returns {Promise} 프로미스 객체를 리턴합니다.\n     * @protected\n     */\n    BindCommand.prototype._execBind = function() {\n        var value;\n        var column;\n        var config = {};\n        \n        this.state = EXEC_STATE.BIND;\n        // 기본값 못가져오는 오류 변경함 \n        config.url           = this.config.url || this._model.baseConfig.url;\n        config.method          = this.config.method || this._model.baseConfig.method;\n        config.responseType      = this.config.responseType || this._model.baseConfig.responseType;\n\n        for (var prop in this.config) {\n            if (typeof config[prop] !== 'undefined') continue;\n            config[prop] = this.config[prop];\n        }\n        \n        for (var prop2 in this._model.baseConfig) {\n            if (typeof config[prop2] !== 'undefined') continue;\n            config[prop2] = this._model.baseConfig[prop2];\n        }\n\n        if (!_isObject(config.data)) config.data = {};\n        for(var i = 0; i < this.bind.columns.count; i++) {\n            var dataName = '';\n            column = this.bind.columns[i];\n            value = column.value || column.default;\n            dataName = column.alias;\n            // data가 bind Column 보다 우선순위가 높음\n            if (typeof config.data[dataName] === 'undefined') config.data[dataName] = value;    // 별칭에 설정, 없을시 기본 name\n        }\n        \n        // 콜백 검사 (bind)\n        if (typeof this.cbBind === 'function') {\n            this.cbBind.call(this, this.bind, this, config);\n        } else if (typeof this._model.cbBaseBind === 'function') {\n            this._model.cbBaseBind.call(this, this.bind, this, config);\n        }\n        return this._ajaxCall(config);       // Ajax 호출 (web | node)\n    };\n\n    /**\n     * ajax 호출하고 성공시, cbResult 콜백함수로 결과(data)를 변경합니다.\n     * \n     * @param {object} p_data  데이터\n     * @param {object} p_res response 객체\n     * @returns {object} data\n     * @protected\n     */\n    BindCommand.prototype._execResult = function(p_data, p_res) {\n        var data = p_data;\n\n        this.state = EXEC_STATE.RESULT;\n        if (typeof this.cbResult === 'function' ) {\n            data = this.cbResult.call(this, p_data, this, p_res) || p_data;\n        } else if (typeof this._model.cbBaseResult === 'function' ) {\n            data = this._model.cbBaseResult.call(this, p_data, this, p_res) || p_data;\n        }\n        \n        return data;\n    };\n\n    /**\n     * 결과 data 로 outputs ViewCollection 을 설정하고, cbOutput 콜백함수를 호출합니다.\n     * \n     * @param {object} p_data data\n     * @param {object} p_res response 객체\n     * @protected\n     */\n    BindCommand.prototype._execOutput = function(p_data, p_res) {\n        var _this = this;\n        var data  = p_data;\n        var option = this.outputOption.option;\n        var index = this.outputOption.index;\n        var loadOption = (option === 1) ? 3  : (option === 2 || option === 3) ? 2 : 0;\n\n        // TODO: result 타입 검사 추가  \n\n        this.state = EXEC_STATE.OUTPUT;\n\n        // 1. 초기화 : opt = 1\n        for (var i = 0; this._outputs.count > i; i++) {\n            if (loadOption === 1) this._outputs[i].clear();  // 전체 초기화 (item, rows)\n            else this._outputs[i].rows.clear();              // Row 초기화\n        }\n        \n        /**\n         * - {columns, row}\n         * - {props: {colums, rows}, ... }\n         * - [ {columns, rows}, ...]\n         * - [ {props: {colums, rows} } ] = > X\n         */\n\n        // 2. 결과 MetaView 에 로딩\n        if ($isEntitySchema(data)) {\n            $readOutput(data, 1, loadOption);\n        } else {\n            if (Array.isArray(data)) {\n                for (var j = 0; j < data.length; j++) {\n                    $readOutput(data[j], j + 1, loadOption);\n                }\n\n            } else if (_isObject(data)){\n                var k = 0;\n                for (var prop in data) {\n                    $readOutput(data[prop], k + 1, loadOption);\n                    k++;\n                }\n            } else {\n                throw new ExtendError(/EL06163/, null, [typeof data]);\n            }\n        }\n        \n        // 3. 존재하는 아이템 중에 지정된 값으로 설정\n        if (option === 3) {\n            if (Array.isArray(index)) {\n                for (var m = 0; m < this._outputs.count && m < index.length; m++) {\n                    $setOutputValue(index[m], m);\n                }\n            } else {\n                for (var n = 0; this._outputs.count > n; n++) {\n                    $setOutputValue(index, n);\n                }\n            }\n        }\n\n        // 콜백 검사 (Output)\n        if (typeof this.cbOutput === 'function' ) {\n            this.cbOutput.call(this,  this._outputs, this, p_res);\n        } else if (typeof this._model.cbBaseOutput === 'function' ) { \n            this._model.cbBaseOutput.call(this, this._outputs, this, p_res);\n        }\n\n        // inner function\n        function $isEntitySchema(target) {\n            if (target['rows'] || target['columns'] ) return true;\n            return false;\n        }\n        function $readOutput(entity, cnt, readOpt) {\n            // var idx = cnt > 0 ? cnt - 1 : 0;\n            var idx = cnt - 1;\n            if (readOpt === 3 && typeof _this._outputs[idx] === 'undefined') {\n                _this.newOutput();\n            }\n            _this._outputs[idx].read(entity, readOpt);\n        }\n        function $setOutputValue(rowIdx, i) {\n            if (typeof rowIdx !== 'number') throw new ExtendError(/EL06164/, null, [i, typeof rowIdx]);\n            if (_this._outputs[i].columns.count === 0) throw new ExtendError(/EL06165/, null, [i]);\n            if (_this._outputs[i].rows.count - 1 < rowIdx) throw new ExtendError(/EL06166/, null, [i, rowIdx]);\n            _this._outputs[i].setValue(_this._outputs[i].rows[rowIdx]);\n        }\n    };\n\n    /**\n     * excute() 실행 후 마지막으로 cbEnd 콜백함수를 호출합니다.\n     * \n     * @param {object} p_status 상태값\n     * @param {object} p_res response\n     * @protected\n     */\n    BindCommand.prototype._execEnd = function(p_status, p_res) {\n        try {\n            if (this.state > 0) this.state = EXEC_STATE.END;\n\n            if (typeof this.cbEnd === 'function' ) {\n                this.cbEnd.call(this, p_status, this, p_res);\n            } else if (typeof this._model.cbBaseEnd === 'function') {\n                this._model.cbBaseEnd.call(this, p_status, this, p_res);\n            }\n\n            if (this.state > 0) this.state = EXEC_STATE.ON_EXECUTED;\n            this._onExecuted(this._model, this);\n            this._model._onExecuted(this._model, this);\n            \n        } catch (err) {\n            var msg = 'Err: _execEnd(cmd='+ this.name +') message:'+ err.message;\n            this._execError(msg, p_status, p_res);\n        }\n    };\n\n    /**\n     * 오류 발생시 호출됩니다. (cbError 콜백함수 호출)\n     * \n     * @param {string} p_error 에러 메세지\n     * @param {string} p_status  상태값\n     * @param {string} p_res response\n     * @protected\n     */\n    BindCommand.prototype._execError = function(p_error, p_status, p_res) {\n        var msg = p_error;\n        \n        if (this.state > 0) this.state = this.state * -1;\n        if (p_res && p_res.statusText) msg += ', statusText: '+ p_res.statusText;\n        this._model.cbError.call(this, msg, p_status, p_res);\n    };\n\n    /**\n     * excute() 실행시 유효성 검사가 실패하면 호출됩니다.\n     * \n     * @param {string} p_msg 실패 메세지\n     */\n    BindCommand.prototype._execFail = function(p_msg) {\n        if (this.state > 0) this.state = this.state * -1;\n        this._model.cbFail.call(this, p_msg, this.valid);\n    };\n\n    /**\n     * ajax 를 호출합니다. (axios)\n     * \n     * @param {object} p_config axios 설정\n     * @protected\n     */\n    BindCommand.prototype._ajaxCall = function(p_config) {\n        var _this = this;\n        var config = {};\n\n        // return axios(p_config)\n        //     .then(function(res){\n        //         _this._ajaxSuccess.call(_this, res.data, res.status, res);\n        //     })\n        //     .catch(function(err){\n        //         var status = '';\n        //         if (err.response && err.response.status) status = err.response.status;  // Branch:\n        //         _this._execError.call(_this, err, status, err.response);\n        //         _this._execEnd(err.status, err.response);\n        //     });\n        \n        for (var prop in p_config) {\n            if (prop === 'url' || prop === 'method' || prop === 'data') continue;\n            config[prop] = p_config[prop];\n        }\n        if (p_config.method === 'GET') {            // 요청\n            // TODO:\n            // data 를 params 문자열로 변환 필요\n            // 데이터 전송 여부 확인 필요\n            return axios.get(p_config.url, config)\n                .then(function(res){\n                    _this._ajaxSuccess.call(_this, res.data, res.status, res);\n                })\n                .catch(function(err){\n                    _this._execError.call(_this, err, err.status, err.response);\n                    _this._execEnd(err.status, err.response);\n                });\n                \n        } else if (p_config.method === 'DELETE') {  // 삭제\n            return axios.delete(p_config.url, p_config.data, config)\n                .then(function(res){\n                    _this._ajaxSuccess.call(_this, res.data, res.status, res);\n                })\n                .catch(function(err){\n                    _this._execError.call(_this, err, err.status, err.response);\n                    _this._execEnd(err.status, err.response);\n                });\n\n        } else if (p_config.method === 'POST') {    // 추가\n            return axios.post(p_config.url, p_config.data, config)\n                .then(function(res){\n                    _this._ajaxSuccess.call(_this, res.data, res.status, res);\n                })\n                .catch(function(err){\n                    _this._execError.call(_this, err, err.status, err.response);\n                    _this._execEnd(err.status, err.response);\n                });\n                \n        } else if (p_config.method === 'PUT') {    // 수정 \n            return axios.put(p_config.url, p_config.data, config)\n                .then(function(res){\n                    _this._ajaxSuccess.call(_this, res.data, res.status, res);\n                })\n                .catch(function(err){\n                    _this._execError.call(_this, err, err.status, err.response);\n                    _this._execEnd(err.status, err.response);\n                });\n\n\n        } else if (p_config.method === 'PATCH') {   // 일부 수정\n            return axios.patch(p_config.url, p_config.data, config)\n                .then(function(res){\n                    _this._ajaxSuccess.call(_this, res.data, res.status, res);\n                })\n                .catch(function(err){\n                    _this._execError.call(_this, err, err.status, err.response);\n                    _this._execEnd(err.status, err.response);\n                });\n\n        } else {\n            throw new Error('mothod 타입이 아닙니다.'); // TODO: 에외처리\n        }\n    };\n\n    /**\n     * ajax 호출이 성공할 경우 호출됩니다.\n     * \n     * @param {*} p_data 데이터\n     * @param {*} p_status 상태값\n     * @param {*} p_res response\n     * @protected\n     */\n    BindCommand.prototype._ajaxSuccess = function(p_data, p_status, p_res) {\n        var option = this.outputOption.option;\n        var data;\n        \n        try {\n            data = typeof p_data === 'object' ? p_data : JSON.parse(JSON.stringify(p_data));\n            data = this._execResult(data, p_res);\n\n            if (option > 0) this._execOutput(data, p_res);\n            \n        } catch (error) {\n            this._execError(error, p_status, p_res);\n            \n        } finally {\n            this._execEnd(p_status, p_res);\n        }\n    };\n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.  \n     * \n     * @param {number} p_vOpt 가져오기 옵션\n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)  \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)  \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    BindCommand.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        // var vOpt = p_vOpt || 0;\n        // var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        obj['config'] = this.config;\n        return obj;                        \n    };\n\n    /**\n     * 현재 객체를 초기화 후, 지정한 guid 타입의 객체를 사용하여 설정합니다.   \n     * \n     * @param {object} p_oGuid guid 타입의 객체\n     * @param {object} [p_origin] 현재 객체를 설정하는 원본 guid 객체  \n     * 기본값은 p_oGuid 객체와 동일\n     */\n    BindCommand.prototype.setObject = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        \n        // var origin = p_origin ? p_origin : p_oGuid;\n        // var entity;\n\n        this.config = p_oGuid['config'];\n    };\n\n    /**\n     * command 을 실행합니다.  \n     * 실행 순서 <정상흐름>  \n     *  _execBegin() >> _execValid() >> execBind() >>  \n     *  [콜백] _execResult() >> _execOutput() >> _execEnd()  \n     * \n     * @returns {Promise} 프로미스 객체\n     */\n    BindCommand.prototype.execute = function() {\n        var _this = this;\n\n        try {\n            this.state = EXEC_STATE.INIT;\n            this._execBegin();\n\n            if (!this._execValid()) {\n                this.state = this.state * -1;\n                this._execEnd();\n                // throw new Error('valid check fail');\n                return null;\n            } \n            return this._execBind();\n\n        } catch (err) {\n            if (this.state > 0) this.state = this.state * -1;\n            var msg = 'Err:execue(cmd='+ _this.name +') message:'+ err.message;\n            this._execError(msg);\n            this._execEnd();\n            return null;\n        }\n    };\n\n    /** \n     * execute 메소드 별칭\n     */\n    BindCommand.prototype.exec = BindCommand.prototype.execute;\n\n    return BindCommand;\n\n}(BaseBindCommand));\n\nexport default BindCommand;\nexport { BindCommand };","/**** bind-model.js | BaseBindModel ****/\n//==============================================================\nimport { ExtendError }                  from 'logic-entity';\nimport { Type }                         from 'logic-entity';\nimport { MetaRegistry }                 from 'logic-entity';\nimport { MetaColumn }                   from 'logic-entity';\nimport { PropertyCollection }           from 'logic-entity';\nimport { MetaTable }                    from 'logic-entity';\nimport { MetaTableCollection }          from 'logic-entity';\nimport { Util }                         from './util-wrap.js';\nimport { IBindModel }                   from './i-bind-model';\nimport { IModelCallback }               from './i-model-callback';\nimport { IService }                     from './i-service';\nimport { BaseBind }                     from './base-bind';\n\nvar BaseBindModel  = (function (_super) {\n    /**\n     * 바인드모델 추상클래스\n     * \n     * @constructs BaseBindModel\n     * @abstract\n     * @extends BaseBind\n     */\n    function BaseBindModel()  {\n        _super.call(this);\n\n        var _tables         = new MetaTableCollection(this);\n        var _columnType     = MetaColumn;\n        var items           = new PropertyCollection(this);\n        var command         = new PropertyCollection(this);\n        var fn              = new PropertyCollection(this);\n\n        var cbFail        = function(msg, valid) { console.warn('Failed. Err:'+ msg, valid); };\n        var cbError       = function(msg, status, response) { console.error('An error has occurred. : '+ msg, status, response); };\n        var cbBaseBegin;\n        var cbBaseValid;\n        var cbBaseBind ;\n        var cbBaseResult;\n        var cbBaseOutput;\n        var cbBaseEnd;\n        \n        var preRegister    = function() {};\n        var preCheck       = function() {return true; };\n        var preReady       = function() {};\n        \n        var DEFALUT_TABLE_NAME = 'first';\n        \n        // items._elemTypes = [Object, String, Number, Boolean];    // REVIEW: 특성 제거 했음, 필요시 검사후 삽입\n\n        /**\n         * _tables \n         * \n         * @member {PropertyCollection} BaseBindModel#_tables\n         */\n        Object.defineProperty(this, '_tables', {\n            get: function() { return _tables; },\n            set: function(nVal) { \n                if (!(nVal instanceof MetaTableCollection)) throw new ExtendError(/EL061201/, null, [this.constructor.name]);\n                _tables = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 아이템 타입을 설정한다.\n         * \n         * @member {MetaColumn} BaseBindModel#_columnType\n         */\n        Object.defineProperty(this, '_columnType', {\n            get: function() { return _columnType; },\n            set: function(nVal) { \n                if (!(Type.isProtoChain(nVal, MetaColumn))) throw new ExtendError(/EL061202/, null, [this.constructor.name]);\n                _columnType = nVal;\n                for (var i = 0; i < this._tables.count; i++) {\n                    this._tables[i].columns._baseType = nVal;\n                }\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * items\n         * \n         * @member {PropertyCollection} BaseBindModel#items\n         */\n        Object.defineProperty(this, 'items', {\n            get: function() { return items; },\n            set: function(nVal) { // REVIEW: readonly 가 검토 필요\n                if (!(nVal instanceof PropertyCollection)) throw new ExtendError(/EL061203/, null, [this.constructor.name]);\n                items = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 바인드모델 함수 (내부함수 + 노출함수)\n         * \n         * @member {PropertyCollection} BaseBindModel#fn\n         */\n        Object.defineProperty(this, 'fn', {\n            get: function() { return fn; },\n            set: function(nVal) { \n                if (!(nVal instanceof PropertyCollection)) throw new ExtendError(/EL061204/, null, [this.constructor.name]);\n                fn = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 바인딩 command \n         * \n         * @member {PropertyCollection} BaseBindModel#command\n         */\n        Object.defineProperty(this, 'command', {\n            get: function() { return command; },\n            set: function(nVal) { \n                if (!(nVal instanceof PropertyCollection)) throw new ExtendError(/EL061205/, null, [this.constructor.name]);\n                command = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 바인딩 cmd = command (별칭)\n         * \n         * @member {PropertyCollection} BaseBindModel#cmd\n         */\n        Object.defineProperty(this, 'cmd', {\n            get: function() { return this.command; },\n            set: function(nVal) { this.command = nVal; },\n            configurable: false,\n            enumerable: false\n        });\n        \n        /**\n         * columns = _baseTable.columns\n         * \n         * @member {MetaTableColumnCollection} BaseBindModel#columns\n         */\n        Object.defineProperty(this, 'columns', {\n            get: function() { return this._baseTable.columns; },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * columns 별칭\n         * \n         * @member {object} BaseBindModel#cols \n         */\n        Object.defineProperty(this, 'cols', {\n            get: function() { return this.columns; },\n            set: function(nVal) { this.columns = nVal;},\n            configurable: true,\n            enumerable: false\n        });\n\n        /**\n         * valid 에서 실패시 콜백\n         * \n         * @member {Funtion} BaseBindModel#cbFail\n         */\n        Object.defineProperty(this, 'cbFail', {\n            get: function() { return cbFail; },\n            set: function(nVal) { \n                if (typeof nVal !== 'function') throw new ExtendError(/EL061206/, null, [this.constructor.name]);\n                cbFail = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * valid 에서 오류발생시 콜백\n         * \n         * @member {Funtion} BaseBindModel#cbError\n         */\n        Object.defineProperty(this, 'cbError', {\n            get: function() { return cbError; },\n            set: function(nVal) { \n                if (typeof nVal !== 'function') throw new ExtendError(/EL061207/, null, [this.constructor.name]);\n                cbError = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 실행 시작시 기본 콜백 (cbBegin 콜백함수가 없을 경우)\n         * \n         * @member {Funtion} BaseBindModel#cbBaseBegin\n         */\n        Object.defineProperty(this, 'cbBaseBegin', {\n            get: function() { return cbBaseBegin; },\n            set: function(nVal) { \n                if (typeof nVal !== 'function') throw new ExtendError(/EL061208/, null, [this.constructor.name]);\n                cbBaseBegin = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n\n        /**\n         * 검사(valid)시 기본 콜백 (cbValid 콜백함수가 없을 경우)\n         * \n         * @member {Funtion} BaseBindModel#cbBaseValid\n         */\n        Object.defineProperty(this, 'cbBaseValid', {\n            get: function() { return cbBaseValid; },\n            set: function(nVal) { \n                if (typeof nVal !== 'function') throw new ExtendError(/EL061209/, null, [this.constructor.name]);\n                cbBaseValid = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 바인드(valid)시 기본 콜백 (cbBind 콜백함수가 없을 경우)\n         * \n         * @member {Funtion} BaseBindModel#cbBaseBind\n         */\n        Object.defineProperty(this, 'cbBaseBind', {\n            get: function() { return cbBaseBind; },\n            set: function(nVal) { \n                if (typeof nVal !== 'function') throw new ExtendError(/EL061210/, null, [this.constructor.name]);\n                cbBaseBind = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n        \n        /**\n         * 바인드 결과 수신 기본 콜백 (cbResult 콜백함수가 없을 경우)\n         * \n         * @member {Funtion} BaseBindModel#cbBaseResult\n         */\n        Object.defineProperty(this, 'cbBaseResult', {\n            get: function() { return cbBaseResult; },\n            set: function(nVal) { \n                if (typeof nVal !== 'function') throw new ExtendError(/EL061211/, null, [this.constructor.name]);\n                cbBaseResult = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 출력 기본 콜백 (cbOutput 콜백함수가 없을 경우)\n         * \n         * @member {Funtion} BaseBindModel#cbBaseOutput\n         */\n        Object.defineProperty(this, 'cbBaseOutput', {\n            get: function() { return cbBaseOutput; },\n            set: function(nVal) { \n                if (typeof nVal !== 'function') throw new ExtendError(/EL061212/, null, [this.constructor.name]);\n                cbBaseOutput = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 실행 완료시 기본 콜백 (cbEnd 콜백함수가 없을 경우)\n         * \n         * @member {Funtion} BaseBindModel#cbBaseEnd\n         */\n        Object.defineProperty(this, 'cbBaseEnd', {\n            get: function() { return cbBaseEnd; },\n            set: function(nVal) { \n                if (typeof nVal !== 'function') throw new ExtendError(/EL061213/, null, [this.constructor.name]);\n                cbBaseEnd = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 초기화시 등록 preRegister\n         * \n         * @member {Funtion} BaseBindModel#preRegister\n         */\n        Object.defineProperty(this, 'preRegister', {\n            get: function() { return preRegister; },\n            set: function(nVal) { \n                if (typeof nVal !== 'function') throw new ExtendError(/EL061214/, null, [this.constructor.name]);\n                preRegister = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 초기화시 검사 preCheck\n         * \n         * @member {Funtion} BaseBindModel#preCheck\n         */\n        Object.defineProperty(this, 'preCheck', {\n            get: function() { return preCheck; },\n            set: function(nVal) { \n                if (typeof nVal !== 'function') throw new ExtendError(/EL061215/, null, [this.constructor.name]);\n                preCheck = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        /**\n         * 초기화시 준비 완료 preReady\n         * \n         * @member {Funtion} BaseBindModel#preReady\n         */\n        Object.defineProperty(this, 'preReady', {\n            get: function() { return preReady; },\n            set: function(nVal) { \n                if (typeof nVal !== 'function') throw new ExtendError(/EL061216/, null, [this.constructor.name]);\n                preReady = nVal;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        // default set\n        this.fn._elemTypes  = Function;    // REVIEW: 위치 변경 \n        this._baseTable     = this.addTable(DEFALUT_TABLE_NAME);    // Entity 추가 및 baseEntity 설정\n        // this._columnType    = MetaColumn;                           // 기본 아이템 타입 변경\n\n        // 예약어 등록\n        this.$KEYWORD = ['_tables', '_baseTable', '_columnType', 'items', 'fn', 'command', 'cmd', 'columns'];\n        this.$KEYWORD = ['cbFail', 'cbError'];\n        this.$KEYWORD = ['cbBaseBegin', 'cbBaseValid', 'cbBaseBind', 'cbBaseResult', 'cbBaseOutput', 'cbBaseEnd'];\n        this.$KEYWORD = ['init', 'preRegister', 'preCheck', 'preReady'];\n        this.$KEYWORD = ['addColumnValue', '_readItem', 'setMapping', 'addTable'];\n        this.$KEYWORD = ['addCommand', 'setService'];\n        this.$KEYWORD = DEFALUT_TABLE_NAME;\n\n        Util.implements(BaseBindModel, this);       // strip:\n    }\n    Util.inherits(BaseBindModel, _super);\n\n    BaseBindModel._UNION    = [IBindModel, IModelCallback];\n    BaseBindModel._NS       = 'Meta.Bind';\n    BaseBindModel._PARAMS   = [];\n    BaseBindModel._KIND     = 'abstract';\n\n    // local function\n    function _isString(obj) {    // 공백아닌 문자 여부\n        if (typeof obj === 'string' && obj.length > 0) return true;\n        return false;\n    }\n\n    function _isObject(obj) {\n        if (obj !== null && typeof obj === 'object') return true;\n        return false;\n    }\n\n    function _getTableName(itemName) {\n        var tName = '';\n        if (itemName.indexOf('.') > -1) tName = itemName.split('.')[0];\n        return tName;\n    }\n    \n    function _getColumnName(itemName) {\n        var cName;\n        if (itemName.indexOf('.') > -1) cName = itemName.split('.')[1];\n        else cName = itemName;\n        if (!_isString(cName)) throw new ExtendError(/EL061217/, null, [cName]);\n        return cName;\n    }\n\n    function _isAllName(p_name) {\n        if (p_name.toLowerCase() === '$all') return true;\n        return false;\n    };\n\n    /**\n     * 지정한 item 또는 전체 items 목록을 기본 MetaTable 에 등록합니다.(기존에 등록되 있으면 통과)\n     * \n     * @param {string | string[]} p_items 읽을 아이템\n     * @param {string | MetaTable} [p_bEntity=_baseTable] 기본 엔티티 \n     */\n    BaseBindModel.prototype._readItem = function(p_items, p_bEntity) {\n        var items = [];\n        var table;\n        var itemName;\n        var tableName;\n        var columnName;            \n\n        // 1. 초기화\n        if (Array.isArray(p_items)) items = items.concat(p_items);\n        else if (_isString(p_items)) items.push(p_items);\n        else  throw new ExtendError(/EL061218/, null, []);\n\n        if (items.length === 0) items = this.items.$keys;   // 없을 경우 (전체 가져옴)\n\n        // 2. 속성정보 등록\n        for(var i = 0; items.length > i; i++) {\n            itemName    = items[i];\n            columnName  = _getColumnName(itemName);\n            tableName   = _getTableName(itemName);\n            \n            if (tableName) table = this._tables[tableName];\n            else if (_isString(p_bEntity)) table = this._tables[p_bEntity];\n            else  table = p_bEntity || this._baseTable;\n\n            //3. 메타테이블 유효성 검사\n            if (!table) throw new ExtendError(/EL061219/, null, []);\n            if (!(table instanceof MetaTable)) throw new ExtendError(/EL061220/, null, []);\n\n            if (columnName.indexOf('__') > -1 ) continue; // __이름으로 제외 조건 추가 TODO: 아이템명 조건 별도 함수로 분리\n            if(['number', 'string', 'boolean'].indexOf(typeof this.items[itemName]) > -1) { \n                table.columns.addValue(columnName, this.items[itemName]);\n            } else if (_isObject(this.items[itemName])){\n                table.columns.add(new this._columnType(columnName, table, this.items[itemName]));\n            } else throw new ExtendError(/EL061221/, null, []);\n        }\n    };\n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.  \n     * \n     * @param {number} p_vOpt 가져오기 옵션  \n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)  \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)  \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    BaseBindModel.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        obj['_tables']      = this._tables.getObject(vOpt, owned);\n        obj['_columnType']  = this._columnType;\n        obj['fn']           = this.fn.getObject(vOpt, owned);\n        obj['command']      = this.command.getObject(vOpt, owned);\n\n        obj['cbFail']       = this.cbFail;\n        obj['cbError']      = this.cbError;\n        obj['cbBaseBegin']  = this.cbBaseBegin;\n        obj['cbBaseValid']  = this.cbBaseValid;\n        obj['cbBaseBind']   = this.cbBaseBind;\n        obj['cbBaseResult'] = this.cbBaseResult;\n        obj['cbBaseOutput'] = this.cbBaseOutput;\n        obj['cbBaseEnd']    = this.cbBaseEnd;\n        obj['preRegister']  = this.preRegister;\n        obj['preCheck']     = this.preCheck;\n        obj['preReady']     = this.preReady;\n        // _tables (내부)에 존재하는 경우 참조로, 독립적으로 사용하는 추가함\n        if (MetaRegistry.hasGuidObject(this._baseTable, owned)) {\n            obj['_baseTable'] = MetaRegistry.createReferObject(this._baseTable);\n        } else obj['_baseTable'] = this._baseTable.getObject(vOpt, owned);\n\n        return obj;                        \n    };\n\n    /**\n     * 현재 객체를 초기화 후, 지정한 guid 타입의 객체를 사용하여 설정합니다.  \n     * \n     * @param {object} p_oGuid guid 타입의 객체\n     * @param {object} [p_origin] 현재 객체를 설정하는 원본 guid 객체  \n     * 기본값은 p_oGuid 객체와 동일\n     */\n    BaseBindModel.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        \n        var origin = p_origin ? p_origin : p_oGuid;\n\n        this._tables.setObject(p_oGuid['_tables'], origin);\n        this._columnType = p_oGuid['_columnType'];\n        this.fn.setObject(p_oGuid['fn'], origin);\n        this.command.setObject(p_oGuid['command'], origin);\n        \n        this.cbFail         = p_oGuid['cbFail'];\n        this.cbError        = p_oGuid['cbError'];\n        if (typeof p_oGuid['cbBaseBegin'] === 'function')   this.cbBaseBegin = p_oGuid['cbBaseBegin'];\n        if (typeof p_oGuid['cbBaseValid'] === 'function')   this.cbBaseValid = p_oGuid['cbBaseValid'];\n        if (typeof p_oGuid['cbBaseBind'] === 'function')    this.cbBaseBind = p_oGuid['cbBaseBind'];\n        if (typeof p_oGuid['cbBaseResult'] === 'function')  this.cbBaseResult = p_oGuid['cbBaseResult'];\n        if (typeof p_oGuid['cbBaseOutput'] === 'function')  this.cbBaseOutput = p_oGuid['cbBaseOutput'];\n        if (typeof p_oGuid['cbBaseEnd'] === 'function')     this.cbBaseEnd = p_oGuid['cbBaseEnd'];\n        this.preRegister    = p_oGuid['preRegister'];\n        this.preCheck       = p_oGuid['preCheck'];\n        this.preReady       = p_oGuid['preReady'];\n\n        if (MetaRegistry.isGuidObject(p_oGuid['_baseTable'])) {\n            var obj = MetaRegistry.createMetaObject(p_oGuid['_baseTable'], origin);\n            obj.setObject(p_oGuid['_baseTable'], origin);\n            this._baseTable = obj;\n            \n        } else if (p_oGuid['_baseTable']['$ref']) {\n            var meta = MetaRegistry.findSetObject(p_oGuid['_baseTable']['$ref'], origin);\n            if (!meta) throw new ExtendError(/EL061222/, null, [p_oGuid['_baseTable']['$ref']]);\n            this._baseTable = meta;\n        \n        } else throw new ExtendError(/EL061223/, null, [p_oGuid['_baseTable']['$ref']]);\n    };        \n\n    /** \n     * 전처리 콜백함수를 호출합니다.  \n     * 실행순서 : preRegister() >>  preCheck(): boolean  >> preRedy()  \n     */\n    BaseBindModel.prototype.init = function() {\n        try {\n            this.preRegister.call(this, this);\n            if (this.preCheck.call(this, this)) {\n                this.preReady.call(this, this);\n            } else this.cbFail('Fail :init()');\n\n        } catch (err) {\n            this.cbError('Error :init() message:'+ err.message);\n        } \n    };\n    \n    /**\n     * 메타테이블을 생성하고, 지정한 테이블 이름을 속성으로 등록합니다.\n     * \n     * @param {string} p_name 테이블명\n     * @returns {MetaTable} 등록한 메타테이블\n     */\n    BaseBindModel.prototype.addTable = function(p_name) {\n        var table;\n\n        // 유효성 검사\n        if (!_isString(p_name)) throw new ExtendError(/EL061224/, null, [typeof p_name]);\n        // 예약어 검사\n        if (this.$KEYWORD.indexOf(p_name) > -1) {\n            throw new ExtendError(/EL061225/, null, [p_name]);\n        }            \n        // 이름 중복 검사\n        if (this._tables.existTableName(p_name)) {\n            throw new ExtendError(/EL061226/, null, [p_name]);\n        }\n\n        this._tables.add(p_name);\n        \n        table = this._tables[p_name];\n        table.columns._baseType = this._columnType;    // 아이템타입 설정            \n        // 접근 키 설정\n        this[p_name] = table;   \n        \n        return table;\n    };\n\n    /**\n     * 컬럼을 추가하고 지정테이블에 추가하고, 컬럼의 참조를 BaseBindCommand 의 valid, bind, output MetaView 에 등록합니다.\n     * \n     * @param {string | MetaColumn} p_column 등록할 아이템\n     * @param {string | string[]} [p_cmds]  추가할 아이템 명령, [] 입력시 전체 command 선택됨\n     * @param {string | string[]} [p_views] 추가할 뷰 엔티티\n     * @param {string | MetaTable} [p_bTable] 메타테이블\n     */\n    BaseBindModel.prototype.addColumn = function(p_column, p_cmds, p_views, p_bTable) {\n        var cmds = [];\n        var command = [];\n        var table;\n        var column;\n\n        // 1. 유효성 검사\n        if (!(p_column instanceof MetaColumn || _isString(p_column))) {\n            throw new ExtendError(/EL061227/, null, []);\n        }\n        if (typeof p_cmds !== 'undefined' && p_cmds !== null && (!(Array.isArray(p_cmds) || _isString(p_cmds)))) {\n            throw new ExtendError(/EL061228/, null, []);\n        }\n        // 2. 초기값 설정\n        if (Array.isArray(p_cmds)) cmds = p_cmds;\n        else if (_isString(p_cmds)) cmds.push(p_cmds);\n\n        if (_isString(p_bTable)) table = this._tables[p_bTable];\n        else table = p_bTable || this._baseTable;\n\n        if (!(table instanceof MetaTable)) {\n            throw new ExtendError(/EL061229/, null, []);\n        }\n        if (_isString(p_column)) column = new this._columnType(p_column, table);\n        else column = p_column;\n        // 3. command 확인\n        if (typeof p_cmds !== 'undefined' && cmds.length > 0) {\n            for (var i = 0; i< cmds.length; i++) {\n                if (!_isString(cmds[i])) throw new ExtendError(/EL061230/, null, [i, typeof cmds[i]]);\n                \n                if (this.command.exists(cmds[i])) command.push(cmds[i]);\n                else throw new ExtendError(/EL061231/, null, [i, cmds[i]]);\n            }\n        } else if (typeof p_cmds !== 'undefined') {\n            command = this.command.$keys;\n        }\n        // 4. 컬럼 등록 및 조회\n        column = table.columns[table.columns.add(column)];\n        // 5. command 에 컬럼 등록\n        for (var j = 0; j < command.length; j++) {\n            this.command[command[j]].setColumn(column.columnName, p_views, table);\n        }\n    };\n\n    /**\n     * 지정한 이름으로 컬럼과 값을 추가하고, 컬럼의 참조를 BaseBindCommand 의 valid, bind, output MetaView 에 등록합니다.\n     * \n     * @param {string} p_name\n     * @param {object | string | number | boolean} p_value \n     * @param {string[]} [p_cmds] <선택> 추가할 아이템 명령\n     * @param {string | string[]} [p_views] <선택> 추가할 뷰 엔티티\n     * @param {string | MetaTable} [p_bEntity] 대상 기본 엔티티 \n     */\n    BaseBindModel.prototype.addColumnValue = function(p_name, p_value, p_cmds, p_views, p_bEntity) {\n        var column;\n        var property = {};\n        var table;\n        var tableName;\n        var columnName;            \n    \n        // 유효성 검사\n        if (!_isString(p_name)) {\n            throw new ExtendError(/EL061232/, null, [typeof p_name]);\n        }\n        columnName = _getColumnName(p_name);\n        tableName = _getTableName(p_name);\n\n        if (tableName) table = this._tables[tableName];\n        else if (_isString(p_bEntity)) table = this._tables[p_bEntity];\n        else table = p_bEntity || this._baseTable;\n\n        if (!(table instanceof MetaTable)) {\n            throw new ExtendError(/EL061233/, null, []);\n        }\n\n        if (_isObject(p_value)) property = p_value;\n        else property = { value: p_value };\n        \n        column = new this._columnType(columnName, table, property);  // REVIEW: 파라메터 일반화 요구됨\n\n        this.addColumn(column, p_cmds, p_views, table);\n    };\n\n    /**\n     * 매핑객체를 BaseBindModel 객체에 설정합니다.\n     * \n     * @param {ProperyCollection | object} p_mapping MetaColumn 에 매핑할 객체 또는 컬렉션\n     * @param {string | MetaTable} [p_bEntity=_baseTable] 대상 기본 엔티티 \n     */\n    BaseBindModel.prototype.setMapping = function(p_mapping, p_bEntity) {\n        var mappingCollection;\n        // var itemsCollection;\n        // var table;\n        // var itemName;\n        // var tableName;\n        // var columnName;\n        var column;\n        \n        try {\n            // 1.유효성 검사\n            if (!(p_mapping instanceof PropertyCollection || _isObject(p_mapping))) {\n                throw new ExtendError(/EL061234/, null, []);\n            }\n\n            // 2. 임시 매핑 컬렉션에 등록\n            if (p_mapping instanceof PropertyCollection) {\n                mappingCollection = p_mapping;\n                // itemsCollection = p_mapping;\n            } else if (_isObject(p_mapping)) {\n                mappingCollection = new PropertyCollection();\n                // itemsCollection = this.items;\n                for(var prop in p_mapping) {\n                    if (p_mapping.hasOwnProperty(prop) && typeof p_mapping[prop] !== 'undefined') {\n                        mappingCollection.add(prop, p_mapping[prop]);\n                    }\n                }\n            }\n\n            // 3. 매핑에 존재하고, 아이템에 존재하고, 컬럼에 추가\n            // for(var i = 0; mappingCollection.count > i; i++) {\n            //     itemName = mappingCollection.indexToKey(i);\n            //     columnName = _getColumnName(itemName);\n            //     tableName = _getTableName(itemName);\n\n            //     if (tableName) {\n            //         // POINT:\n            //         if (!this._tables.exists(tableName)) this.addTable(tableName)\n            //         table = this._tables[tableName];\n            //     } else if (_isString(p_bEntity)) table = this._tables[p_bEntity];\n            //     else table = p_bEntity || this._baseTable;\n\n            //     if (!(table instanceof MetaTable)) {\n            //         throw new ExtendError(/EL061235/, null, []);\n            //     }\n\n            //     if (!table.columns.exists(columnName)) {\n            //         if (this.items.exists(columnName)) {\n            //             this._readItem(columnName, table);\n            //         } else {\n            //             // POINT: 빈 컬럼 추가\n            //             table.columns.add(columnName);\n            //             // throw new ExtendError(/EL061236/, null, [columnName]);\n            //         }\n            //     }\n            //     column = table.columns[columnName];\n            //     for (var prop in mappingCollection[i]) {\n            //         if (_isAllName(prop)) {\n            //             for (var ii = 0; ii < this.command.count; ii++) {\n            //                 this.command[ii].addColumn(column, mappingCollection[i][prop], table);\n            //             }\n            //         } else {\n            //             // POINT: 빈 커멘드 생성\n            //             if(!this.command.exists(prop)) this.addCommand(prop);\n            //             this.command[prop].addColumn(column, mappingCollection[i][prop], table);\n            //         }\n            //     }\n            // }\n\n            // 첫 번째 반복문\n            for (var i = 0; i < mappingCollection.count; i++) {\n                $processMapping.call(this, mappingCollection, i, p_bEntity, false);\n            }\n\n            // 두 번째 반복문\n            for (var j = 0; j < mappingCollection.count; j++) {\n                $processMapping.call(this, mappingCollection, j, p_bEntity, true);\n            }\n\n        } catch (error) {\n            throw new ExtendError(/EL061237/, error, []);\n        }\n\n        // inner function\n        function $processMapping(mappingCollection, i, p_bEntity, isAllCommand) {\n            var table;\n            var itemName = mappingCollection.indexToKey(i);\n            var columnName = _getColumnName(itemName);\n            var tableName = _getTableName(itemName);\n\n            if (tableName) {\n                if (!this._tables.exists(tableName)) this.addTable(tableName);\n                table = this._tables[tableName];\n            } else if (_isString(p_bEntity)) table = this._tables[p_bEntity];\n            else table = p_bEntity || this._baseTable;\n\n            if (!(table instanceof MetaTable)) {\n                throw new ExtendError(/EL061235/, null, []);\n            }\n\n            if (!table.columns.exists(columnName)) {\n                if (this.items.exists(columnName)) {\n                    this._readItem(columnName, table);\n                } else {\n                    table.columns.add(columnName);\n                }\n            }\n            column = table.columns[columnName];\n            for (var prop in mappingCollection[i]) {\n                if (isAllCommand) {\n                    if (_isAllName(prop)) {\n                        for (var ii = 0; ii < this.command.count; ii++) {\n                            this.command[ii].addColumn(column, mappingCollection[i][prop], table);\n                        }\n                    }\n                } else {\n                    // POINT: 빈 커멘드 생성\n                    if (!_isAllName(prop)) {\n                        if(!this.command.exists(prop)) this.addCommand(prop);\n                        this.command[prop].addColumn(column, mappingCollection[i][prop], table);\n                    }\n                }\n            }\n\n            // for (var prop in mappingCollection[i]) {\n            //     if (isAllCommand ? _isAllName(prop) : !_isAllName(prop)) {\n            //         if (!this.command.exists(prop)) this.addCommand(prop);\n            //         if (isAllCommand) {\n            //             for (var ii = 0; ii < this.command.count; ii++) {\n            //                 this.command[ii].addColumn(column, mappingCollection[i][prop], table);\n            //             }\n            //         } else {\n            //             this.command[prop].addColumn(column, mappingCollection[i][prop], table);\n            //         }\n            //     }\n            // }\n\n        }\n    };\n\n    /**\n     * BaseBindCommand 객체를 추가합니다.\n     * \n     * @param {string} p_name BaseBindCommand 이름\n     * @param {number | object} p_option 옵션\n     * @param {BaseEntity} [p_bEntity] 기본 메타테이블\n     * @abstract\n     */\n    BaseBindModel.prototype.addCommand = function() {\n        throw new ExtendError(/EL061238/, null, [this.constructor.name]);\n    };\n\n    /**\n     * 서비스 객체로 현재 객체를 설정합니다.\n     * \n     * @param {IService} [p_service] 서비스 객체\n     * @param {boolean} [p_passTypeChk=false] 서비스객체 type 검사 통과 유무\n     */\n    BaseBindModel.prototype.setService = function(p_service, p_passTypeChk) {\n        var propObject;\n        var command;\n        var tables = [];\n        var mapping = new PropertyCollection(this);\n\n        // Type.allowType(IService, p_service, 1);\n        if (!p_passTypeChk) Type.matchType(IService, p_service, 1);\n        // tables 등록\n        if (p_service['tables']) {\n            if (Array.isArray(p_service['tables'])) tables = p_service['tables'];\n            else if (_isString(p_service['tables'])) tables.push(p_service['tables']);\n            else throw new ExtendError(/EL061239/, null, []);\n            for (var i = 0; i < tables.length; i++) {\n                this.addTable(tables[i]);\n            }\n        }\n        // command 등록\n        if (_isObject(p_service['command'])) {\n            propObject = p_service['command'];\n            for(var prop in propObject) {\n                if (propObject.hasOwnProperty(prop) && typeof propObject[prop] !== 'undefined') {\n                    // command 등록 및 설정\n                    command = this.addCommand(prop);\n                    if (propObject[prop]['views']) {\n                        var views = propObject[prop]['views'];\n                        if (!Array.isArray(views)) {\n                            throw new ExtendError(/EL061241/, null, [typeof views]);\n                        }\n                        for (var j= 0; j < views.length; j++) {\n                            command.newOutput(views[j]);\n                        }\n                    }                      \n                    if (propObject[prop]['outputOption'])                       command['outputOption'] = propObject[prop]['outputOption'];  // TODO: ['블럭으로 감싸야함']\n                    if (typeof propObject[prop]['config'] === 'object')         command['config'] = propObject[prop]['config'];\n                    if (typeof propObject[prop]['url'] === 'string')            command['url'] = propObject[prop]['url'];\n                    if (typeof propObject[prop]['onExecute'] === 'function')    command['onExecute'] = propObject[prop]['onExecute'];\n                    if (typeof propObject[prop]['onExecuted'] === 'function')   command['onExecuted'] = propObject[prop]['onExecuted'];\n                    if (typeof propObject[prop]['cbBegin'] === 'function')      command['cbBegin'] = propObject[prop]['cbBegin'];\n                    if (typeof propObject[prop]['cbValid'] === 'function')      command['cbValid'] = propObject[prop]['cbValid'];\n                    if (typeof propObject[prop]['cbBind'] === 'function')       command['cbBind'] = propObject[prop]['cbBind'];\n                    if (typeof propObject[prop]['cbResult'] === 'function')     command['cbResult'] = propObject[prop]['cbResult'];\n                    if (typeof propObject[prop]['cbOutput'] === 'function')     command['cbOutput'] = propObject[prop]['cbOutput'];\n                    if (typeof propObject[prop]['cbEnd'] === 'function')        command['cbEnd'] = propObject[prop]['cbEnd']; \n                }\n            }\n        }\n        // prop 등록\n        if (_isObject(p_service['items'])) {\n            propObject = p_service['items'];\n            for(var prop2 in propObject) {\n                if (propObject.hasOwnProperty(prop2) && typeof propObject[prop2] !== 'undefined') {\n                    //__prop.add(prop, propObject[prop]);\n                    // get/sett 형식의 기능 추가        REVIEW:: 확인필요 get/set 의 필요성, 중복 및 혼선의 이슈\n                    // if (typeof propObject[prop] === 'object' \n                    //     && (typeof propObject[prop].get === 'function' || typeof propObject[prop].set === 'function')) {\n                    //     this.items.add(prop, '', propObject[prop]);    \n                    // } else {\n                    //     this.items.add(prop, propObject[prop]);\n                    // }\n                    this.items.add(prop2, propObject[prop2]);\n                }\n            }\n        }\n        // fn 등록\n        if (_isObject(p_service['fn'])) {\n            propObject = p_service['fn'];\n            for(var prop3 in propObject) {\n                if (propObject.hasOwnProperty(prop3) && typeof propObject[prop3] !== 'undefined') {\n                    this.fn.add(prop3, propObject[prop3]);\n                }\n            }\n        }\n        if (_isObject(p_service['mapping'])) {\n            propObject = p_service['mapping'];\n            for(var prop4 in propObject) {\n                if (propObject.hasOwnProperty(prop4) && typeof propObject[prop4] !== 'undefined') {\n                    mapping.add(prop4, propObject[prop4]);\n                    // this._mapping.add(prop, propObject[prop]);\n                }\n            }\n        }\n        // pre 메소드 등록\n        if (typeof p_service['preRegister'] === 'function') {\n            this.preRegister = p_service['preRegister'];\n        }\n        if (typeof p_service['preCheck'] === 'function') {\n            this.preCheck = p_service['preCheck'];\n        }\n        if (typeof p_service['preReady'] === 'function') {\n            this.preReady = p_service['preReady'];\n        }\n        // fail, error 등록\n        if (typeof p_service['cbFail'] === 'function') {\n            this.cbFail = p_service['cbFail'];\n        }\n        if (typeof p_service['cbError'] === 'function') {\n            this.cbError = p_service['cbError'];\n        }\n        // baseCallback 등록\n        if (typeof p_service['cbBaseBegin'] === 'function') {\n            this.cbBaseBegin = p_service['cbBaseBegin'];\n        }\n        if (typeof p_service['cbBaseValid'] === 'function') {\n            this.cbBaseValid = p_service['cbBaseValid'];\n        }\n        if (typeof p_service['cbBaseBind'] === 'function') {\n            this.cbBaseBind = p_service['cbBaseBind'];\n        }\n        if (typeof p_service['cbBaseResult'] === 'function') {\n            this.cbBaseResult = p_service['cbBaseResult'];\n        }\n        if (typeof p_service['cbBaseOutput'] === 'function') {\n            this.cbBaseOutput = p_service['cbBaseOutput'];\n        }\n        if (typeof p_service['cbBaseEnd'] === 'function') {\n            this.cbBaseEnd = p_service['cbBaseEnd'];\n        }\n        // execute 이벤트 등록\n        if (typeof p_service['onExecute'] === 'function') {\n            this.onExecute = p_service['onExecute'];    // 복수 등록\n        }\n        if (typeof p_service['onExecuted'] === 'function') {\n            this.onExecuted = p_service['onExecuted'];  // 복수 등록\n        }\n        // 서비스에 onwer bindModel 설정\n        p_service.bindModel = this;\n\n        // 속성(prop)을 아이템으로 로딩 ('__'시작이름 제외)\n        // if (p_isReadItem === true) {   // REVIEW: 필요성 유무, 아이템을 별도로 안불러올 이유가?\n        //     this._readItem();\n        // }\n        this.setMapping(mapping);\n    };\n\n    return BaseBindModel;\n\n}(BaseBind));\n\nexport default BaseBindModel;\nexport { BaseBindModel };","/**** bind-model.js | BindModel ****/\n//==============================================================\nimport { ExtendError }                  from 'logic-entity';\nimport { Type }                         from 'logic-entity';\nimport { Util }                         from 'logic-entity';\nimport { PropertyCollection }           from 'logic-entity';\nimport { IAjaxService }                 from './i-service-ajax.js';\nimport { BaseBindModel }                from './base-bind-model.js';\nimport { HTMLColumn }                   from './html-column.js';\nimport { BindCommand }                  from './bind-command.js';\n\nvar BindModel  = (function (_super) {\n    /**\n     * 바인드모델 Ajax\n     * \n     * @constructs BindModel\n     * @extends BaseBindModel\n     * @param {IBaseBindModel} [p_service] 서비스 객체\n     */\n    function BindModel(p_service) {\n        _super.call(this);\n\n        var $service;\n        var baseConfig = {\n            url: '',\n            method: 'GET',\n            responseType: 'json'\n        };\n\n        /**\n         * 별칭 내부값\n         * \n         * @member {string | number | boolean} BindModel#$service\n         * @readonly\n         * @private\n         */\n        Object.defineProperty(this, '$service', {\n            get: function() { return $service; },\n            set: function(nVal) { $service = nVal; },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * 바인딩 기본 config 을 설정한다.\n         * \n         * @member {Object} BindModel#baseConfig\n         */\n        Object.defineProperty(this, 'baseConfig', {\n            get: function() { return baseConfig; },\n            set: function(nVal) { \n                if (typeof nVal === 'object') {\n                    if (typeof nVal['url'] === 'string') baseConfig['url'] = nVal['url'];\n                    if (typeof nVal['baseURL'] === 'string') baseConfig['baseURL'] = nVal['baseURL'];\n                    if (typeof nVal['method'] === 'string') baseConfig['method'] = nVal['method'];\n                    if (typeof nVal['responseType'] === 'string') baseConfig['responseType'] = nVal['responseType'];\n                    for (var prop in nVal) {\n                        if (prop === 'url' || prop === 'method' || prop === 'responseType') continue;\n                        baseConfig[prop] = nVal[prop];\n                    }\n                } else throw new ExtendError(/EL06151/, null, [this.constructor.name]);\n            },\n            configurable: true,\n            enumerable: true\n        });\n\n        /**\n         * 바인딩 기본 config.url 을 설정한다.\n         * \n         * @member {String} BindModel#url\n         */\n        Object.defineProperty(this, 'url', {\n            get: function() { return baseConfig.url; },\n            set: function(nVal) { \n                if (!(_isString(nVal))) throw new ExtendError(/EL06152/, null, [this.constructor.name]);\n                baseConfig.url = nVal;\n            },\n            configurable: true,\n            enumerable: true\n        });\n\n        // default set\n        this._columnType = HTMLColumn;  // 기본 아이템 타입 변경\n\n        // 객체 등록\n        if (_isObject(p_service)) {\n            // 서비스 설정\n            this.$service = p_service;\n            this.setService(p_service);\n        }\n\n        // 예약어 등록\n        this.$KEYWORD = ['$service', 'baseConfig', 'url'];\n        this.$KEYWORD = ['getSelector', 'checkSelector'];\n    }\n    Util.inherits(BindModel, _super);\n\n    BindModel._UNION = [];\n    BindModel._NS = 'Meta.Bind';\n    BindModel._PARAMS = ['$service'];\n\n    // local function\n    function _isString(obj) {    // 공백아닌 문자 여부\n        if (typeof obj === 'string' && obj.length > 0) return true;\n        return false;\n    }\n\n    function _isObject(obj) {\n        if (obj !== null && typeof obj === 'object') return true;\n        return false;\n    }\n\n    /**\n     * 현재 객체의 guid 타입의 객체를 가져옵니다.  \n     * - 순환참조는 $ref 값으로 대체된다.  \n     * \n     * @param {number} p_vOpt 가져오기 옵션\n     * - opt = 0 : 참조 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 1 : 소유 구조의 객체 (_guid: Yes, $ref: Yes)  \n     * - opt = 2 : 소유 구조의 객체 (_guid: No,  $ref: No)  \n     * 객체 비교 : equal(a, b)  \n     * a.getObject(2) == b.getObject(2)  \n     * @param {object | array<object>} [p_owned] 현재 객체를 소유하는 상위 객체들\n     * @returns {object}  \n     */\n    BindModel.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        // var vOpt = p_vOpt || 0;\n        // var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        obj['$service']         = this.$service;\n        obj['baseConfig']    = this.baseConfig;\n\n        return obj;                        \n    };\n\n    /**\n     * 현재 객체를 초기화 후, 지정한 guid 타입의 객체를 사용하여 설정합니다.   \n     * \n     * @param {object} p_oGuid guid 타입의 객체\n     * @param {object} [p_origin] 현재 객체를 설정하는 원본 guid 객체  \n     * 기본값은 p_oGuid 객체와 동일\n     */\n    BindModel.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        \n        // var origin = p_origin ? p_origin : p_oGuid;\n\n        this.$service       = p_oGuid['$service'];\n        this.baseConfig  = p_oGuid['baseConfig'];\n    };     \n    \n    /**\n     * 셀렉터 검사\n     * \n     * @param {PropertyCollection} [p_collection] 공백시 items.selector 검사\n     * @param {boolean} [p_viewLog=false] 로그 출력 유무\n     * @returns {string[]} 빈 배열이면 성공\n     */\n    BindModel.prototype.checkSelector  = function(p_collection, p_viewLog) {\n        var collection = p_collection || this.items;\n        var arrFail = [];\n        var key;\n\n        // 유효성 검사\n        if (!(collection instanceof PropertyCollection)) throw new ExtendError(/EL06153/, null, []);\n\n        // 검사         \n        for (var i = 0; collection.count > i; i++) {\n            if (_isObject(collection[i].selector)) {\n                key = collection[i].selector.key;\n\n                if (!_isString(key) || !Util.validSelector(key)) {\n                    arrFail.push(key);\n                    if (p_viewLog) console.warn('selector 검사 실패 : %s ', key);\n                }\n            }\n        }\n        return arrFail;\n    };\n\n    /**\n     * 셀렉터 목록\n     * \n     * @param {PropertyCollection} [p_collection] 공백시 items.selector 검사\n     * @returns {string[]} 전체 selector \n     */\n    BindModel.prototype.getSelector  = function(p_collection) {\n        var collection = p_collection || this.items;\n        var arrSelector = [];\n\n        // 유효성 검사\n        if (!(collection instanceof PropertyCollection)) throw new ExtendError(/EL06154/, null, []);\n\n        // 검사         \n        for (var i = 0; collection.count > i; i++) {\n            if (_isObject(collection[i].selector)) {    \n                arrSelector.push(collection[i].selector);\n            }\n        }\n        return arrSelector;\n    };\n\n    /**\n     * 명령 추가\n     * \n     * @param {string} p_name \n     * @param {number} [p_option] \n     * @param {string | MetaTable} [p_bTable] 기본테이블\n     */\n    BindModel.prototype.addCommand  = function(p_name, p_option, p_bTable) {\n        var bindCommand;\n        var table;\n        \n        try {\n            // 유효성 검사\n            if (!_isString(p_name)) throw new ExtendError(/EL06155/, null, [typeof p_name]);\n\n            if (_isString(p_bTable)) table = this._tables[p_bTable];\n            else table = p_bTable || this._baseTable;\n\n            bindCommand = new BindCommand(this, p_option, table);\n            this.command.add(p_name, bindCommand);\n\n            return bindCommand;\n        } catch (error) {\n            throw new ExtendError(/EL06156/, error, []);\n        }\n    };\n\n    /**\n     * 서비스를 설정한다.\n     * \n     * @param {IBaseBindModel} p_service 서비스객체\n     * @param {boolean} [p_passTypeChk=false] 서비스객체 type 검사 통과 유무\n     */\n    BindModel.prototype.setService  = function(p_service, p_passTypeChk) {\n        var InterfaceTypeCheck = 1;\n\n        if (typeof p_passTypeChk !== 'boolean') p_passTypeChk = false;\n\n        try {\n            _super.prototype.setService.call(this, p_service, p_passTypeChk);    // 부모 호출\n                \n            if (!p_passTypeChk) Type.matchType(IAjaxService, p_service, InterfaceTypeCheck);\n\n            // base\n            if (typeof p_service['baseConfig'] === 'object') {\n                this.baseConfig = p_service['baseConfig'];\n            }\n            if (typeof p_service['url'] === 'string') {\n                this.url = p_service['url'];\n            }\n\n            // 사용자 서비스 객체 설정\n            for (var prop in p_service) {\n                if (p_service.hasOwnProperty(prop) && this.$KEYWORD.indexOf(prop) < 0) {\n                    // console.log(prop);\n                    this[prop] = p_service[prop];\n                }\n            }\n\n        // TODO: ExtendError 로 교체\n        } catch (error) {\n            throw new ExtendError(/EL06157/, error, []);\n        }               \n    };\n\n    return BindModel;\n\n}(BaseBindModel));\n\nexport default BindModel;\nexport { BindModel };"],"names":["isNode","globalThis","isDOM","process","versions","node","async","loadJSON","filePath","readFile","import","absolutePath","getLocalePath","jsonText","JSON","parse","response","fetch","json","error","filename","fileURLToPath","path","__filename","url","__dirname","dirname","resolve","window","baseURL","document","currentScript","src","Error","URL","href","_isObject","obj","Array","isArray","_deepMerge","target","source","key","hasOwnProperty","targetValue","sourceValue","Message","static","lang","default","_history","this","defaultLang","getMessageByCode","p_code","value","$storage","currentLang","String","importMessage","p_msg","p_path","length","indexOf","push","changeLanguage","p_lang","msg","i","localPath","console","warn","get","p_values","result","p_template","namedValues","indexedValues","replace","match","index","parseInt","undefined","_replacePlaceholders","code","intro","firstChar","substring","$intro","resetLang","autoDetect","locale","navigator","languages","language","Intl","DateTimeFormat","resolvedOptions","split","rawLocale","env","LANG","LC_ALL","LANGUAGE","_getLocale","ES010","ES011","ES012","ES013","ES021","ES022","ES023","ES031","ES032","ES033","ES041","ES042","ES043","ES044","ES051","ES052","ES053","ES054","ES061","ES062","ES063","ES064","ES065","ES066","EL01100","EL01101","EL01102","EL01103","EL01110","EL01111","EL01112","EL01113","EL01114","EL01115","EL01116","EL01117","EL01118","EL01120","EL01121","EL01122","EL01123","EL01124","EL01125","EL01126","EL01127","EL01130","EL01131","EL01132","EL01133","EL01140","EL01141","EL01142","EL01143","EL01150","EL01151","EL01152","EL01153","EL01154","EL01155","EL01156","EL01157","EL01200","EL01201","EL01202","EL01203","EL01204","EL01210","EL01211","EL01212","EL01213","EL01214","EL01215","EL01216","EL01217","EL01218","EL01219","EL01220","EL01221","EL01222","EL01223","EL01224","EL01225","EL01226","EL01227","EL01228","EL01229","EL0122A","EL0122B","EL0122C","EL0122D","EL0122E","EL0122F","EL01230","EL01231","EL01232","EL01233","EL01234","EL01235","EL01240","EL01241","EL01242","EL01243","EL01250","EL01251","EL01252","EL01253","EL01254","EL01255","EL01256","EL01257","EL01300","EL01301","EL01302","EL01303","EL01304","EL01305","EL01306","EL01307","EL01308","EL01309","EL0130A","EL0130B","EL0130C","EL01400","EL01401","EL01402","EL01403","EL01404","EL01405","EL01500","EL01501","EL01502","EL01503","EL01504","EL01505","EL01506","EL01507","EL01508","EL01509","EL01510","EL02100","EL02110","EL02111","EL02112","EL02113","EL02120","EL02121","EL02122","EL02130","EL02131","EL02140","EL02150","EL02151","EL02152","EL02153","EL02154","EL02160","EL02161","EL02162","EL02163","EL02164","EL02170","EL02171","EL02180","EL02181","EL02190","EL02191","EL02192","EL02300","EL03100","EL03110","EL03111","EL03112","EL03113","EL03114","EL03120","EL03121","EL03122","EL03200","EL03211","EL03212","EL03213","EL03220","EL03221","EL03222","EL03223","EL03224","EL03225","EL03226","EL03227","EL03230","EL03231","EL03232","EL03233","EL03234","EL03235","EL03236","EL03240","EL03241","EL0324","EL03243","EL03244","EL03245","EL03246","EL03247","EL03250","EL03251","EL03252","EL03253","EL03254","EL03255","EL03256","EL03257","EL03300","EL03310","EL03311","EL03312","EL03313","EL03314","EL03315","EL03320","EL0321","EL03322","EL0323","EL03330","EL03331","EL03332","EL03333","EL03334","EL03340","EL03341","EL03342","EL03343","EL03344","EL04100","EL04110","EL04111","EL04112","EL04113","EL04114","EL04115","EL04116","EL04117","EL04118","EL04119","EL041110","EL041111","EL041112","EL041113","EL04200","EL04210","EL04211","EL04212","EL04213","EL04214","EL04215","EL04220","EL04221","EL04222","EL04223","EL04224","EL04225","EL04226","EL04227","EL04228","EL04229","EL0422A","EL0422B","EL04300","EL04310","EL04311","EL04320","EL04321","EL04322","EL04323","WS011","EN","ExtendError","queue","prop","constructor","p_prop","p_codeVal","super","_prop","_msg","_build","_queue","message","RegExp","_buildMessageProp","queue_cnt","mark","j","_buildMsgQueue","toString","_global","OLD_ENV","Type","Date","_isPrimitiveObj","_isLiteral","_equalLiternal","obj1","obj2","_creator","type","_typeName","_getKeyCode","val","exec","toUpperCase","restoreArrowFunction","transformedCode","altRegex","altMatch","trim","params","body","forEach","assign","parts","extractedParam","originalParam","re","returnStatementMatch","returnType","_parseFunc","funBody","arrFunc","arrRetrun","return","arrParam","test","Function","_hasKindChoice","name","arr","concat","_hasKindArray","getAllProperties","hasObj","allProps","cur","is","props","Object","getOwnPropertyNames","prototype","getPrototypeOf","getTypes","ctor","hasUnion","union","proto","tempArr","call","__proto__","$getPrototype","isProtoChain","typeOf","extendType","strValue","firstStr","$type","ref","temp","def","_type","join","Number","Boolean","Symbol","BigInt","kind","toLowerCase","charAt","funcType","_err","slice","_isFillObj","keys","_isEmptyObj","_execAllow","extType","tarType","opt","pathName","eType","tType","sExt","sTar","list","k","success","$arrayAllow","arrTarget","m","n","$choiceAllow","$classAllow","$unionAllow","$functionAllow","_execMatch","_elem","_tar","tar","elem","$arrayMatch","$choiceMatch","subPath","$classMatch","listDefType","$unionMatch","$functionMatch","deepEqual","keys1","keys2","hasType","typeObject","typeObj","temp2","allowType","matchType","isAllowType","isMatchType","Util","getArrayDepth","p_elem","p_depts","level","createGuid","_p8","s","p","Math","random","deepCopy","p_target","nobj","inherits","create","superCtor","TempCtor","writable","configurable","enumerable","implements","p_ctor","p_obj","_interface","addCnt","defineProperty","arguments","$typeName","isImplementOf","EventEmitter","isLog","set","nVal","_isString","_NS","on","p_event","p_listener","addListener","once","self","onceListener","off","apply","idx","splice","removeListener","removeAllListeners","emit","args","listeners","log","IObject","instanceOf","equal","IMarshal","_guid","getObject","setObject","ICollection","add","remove","contains","IPropertyCollection","indexToKey","IElement","_name","clone","IList","_list","count","IListControl","del","has","find","ISerialize","output","load","IArrayCollection","insertAt","NamespaceManager","$createNsRefer","_elemTypes","allowOverlap","arrType","storage","stack","findElement","ns","pop","_$KEYWORD","_validName","sName","_getArray","sections","_UNION","_getPathObject","fullName","nsPath","getPath","init","addNamespace","p_ns","parent","delNamespace","p_fullName","oPath","namespace","$findElement","p_stringify","p_space","fun","nObj","full","space","stringify","p_str","p_parse","o","MetaRegistry","_getGuidList","oGuid","isGuidObject","register","p_meta","_ns","isMetaObject","registerClass","release","guid","p_oGuid","createMetaObject","p_origin","coClass","origin","getClass","argName","findSetObject","bind","createReferObject","$ref","createNsReferObject","findClass","$ns","setMetaObject","validObject","arrObj","_this","$validUniqueGuid","$validReference","$findGuid","$validCollection","hasGuidObject","arrOrigin","hasRefer","$hasRefer","$findObject","transformRefer","$linkReference","parentName","p_key","releaseClass","loadMetaObject","meta","str","MetaObject","_PARAMS","p_obj1","p_obj2","_compare","parentFunction","unionTypes","funName","types","$$findFunctionName","$findFunction","p_vOpt","vOpt","MetaElement","_super","p_name","p_owned","BaseCollection","p_owner","_owner","$KEYWORD","$event","$elements","$descriptors","newVal","arr1","_KIND","_onAdd","p_idx","_onAdded","_onRemove","_onRemoved","_onClear","_onCleared","_onChanging","p_nVal","p_oVal","_onChanged","_getPropDescriptor","p_enum","oVal","_remove","_elems","owner","clear","removeAt","p_pos","ArrayCollection","desc","owned","p_desc","pos","map","callback","thisArg","newArr","filter","reduce","initialValue","acc","some","every","findIndex","PropertyCollection","$keys","propName","regex","exists","keyToIndex","localesPath","EL02200","EL02210","EL02211","EL02220","EL02221","EL02230","EL02231","EL02232","EL02240","EL02241","EL02242","EL02250","EL02251","EL02252","EL05100","EL05110","EL05111","EL05112","EL05113","EL05114","EL05115","EL05116","EL05117","EL05118","EL05119","EL05120","EL05121","EL05122","EL05123","EL05130","EL05131","EL05132","EL05133","EL05134","EL05135","EL05136","EL05137","EL05138","EL05139","EL0513A","EL05140","EL05141","EL05142","EL05143","EL05144","EL05145","EL05146","EL05147","EL05148","EL05150","EL05151","EL05152","EL05160","EL05161","EL05162","EL05163","EL05164","EL05200","EL05210","EL05211","EL05212","EL05213","EL05214","EL05215","EL05216","EL05220","EL05221","EL05222","EL05223","EL05224","EL05300","EL05310","EL05311","EL05312","EL05320","EL05321","EL05322","EL05323","EL05324","EL05325","EL05326","EL05327","EL05328","EL05329","EL0532A","EL0532B","EL0532C","EL0532D","EL0532E","EL05330","EL05331","EL05332","EL05333","EL05334","EL05335","EL05336","EL05337","EL05338","EL05340","EL05341","EL05342","EL05343","EL05344","EL05345","EL05346","EL05347","EL05348","EL05350","EL05351","EL05352","EL05353","EL05354","EL05355","EL05356","EL05357","EL05358","EL05359","EL0535A","EL0535B","EL0535C","EL0535D","EL05360","EL05361","EL05400","EL05410","EL05411","EL05412","EL05413","EL05414","EL05420","EL05421","EL05422","EL05423","EL05424","EL05430","EL05431","EL05432","EL05433","EL05434","EL05435","EL05436","EL05440","EL05441","EL05442","EL05443","EL05444","EL05445","EL05446","EL05450","EL05451","EL05452","EL05453","EL05454","EL05455","EL05456","EL05457","EL05458","EL05459","EL0545A","EL0545B","IExportControl","write","IGroupControl","merge","copy","IImportControl","read","ISchemaControl","readSchema","writeSchema","ITransaction","acceptChanges","rejectChanges","TransactionQueue","p_collection","collection","commit","rollback","cmd","insert","p_etc","etc","delete","p_clone","update","select","TransactionCollection","_transQueue","autoChanges","MetaRow","p_entity","_entity","columns","alias","column","oldValue","_valueTypes","rows","_changeKey","p_oldKey","p_newKey","p_nValue","p_oValue","MetaRowCollection","p_row","p_isCheck","isCheck","entity","valid","BaseColumn","$key","$value","$alias","_VALUE_TYPE","_default","caption","columnName","existColumnName","existAlias","oldKey","MetaColumn","p_property","required","constraints","getter","setter","__val","_val","_oldVal","_load","addConstraint","p_regex","p_condition","constraint","condition","p_value","funReturn","ObjectColumn","defValue","meta2","BaseColumnCollection","p_baseType","_baseType","_ownerIsEntity","initValue","addValue","MetaViewColumnCollection","rObj","p_column","p_refCollection","_baseEntity","item","property","addEntity","MetaTableColumnCollection","BaseEntity","_metaSet","_isSchema","transformSchema","$transformColumn","ii","row","$transformRow","_buildEntity","p_callback","p_items","orignal","$createRow","newRow","_readEntity","p_option","$loadColumn","floor","$loadRow","_readSchema","p_isCreateRow","Column","$addColumn","reset","getValue","setValue","p_matchType","tarRow","tarRows","tarColumns","tempRows","$mergeByRow","$mergeByColumn","$mergeByRowFill","q","$mergeByColumnFill","p_filter","p_args","MetaView","view","columnNames","selectList","readData","p_createRow","viewName","tableName","schema","writeData","validate","MetaTable","metaSet","getChanges","MetaTableCollection","p_table","table","any","existTableName","p_baseEntity","baseEntity","items","MetaViewCollection","p_view","existViewName","MetaSet","tables","views","$transformTable","$transformView","setName","p_opt","$addEntity","key2","p_collec","p_baseCollec","prop2","hasChanges","EL01610","EL01611","EL01612","EL01613","EL01614","EL02310","EL02311","EL02320","EL02321","EL02330","EL02331","EL02340","EL02341","EL02350","EL02351","EL02360","EL02361","EL02370","EL02371","EL054600","EL054601","EL054602","EL054603","EL054604","EL054605","EL054606","EL054607","EL054608","EL054609","EL054610","EL054611","EL054612","EL054613","EL054614","EL054615","EL054616","EL054617","EL06100","EL06110","EL06111","EL06112","EL06113","EL06114","EL061200","EL061201","EL061202","EL061203","EL061204","EL061205","EL061206","EL061207","EL061208","EL061209","EL061210","EL061211","EL061212","EL061213","EL061214","EL061215","EL061216","EL061217","EL061218","EL061219","EL061220","EL061221","EL061222","EL061223","EL061224","EL061225","EL061226","EL061227","EL061228","EL061229","EL061230","EL061231","EL061232","EL061233","EL061234","EL061235","EL061236","EL061237","EL061238","EL061239","EL061240","EL061241","EL061242","EL061300","EL061301","EL061302","EL061303","EL061304","EL061305","EL061306","EL061307","EL061308","EL061309","EL061310","EL061311","EL061312","EL061313","EL061314","EL061315","EL061316","EL061317","EL061318","EL061319","EL061320","EL061321","EL061322","EL061323","EL061324","EL061325","EL061326","EL061327","EL061328","EL061329","EL061330","EL061331","EL061332","EL061333","EL061334","EL061335","EL061336","EL06140","EL06150","EL06151","EL06152","EL06153","EL06154","EL06155","EL06156","EL06157","EL06158","EL06160","EL06161","EL06162","EL06163","EL06164","EL06165","EL06166","EL06167","validSelector","p_selector","querySelector","loadScript","head","script","getElementsByTagName","createElement","defer","addEventListener","appendChild","IBind","_baseTable","addColumn","IBindCommand","outputOption","option","execute","IBindModel","fn","command","preRegister","preCheck","preReady","ICommandCallback","cbBegin","cbValid","cbBind","cbResult","cbOutput","cbEnd","IModelCallback","cbFail","cbError","cbBaseBegin","cbBaseValid","cbBaseBind","cbBaseResult","cbBaseOutput","cbBaseEnd","IService","mapping","IAjaxService","baseConfig","HTMLColumn","domType","isReadOnly","isHide","element","getFilter","setFilter","selector","newSelector","flag","textContent","innerHTML","getAttribute","style","getDocument","__sValue","_fVal","setAttribute","setDocument","BaseBind","p_fn","_onExecute","p_model","p_command","_onExecuted","BaseBindCommand","p_BaseBindModel","p_baseTable","misc","state","$newOutput","_model","_outputs","$model","newOutput","_getTableName","itemName","tName","_getColumnName","cName","_isAllName","oName","cmdName","p_views","p_bTable","_tables","_columnType","addColumnValue","setColumn","p_names","names","vName","newName","cntName","removeOutput","defOutput","kindOf","cache","thing","kindOfTest","typeOfTest","isUndefined","isArrayBuffer","isString","isFunction","isNumber","isObject","isPlainObject","toStringTag","iterator","isDate","isFile","isBlob","isFileList","isURLSearchParams","isReadableStream","isRequest","isResponse","isHeaders","allOwnKeys","l","len","findKey","_key","global","isContextDefined","context","isTypedArray","TypedArray","Uint8Array","isHTMLForm","isRegExp","reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","ret","defineProperties","isAsyncFn","_setImmediate","setImmediateSupported","setImmediate","postMessageSupported","postMessage","token","callbacks","data","shift","cb","setTimeout","asap","queueMicrotask","nextTick","utils$1","isBuffer","isFormData","FormData","append","isArrayBufferView","ArrayBuffer","isView","buffer","isBoolean","isStream","pipe","caseless","assignValue","targetKey","extend","a","b","stripBOM","content","charCodeAt","superConstructor","toFlatObject","sourceObj","destObj","propFilter","merged","endsWith","searchString","position","lastIndex","toArray","forEachEntry","next","done","pair","matchAll","regExp","matches","hasOwnProp","freezeMethods","toObjectSet","arrayOrString","delimiter","define","toCamelCase","p1","p2","noop","toFiniteNumber","defaultValue","isFinite","isSpecCompliantForm","toJSONObject","visit","reducedValue","isThenable","then","catch","AxiosError","config","request","captureStackTrace","status","utils","toJSON","description","number","fileName","lineNumber","columnNumber","from","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","dots","predicates","toFormData","formData","options","TypeError","metaTokens","indexes","visitor","defaultVisitor","useBlob","Blob","convertValue","toISOString","Buffer","isFlatArray","el","exposedHelpers","build","encode","charMap","encodeURIComponent","AxiosURLSearchParams","_pairs","buildURL","_encode","serialize","serializeFn","serializedParams","hashmarkIndex","encoder","InterceptorManager","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","id","h","transitionalDefaults","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","platform$1","isBrowser","classes","URLSearchParams","protocols","hasBrowserEnv","_navigator","hasStandardBrowserEnv","product","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","location","platform","formDataToJSON","buildPath","isNumericKey","isLast","arrayToObject","entries","parsePropPath","defaults","transitional","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","setContentType","helpers","toURLEncodedForm","formSerializer","_FormData","rawValue","parser","e","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","Accept","method","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders$1","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","isValidHeaderName","rawHeaders","parsed","line","parseHeaders","tokens","tokensRE","parseTokens","matcher","deleted","deleteHeader","normalize","format","normalized","w","char","formatHeader","targets","asStrings","first","computed","accessor","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","buildAccessors","transformData","fns","AxiosHeaders","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","reject","ERR_BAD_REQUEST","mapped","headerValue","progressEventReducer","listener","isDownloadStream","freq","bytesNotified","_speedometer","samplesCount","min","bytes","timestamps","firstSampleTS","tail","chunkLength","now","startedAt","bytesCount","passed","round","speedometer","lastArgs","timer","timestamp","threshold","invoke","clearTimeout","throttle","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","event","progressEventDecorator","throttled","asyncDecorator","isURLSameOrigin","isMSIE","protocol","host","port","userAgent","cookies","expires","domain","secure","cookie","toGMTString","decodeURIComponent","buildFullPath","requestedURL","allowAbsoluteUrls","isRelativeUrl","relativeURL","combineURLs","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","paramsSerializer","timeoutMessage","withCredentials","withXSRFToken","onUploadProgress","onDownloadProgress","decompress","beforeRedirect","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding","configValue","resolveConfig","newConfig","auth","btoa","username","password","unescape","xsrfValue","xhrAdapter","XMLHttpRequest","Promise","_config","requestData","requestHeaders","onCanceled","uploadThrottled","downloadThrottled","flushUpload","flushDownload","unsubscribe","signal","removeEventListener","onloadend","responseHeaders","getAllResponseHeaders","err","responseText","statusText","open","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","setRequestHeader","upload","cancel","abort","subscribe","aborted","parseProtocol","send","composeSignals","signals","controller","AbortController","reason","streamChunk","chunk","chunkSize","byteLength","end","readStream","stream","asyncIterator","reader","getReader","trackStream","onProgress","onFinish","iterable","readBytes","_onFinish","ReadableStream","pull","close","loadedBytes","enqueue","highWaterMark","isFetchSupported","Request","Response","isReadableStreamSupported","encodeText","TextEncoder","arrayBuffer","supportsRequestStream","duplexAccessed","hasContentType","duplex","supportsResponseStream","resolvers","res","_","ERR_NOT_SUPPORT","resolveBodyLength","getContentLength","size","_request","getBodyLength","knownAdapters","http","xhr","fetchOptions","composedSignal","toAbortSignal","requestContentLength","contentTypeHeader","flush","isCredentialsSupported","credentials","isStreamResponse","responseContentLength","responseData","renderReason","isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","throwIfCancellationRequested","throwIfRequested","dispatchRequest","VERSION","validators","deprecatedWarnings","validator","version","formatMessage","opts","ERR_DEPRECATED","spelling","correctSpelling","assertOptions","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","Axios$1","instanceConfig","interceptors","configOrUrl","dummy","boolean","function","baseUrl","withXsrfToken","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","responseInterceptorChain","promise","chain","onFulfilled","onRejected","getUri","Axios","generateHTTPMethod","isForm","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","axios","createInstance","defaultConfig","instance","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","c","Cancel","all","promises","spread","isAxiosError","payload","formToJSON","getAdapter","EXEC_STATE","BindCommand","p_outputOption","_execBegin","_execValid","bReturn","_execFail","_execBind","dataName","_ajaxCall","_execResult","p_data","p_res","_execOutput","loadOption","$readOutput","$setOutputValue","cnt","readOpt","rowIdx","_execEnd","p_status","_execError","p_error","p_config","_ajaxSuccess","post","put","patch","BaseBindModel","DEFALUT_TABLE_NAME","addTable","_readItem","p_bEntity","p_cmds","cmds","setMapping","p_mapping","mappingCollection","$processMapping","isAllCommand","addCommand","setService","p_service","p_passTypeChk","propObject","prop3","prop4","onExecute","onExecuted","bindModel","BindModel","$service","checkSelector","p_viewLog","arrFail","getSelector","arrSelector","bindCommand"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109]}